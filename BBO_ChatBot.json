{
  "name": "Bot_BBO_Nộp",
  "nodes": [
    {
      "parameters": {
        "content": "ADA - Bamboo: Telegram Chatbot @GovernCardanoBot Template\n\nProduct Introduction\nADA - Bamboo: Telegram Chatbot Template is a comprehensive, ready-to-use solution designed to help developers quickly build and deploy effective chatbots on the Telegram platform. This template provides a complete workflow, supporting the automation of user interactions, natural language processing (NLP), and seamless integration with modern AI tools.\n\nWith a flexible architecture and high customizability, chatbots developed from this template can intelligently receive and respond to messages, making them suitable for various purposes. These include customer service, personal virtual assistants, technical support, or creating engaging interactive experiences for marketing campaigns.\n\nDevelopment Team\nADA - Bamboo Team\n\nTemplate Structure\nThe template is organized into clear functional sections, facilitating easy management and development:\n\n- Command Functionality (Yellow): Focuses on processing commands from users such as /start, /help, /command, etc.\n- Button Functionality (Blue): Handles actions triggered by buttons (callback queries) within the application interface.\n- Koios API Integration (Purple): Processes button actions (callback queries) to connect with the Koios API, retrieving information about DReps, SPOs, and more.\n- Automated Notifications (Green): Manages the sending of automated notifications to users and administrators.\n- AI Question Answering (Red and Gray): Handles the function of answering user questions, connected to a local AI for analysis and accurate response generation.\n",
        "height": 520,
        "width": 1360,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6120,
        1240
      ],
      "id": "96b21b71-c763-4c02-966f-dd6f9a31386f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "060a8281-3bc5-4f0c-9b19-fa636d752089",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/",
                    "operator": {
                      "type": "string",
                      "operation": "notStartsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text_message"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "3acc4f3a-f5d9-4d99-a3dc-e27c6dfcf4a4"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_start"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bc442685-fce4-4397-99ef-375c7a97ff7f",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/help",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_help"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b957fdf3-c014-437a-adc5-929ee986b1a7",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/find",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_filter"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "647eb273-73e4-4a80-8f1e-da2fcf9ffa7e",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/account",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_account"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7a92ace6-f9ca-46ac-b707-2d838b157f20",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/feedback",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_feedback"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c46a3dc7-b7ea-44c6-9ee6-e13b5fd79eaa",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/f",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "feed_user"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7e2c37d4-c9fa-48de-b607-5893c8c03700",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/id",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update_onchain_user"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9c44e14-ecaa-40a2-a9b9-d627b418ea04",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/add",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update_address"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7afa56ca-d087-445c-b49a-2567b8f88229",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reset chat"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0fe2881d-0c34-4178-bafa-0b8dd4dcf946",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "=/",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "commands"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2260,
        3040
      ],
      "id": "c9ae3384-da43-4c83-ac1c-c87d641f3ca1",
      "name": "Switch"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $('AI Agent').item.json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4080,
        4420
      ],
      "id": "baabaec2-2313-42ff-8a8c-cd5ed2fee0da",
      "name": "Message_Response",
      "webhookId": "cd64816e-b876-4a7f-a04e-796b854783a5",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}",
        "options": {
          "systemMessage": "=prompt self setup"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        3440,
        4440
      ],
      "id": "96d48b33-30c0-46aa-a66f-aeabe097c950",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "content": "Ai Agent: answers questions from users.",
        "height": 440,
        "width": 1380,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3140,
        4340
      ],
      "id": "6561187b-82e3-4910-8027-1e2c9b3cd51a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "✨<b>Hãy chọn một tùy chọn để bắt đầu:</b>\n\n❓Trợ giúp: <i>Gợi ý lệnh</i>\n💡Bộ lọc: <i>Câu hỏi gợi ý</i>\n📝Phản hồi: <i>Đóng góp ý kiến</i>\n👤Tài khoản: <i>Thông tin tài khoản</i>\n\n<b>Hoặc bạn có thể sử dụng các lệnh sau:</b>\n\n❓ /help - <i>Gợi ý lệnh</i>\n💡 /find - <i>Câu hỏi gợi ý</i>\n📝 /feedback - <i>Đóng góp ý kiến</i>\n👤 /account - <i>Thông tin tài khoản</i>\n♻️ /reset - <i>Làm sạch cuộc trò chuyện</i>\n🔄 /add - <i> Cập nhật địa chỉ ví</i>\n🔄 /id - <i> Cập nhật ID Onchain</i>\n\nBạn có thể tham gia nhóm cộng đồng tại: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Trợ giúp",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Tài khoản",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Đánh giá",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Câu hỏi ",
                    "additionalFields": {
                      "callback_data": "find "
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2240,
        740
      ],
      "id": "483b2acc-3142-40b6-975c-faaf6eafdbb0",
      "name": "Mes_Help_Vi",
      "webhookId": "c12380f5-8292-48bd-be98-c12f484a6e00",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "✨<b>Choose an option to get started:</b>\n\n❓Help: <i>Command suggestions</i>\n💡Filter: <i>Suggested questions</i>\n📝Feedback: <i>Share your feedback</i>\n👤Account: <i>Account information</i>\n\n<b>Or you can use the following commands:</b>\n\n❓ /help - <i>Command suggestions</i>\n💡 /find - <i>Suggested questions</i>\n📝 /feedback - <i>Share your feedback</i>\n👤 /account - <i>Account information</i>\n♻️ /reset - <i>Clean up the conversation</i>\n🔄 /add - <i>Update wallet address</i>\n🔄 /id - <i>Update Onchain ID</i>\n\nYou can join our community group at: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Help",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Account",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Feedback",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Filter",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2240,
        980
      ],
      "id": "dec572f3-a015-4337-9bdb-c78e8118438d",
      "name": "Mes_Help_En",
      "webhookId": "57758eb9-24b2-4e9a-b582-5dc2565859d0",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=Xin chào <b>{{ $('Telegram Trigger').item.json.message.chat.username }}</b>\nChào mừng bạn đến với <b>GovernCardanoBot</b> – trợ lý ảo thông minh của bạn!\n\n📖 <b>GovernCardanoBot</b> được phát triển bởi <b>Bamboo Team</b>, chuyên hỗ trợ giải đáp mọi thắc mắc về <b>Blockchain Cardano</b> và các hoạt động quản trị liên quan.\n\n✨<b>Hãy chọn một tùy chọn để bắt đầu:</b>\n❓ /help - <i>Gợi ý lệnh</i>\n💡 /find - <i>Câu hỏi gợi ý</i>\n📝 /feedback - <i>Đóng góp ý kiến</i>\n👤 /account - <i>Thông tin tài khoản</i>\n♻️ /reset - <i>Làm sạch cuộc trò chuyện</i>\n\nBạn có thể tham gia nhóm cộng đồng tại: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Trợ giúp",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Tài khoản",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝 Đánh giá",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Câu hỏi",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2260,
        1380
      ],
      "id": "b1ea2692-73d4-4681-b01f-6ef257c9f87f",
      "name": "Mes_Start_Vi",
      "webhookId": "47ad3512-5a12-46f3-92c9-d3fe90892b17",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=Hello <b>{{ $('Telegram Trigger').item.json.message.chat.username }}</b>! \nWelcome to <b>GovernCardanoBot</b> – your smart virtual assistant!\n\n📖 <b>GovernCardanoBot</b> is powered by <b>Bamboo Team</b>, designed to answer all your questions about the <b>Cardano Blockchain</b> and its governance activities.\n\n✨<b>Choose an option to get started:</b>\n\n❓ /help - <i>Command suggestions</i>\n💡 /find - <i>Suggested questions</i>\n📝 /feedback - <i>Share your feedback</i>\n👤 /account - <i>Account information</i>\n♻️ /reset - <i>Clean up the conversation</i>\n\nYou can join our community group at: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Help",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Account ",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Feedback",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Filter",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2260,
        1600
      ],
      "id": "3bdf81e6-9161-4456-970f-a223f537fdae",
      "name": "Mes_Start_En",
      "webhookId": "058dcd46-0589-4a68-b353-666b751c1410",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "9347071f-e88c-45e8-b65e-6b528f6a03ed",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2040,
        1480
      ],
      "id": "17674ef0-add4-4a97-9cab-cdb7abdc0fbd",
      "name": "If_Lang_Start"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "0ca45c62-b397-4851-9c5a-6280dd54590e",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1920,
        840
      ],
      "id": "bed55d2b-6d87-4e8b-8489-0a516d0b4a06",
      "name": "If_Lang_Help"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "13eaa743-02a0-44fd-a73e-25531343fb95",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1160,
        4460
      ],
      "id": "52076cf8-42ed-4a4e-971a-0d7c58e638e5",
      "name": "If_Command"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "✨<b>Danh sách câu lệnh:</b>\n/start - <i>Khởi động chatbot</i>\n/help - <i>Gợi ý lệnh</i>\n/find - <i>Câu hỏi gợi ý</i>\n/feedback - <i>Đóng góp ý kiến</i>\n/account - <i>Thông tin tài khoản</i>\n/id - <i>Cập nhật ID Onchain</i>\n/add - <i> Cập nhật địa chỉ ví</i>\n/reset - <i>Làm sạch cuộc trò chuyện</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1460,
        4340
      ],
      "id": "900c6ad5-28b9-4da2-aae7-664d48b11503",
      "name": "Mes_Com_Vi",
      "webhookId": "48fa2eb0-7976-4ff7-9876-de3f3c1e9353",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "f7f438e3-7084-4502-b2cd-f681e2e79824",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1860,
        300
      ],
      "id": "a832f77b-be3a-4c43-864a-c98e1c3a0826",
      "name": "If_Find"
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch').item.json.message.from.id }}",
        "text": "=✨<b>Chọn một câu hỏi gợi ý để bắt cuộc trò chuyện!</b>\n<i>Vui lòng nhấn vào một số từ 1 đến 10 để xem câu hỏi</i>:\n\n{{ $json.random_questions }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[0][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[0][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[1][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[1][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[2][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[2][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[3][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[3][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[4][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[4][0].callback_data }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[5][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[5][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[6][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[6][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[7][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[7][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[8][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[8][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[9][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[9][0].callback_data }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2340,
        200
      ],
      "id": "f5c3ec47-9023-48ab-979f-ccbaee99a27b",
      "name": "Mes_Filter_Vi",
      "webhookId": "1ab1f64f-0547-4a8e-93fd-8b5e8f2fd364",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "✨<b>List of commands:</b>\n/start - <i>Start chatbot</i>\n/help - <i>Command suggestions</i>\n/find - <i>Suggested questions</i>\n/feedback - <i>Share your feedback</i>\n/account - <i>Account information</i>\n/id - <i>Update ID Onchain</i>\n/add - <i>Update wallet address</i>\n/reset - <i>Clean up the conversation</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1460,
        4560
      ],
      "id": "8e54bf4c-b3d3-46ca-a5ab-eca3aa6506b9",
      "name": "Mes_Com_En",
      "webhookId": "f45e0c53-4d1d-4206-a1be-c20805c280f0",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "791ff0db-6349-461a-bc25-e775add7e88f",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6780,
        3560
      ],
      "id": "e122a45f-3449-4491-afc0-56c6a49c2c70",
      "name": "If_Call_Help"
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨<b>Hãy chọn một tùy chọn để bắt đầu:</b>\n\n❓Trợ giúp: <i>Gợi ý lệnh</i>\n💡Bộ lọc: <i>Câu hỏi gợi ý</i>\n📝Phản hồi: <i>Đóng góp ý kiến</i>\n👤Tài khoản: <i>Thông tin tài khoản</i>\n\n<b>Hoặc bạn có thể sử dụng các lệnh sau:</b>\n\n❓ /help - <i>Gợi ý lệnh</i>\n💡 /find - <i>Câu hỏi gợi ý</i>\n📝 /feedback - <i>Đóng góp ý kiến</i>\n👤 /account - <i>Thông tin tài khoản</i>\n\nBạn có thể tham gia nhóm cộng đồng tại: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Trợ giúp",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Tài khoản",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Đánh giá",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Câu hỏi",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -6780,
        3320
      ],
      "id": "04fe200b-b42c-4c4f-b991-ca5a1a197b50",
      "name": "Help_Vi",
      "webhookId": "b239d134-6523-49c1-bac0-17b1cab47167",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨<b>Choose an option to get started:</b>\n\n❓Help: <i>Command suggestions</i>\n💡Filter: <i>Suggested questions</i>\n📝Feedback: <i>Share your feedback</i>\n👤Account: <i>Account information</i>\n\n<b>Or you can use the following commands:</b>\n\n❓ /help - <i>Command suggestions</i>\n💡 /find - <i>Suggested questions</i>\n📝 /feedback - <i>Share your feedback</i>\n👤 /account - <i>Account information</i>\n\nYou can join our community group at: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Help",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Account",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Feedback",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Filter ",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -6460,
        3540
      ],
      "id": "402887d9-9287-405b-88af-2ae472f1d72d",
      "name": "Help_En",
      "webhookId": "ad588fec-ce2e-457a-8afd-12da05264fb8",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d5eaffb-93cc-4b5e-9008-86db761771fa",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5940,
        3580
      ],
      "id": "82368958-a424-4f80-9c36-9f6b37d697bc",
      "name": "If_Call_Filter"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code7').item.json.question }}",
        "options": {
          "systemMessage": "=prompt self setup"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -3500,
        5300
      ],
      "id": "94554399-5f88-4f48-bfde-6cfd38becaca",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "3daaadcc-b1d9-413e-8e73-04a18b2847d3",
              "leftValue": "={{ $json.user_exists }}",
              "rightValue": "false",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2660,
        1480
      ],
      "id": "e3cbbf90-e51b-484c-9e84-abbb7d9989d2",
      "name": "If_exist"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "isactive": true,
            "allownoti": true,
            "telegramid": "={{ $('Telegram Trigger').item.json.message.from.id }}",
            "username": "={{ $('Telegram Trigger').item.json.message.from.username }}",
            "roleid": 3
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2840,
        1320
      ],
      "id": "0eb1064b-725e-405f-bb57-8a479044b650",
      "name": "Insert_user",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨Command /start✨\n📥 When the user sends the command /start to start using the chatbot:\n\n🔎 The system will perform the following checks:\n\n✅ If the user already has an account on the BBO system → Allow to continue using immediately.\n\n🆕 If the user is a new user → The system will automatically create a new account on the BBO platform, using the basic information provided.",
        "height": 620,
        "width": 1680
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1880,
        1180
      ],
      "id": "42c50b84-8381-4e45-9f46-45457d390823",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "/help✨ — Need help?\nSend this command to get instructions on how to use the chatbot!\n🤖 The chatbot will suggest common commands and how to use them to help you work faster and more efficiently!",
        "height": 500,
        "width": 960
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1820,
        620
      ],
      "id": "7acc87c2-ce9f-4efe-8f04-2e3e78c31b8e",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "✨ /find command ✨\nThe system will suggest common questions, suitable for your needs to help you start a conversation more easily.",
        "height": 440,
        "width": 1280
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1740,
        120
      ],
      "id": "399b40b1-4371-4e6c-97c0-788199210f35",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1000,
        -860
      ],
      "id": "bbd18025-314b-4f8f-82d8-86134c0378ec",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.message.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1760,
        -200
      ],
      "id": "42b3effc-92de-46d1-b764-e481bb54280d",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨Command /account✨\nDisplay user information",
        "height": 1200,
        "width": 1840
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        120,
        -1100
      ],
      "id": "32a02961-e288-4789-b280-fcc2c1d8a37d",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "updates": [
          "message",
          "callback_query"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -1440,
        3220
      ],
      "id": "0da07197-5bc1-48f6-8f47-c6b1ff9bbaa1",
      "name": "Telegram Trigger",
      "webhookId": "af26a24b-1536-48b1-a599-57476b2a953a",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨Command✨ Show suggested command",
        "height": 380,
        "width": 920
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1080,
        4320
      ],
      "id": "276f7cb6-e6c0-4bea-82db-28d8a4f20ec3",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -6740,
        4820
      ],
      "id": "8d67a100-b57b-4f7e-88bb-2ba9149c62d7",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "cee73a9e-9d6c-4203-8f85-c775c3ae6241",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3720,
        3580
      ],
      "id": "d60c73b5-1af7-4900-aa88-8163855e19ae",
      "name": "If3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "bcbff913-39c0-4fbe-9947-0abb959a23d9",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        200,
        4580
      ],
      "id": "568da5bb-5416-4ac2-a023-f47c61a1ecfb",
      "name": "If4"
    },
    {
      "parameters": {
        "content": "✨Command /feedback ✨\nDisplays syntax to help users write product reviews",
        "height": 500,
        "width": 840
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        4320
      ],
      "id": "ba8ed111-bf54-445b-b819-dd3805a984ae",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "3c219d29-93a0-4566-8bd8-4fc301282720",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1120,
        5080
      ],
      "id": "dec93867-643a-4e14-a180-fd0f676ee4f8",
      "name": "If5"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_feedback",
          "mode": "list",
          "cachedResultName": "bbo_feedback"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "userid": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "comment": "={{ $('Telegram Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "userid",
              "displayName": "userid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "rating",
              "displayName": "rating",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "comment",
              "displayName": "comment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "createdat",
              "displayName": "createdat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1460,
        4860
      ],
      "id": "fac83a25-7cc5-4c08-8d8d-f5e1eb0008d4",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨ Command /f ✨\nRecord user comments into the system and send notifications to the admin",
        "height": 560,
        "width": 1400
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        4740
      ],
      "id": "35340a10-1de7-4232-ad32-b6e775ff259d",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ba26ab85-8f3f-4de5-a4f8-f3a48bc17a26",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4440,
        3560
      ],
      "id": "35e21986-3dfc-43cf-aa45-d9d8b8a6d3ba",
      "name": "If6"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telegramid": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
            "roleid": "={{ \n  (() => {\n    const roleMap = {\n      xxxx [your_role]\n    };\n    return roleMap[$('Telegram Trigger').item.json.callback_query.data] || 0;\n  })()\n}}\n"
          },
          "matchingColumns": [
            "telegramid"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "point",
              "displayName": "point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5280,
        5300
      ],
      "id": "531db161-497c-4b4f-adf2-456b3e30bff5",
      "name": "Postgres6",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7cb4cfaf-6361-4885-9ed4-80614e201278",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4980,
        5300
      ],
      "id": "b04a9d7c-2207-4244-abee-32764955e6fa",
      "name": "If7"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telegramid": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
            "allownoti": "={{ $('Telegram Trigger').item.json.callback_query.data === \"turn_on\" ? true : false }}"
          },
          "matchingColumns": [
            "telegramid"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "point",
              "displayName": "point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5280,
        4940
      ],
      "id": "fdf00bc2-2a8c-4155-8b8d-104916e761f6",
      "name": "Postgres7",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7cb4cfaf-6361-4885-9ed4-80614e201278",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4980,
        4940
      ],
      "id": "47c00b89-e4b1-49b2-917a-9734af869ce9",
      "name": "If8"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 23,
              "triggerAtMinute": 59
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -5980,
        2020
      ],
      "id": "b4af184a-5265-4128-b9f6-2ed5d6e96b44",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH question_stats AS (\n  SELECT \n    session_id,\n    LEAST(COUNT(*), 50) AS question_count\n  FROM public.n8n_chat_histories\n  WHERE DATE(\"CreatedOnUtc\") = CURRENT_DATE\n    AND message->>'type' = 'human'\n  GROUP BY session_id\n)\nUPDATE bbo_user\nSET point = point + qs.question_count\nFROM question_stats qs\nWHERE bbo_user.telegramid = qs.session_id::bigint;\n\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5720,
        2020
      ],
      "id": "27713e99-0ecc-4b2d-8ffb-85aac9bd943d",
      "name": "Postgres8",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=✨Hệ thống đã cập nhật điểm  cho người dùng thành công!\n\nNhấn vào button bên dưới để kiểm tra!\n\nNgày: {{ $json.formattedDate }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🟡Kiểm tra",
                    "additionalFields": {
                      "callback_data": "check_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5040,
        2020
      ],
      "id": "554a6e5f-c02f-4335-b31a-05901b699525",
      "name": "Telegram10",
      "webhookId": "6f8b1671-2a8f-4a7f-bea0-faa98b77c29b",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { chat_id: \"your_telegramid\" } },\n\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5500,
        2020
      ],
      "id": "6a9771c7-a622-4853-8de6-fdcf51153b2e",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "✨Workflow to update user points: ✨\n\n",
        "height": 360,
        "width": 1360,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6100,
        1880
      ],
      "id": "63519a4d-bd9d-46e7-a8c9-2cd94cb689ac",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "1480d340-c8ab-4069-9877-fec1725197dd",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.data }}",
              "rightValue": "check_point",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4060,
        4840
      ],
      "id": "c8a4f397-e737-449b-a4af-efc6a704df2b",
      "name": "If9"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT username, telegramid, point\nFROM bbo_user\nWHERE roleid <> 1\nORDER BY point DESC;\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3800,
        4820
      ],
      "id": "778ff1dc-673b-4094-b8fb-f5c844a9282c",
      "name": "Postgres9",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { chat_id: \"1130536200\" } },\n  { json: { chat_id: \"1614089714\" } },\n  { json: { chat_id: \"7860424712\" } },\n  { json: { chat_id: \"2022256272\" } },\n  { json: { chat_id: \"7711678283\" } }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3300,
        4820
      ],
      "id": "508a5355-28db-4a5f-b845-ad640b984c3a",
      "name": "Code1"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $('codefunction').item.json.text }}\n",
        "replyMarkup": "=none",
        "forceReply": {},
        "replyKeyboardOptions": {},
        "replyKeyboardRemove": {},
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3100,
        4820
      ],
      "id": "041e737b-4c7a-44ca-ac16-2ffe5b5e14b2",
      "name": "Telegram11",
      "webhookId": "40d9c391-40a5-44b1-89f2-54d2e23f3dc6",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let message = \"✨Danh sách điểm thưởng của người dùng✨\\n\\n\";\n\nfor (let i = 0; i < items.length; i++) {\n  const user = items[i].json;\n  message += `👤 ${user.username} - ${user.telegramid}: ${user.point} BBO\\n`;\n}\n\nreturn [{ json: { text: message } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3540,
        4820
      ],
      "id": "f9294659-963e-42a2-94ec-437aaafddd6b",
      "name": "codefunction"
    },
    {
      "parameters": {
        "content": "✨Callback query✨\nHelp admin check users' points on the system",
        "height": 400,
        "width": 1380,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4200,
        4660
      ],
      "id": "4bcd4d33-eb3d-4844-bd6a-af2ecbf5375d",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "name": "documents",
        "description": "Contains all the user's documents that you can check for context to answer user questions.",
        "topK": 5
      },
      "id": "7428e5f9-5bd7-4da5-8510-ed8b1596746b",
      "name": "Retrieve Documents1",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -3000,
        5540
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "your_table"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        -3300,
        5580
      ],
      "id": "41109b0e-2768-4274-9ecd-89b6cd0d9e2e",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "nldB6zRahygpLVhq",
          "name": "Supabase  Phuc's account "
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const date = new Date($('Schedule Trigger').item.json.timestamp);\nconst day = String(date.getDate()).padStart(2, '0');\nconst month = String(date.getMonth() + 1).padStart(2, '0'); // Tháng bắt đầu từ 0\nconst year = date.getFullYear();\n\nconst formattedDate = `${day}-${month}-${year}`;\n\nreturn [{\n  json: {\n    ...$json,\n    formattedDate\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5280,
        2020
      ],
      "id": "0059d37c-de98-4983-9c35-da64b15ef9f2",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { chat_id: \"7860424712\" } },\n  { json: { chat_id: \"1614089714\" } },\n  { json: { chat_id: \"1130536200\" } }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1800,
        4860
      ],
      "id": "43e239c8-3628-470e-be6b-1675f349e10e",
      "name": "Code4"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=✨Thông báo từ hệ thống ✨\n\nNhận được ý kiến mới từ người dùng: <b> {{ $('Telegram Trigger').item.json.message.chat.username }}</b>\n\nNội dung đánh giá: {{ $('Telegram Trigger').item.json.message.text }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2140,
        4860
      ],
      "id": "0a07545f-5566-4c06-ba9e-ca64197edda0",
      "name": "Telegram13",
      "webhookId": "30a584bd-97d8-447c-b713-b00550a946f6",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "60b6d8d9-95cf-42e7-be05-4949dd89d4f2",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3000,
        3560
      ],
      "id": "d55b5927-90a5-4628-ba44-5407b5f14d8c",
      "name": "If10"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "48209589-e551-46e4-925a-3525424b77b6"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DREP"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "62a4b49c-98c0-471e-9d74-deca7155d523",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 4,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SPO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fe802ac8-f0c9-4750-8340-1039766562f8",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 6,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Committe"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "97a85122-7ba0-440b-acef-92377e6aada8",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "User"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1700,
        -680
      ],
      "id": "17598ab3-4251-414e-916d-2707810047f1",
      "name": "Switch1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1000,
        -160
      ],
      "id": "80593e3c-e2ce-42e5-9069-9161c2717e33",
      "name": "If13"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        260,
        -880
      ],
      "id": "a1fd230b-de2f-4200-9fb1-3d3777fe3e70",
      "name": "If14"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "3c219d29-93a0-4566-8bd8-4fc301282720",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1180,
        5960
      ],
      "id": "36310929-af6f-4d70-bac4-950be1d39a6d",
      "name": "If12"
    },
    {
      "parameters": {
        "content": "✨ /id command ✨\nUpdate user's on-chain id",
        "height": 880,
        "width": 1120
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        940,
        5360
      ],
      "id": "a46e14d1-4784-4355-be4c-9d5ba68cd1a1",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "onchainId": "={{ $('Code9').item.json.trimmedText }}",
            "telegramid": "={{ $('Telegram Trigger').item.json.message.from.id }}"
          },
          "matchingColumns": [
            "telegramid"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "point",
              "displayName": "point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "onchainId",
              "displayName": "onchainId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1780,
        5960
      ],
      "id": "a471128f-bc84-4bd9-b8d1-6ef8e9d03cce",
      "name": "Postgres14",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=✨Thông báo từ hệ thống - Có user đăng ký mới: {{ $('Telegram Trigger').item.json.message.from.username }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3240,
        1320
      ],
      "id": "b0038e24-2cf1-42d1-9508-f1c012e32871",
      "name": "Telegram23",
      "webhookId": "2cba0a49-5322-46e9-b940-6e28652455ff",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { chat_id: \"1130536200\" } },\n  { json: { chat_id: \"1614089714\" } },\n  { json: { chat_id: \"7860424712\" } },\n  { json: { chat_id: \"2022256272\" } },\n  { json: { chat_id: \"7711678283\" } }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3040,
        1320
      ],
      "id": "22318661-da80-4d26-8d54-75b2d214d7de",
      "name": "Code8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        260,
        -160
      ],
      "id": "bee6f8bc-656e-4bfe-b9f0-9608aadb7158",
      "name": "If16"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "142191f1-8224-4116-81cd-704a059953f6",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1120,
        3220
      ],
      "id": "8fa00630-e5c3-410e-b902-23e05400b631",
      "name": "If15"
    },
    {
      "parameters": {
        "jsCode": "const questions = [list_question];\n\n// Chọn ngẫu nhiên 3 câu hỏi không trùng lặp\nconst shuffled = questions.sort(() => 0.5 - Math.random());\nconst selectedQuestions = shuffled.slice(0, 10); // Lấy 3 câu hỏi\n\n// Tạo inline keyboard (trả về đối tượng JSON trực tiếp)\nconst inlineKeyboard = {\n  inline_keyboard: selectedQuestions.map((_, index) => [\n    {\n      text: `${index + 1}`, // Hiển thị số trên button\n      callback_data: `question_${index}` // Gán callback_data với chỉ số\n    }\n  ])\n};\n\n// Tạo định dạng đầu ra cho câu hỏi\nconst formattedQuestions = selectedQuestions\n  .map((question, index) => `${index + 1}. ${question}`)\n  .join('\\n');\n\n// Trả về đối tượng JSON\nreturn [{\n  json: {\n    random_questions: formattedQuestions,\n    reply_markup: inlineKeyboard, // Trả về đối tượng thay vì chuỗi\n    selected_questions: selectedQuestions\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2100,
        200
      ],
      "id": "2d3942dc-be30-4d6c-a737-4e48bdfb9d46",
      "name": "CodeRandom"
    },
    {
      "parameters": {
        "jsCode": "const questions = [list_question];\n// Chọn ngẫu nhiên 3 câu hỏi không trùng lặp\nconst shuffled = questions.sort(() => 0.5 - Math.random());\nconst selectedQuestions = shuffled.slice(0, 10); // Lấy 3 câu hỏi\n\n\n// Tạo inline keyboard (trả về đối tượng JSON trực tiếp)\nconst inlineKeyboard = {\n  inline_keyboard: selectedQuestions.map((_, index) => [\n    {\n      text: `${index + 1}`, // Hiển thị số trên button\n      callback_data: `question_${index}` // Gán callback_data với chỉ số\n    }\n  ])\n};\n\n// Tạo định dạng đầu ra cho câu hỏi\nconst formattedQuestions = selectedQuestions\n  .map((question, index) => `${index + 1}. ${question}`)\n  .join('\\n');\n\n// Chuyển selected_questions thành chuỗi JSON\nconst selectedQuestionsJson = JSON.stringify(selectedQuestions);\n// Trả về đối tượng JSON\nreturn [{\n  json: {\n    random_questions: formattedQuestions,\n    reply_markup: inlineKeyboard, // Trả về đối tượng thay vì chuỗi\n    selected_questions: selectedQuestionsJson // Chuỗi JSON thay vì mảng\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2100,
        400
      ],
      "id": "8ff1fe7e-6901-44d9-a854-828438101a8d",
      "name": "CodeRandom1"
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "Typing...",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3240,
        4420
      ],
      "id": "13810d2e-8b50-4daf-a2f5-81d06530c2cc",
      "name": "Telegram27",
      "webhookId": "fdbe1b75-d3f1-4b53-ba3f-105c4a2402ba",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Telegram27').item.json.result.chat.id }}",
        "messageId": "={{ $('Telegram27').item.json.result.message_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3880,
        4420
      ],
      "id": "aca5b415-e8c3-4ea1-8c62-070978f0c8f8",
      "name": "Telegram28",
      "webhookId": "89e1ec51-2196-4352-ac52-cf971c4e1caf",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch').item.json.message.from.id }}",
        "text": "=✨<b>Choose a suggested question to start the conversation!</b>\n<i>Please press a number from 1 to 10 to view the question:</i>\n\n{{ $json.random_questions }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[0][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[0][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[1][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[1][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[2][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[2][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[3][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[3][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[4][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[4][0].callback_data }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[5][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[5][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[6][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[6][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[7][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[7][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[8][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[8][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[9][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[9][0].callback_data }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2340,
        400
      ],
      "id": "362211be-a1b5-453d-b3bc-1033e567709c",
      "name": "Mes_Filter_EN",
      "webhookId": "ff5c0e71-ae63-4b35-9616-a8c089f19777",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "26d0d0f5-34c8-4569-928b-c5892fb09fcd",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "=help",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_help"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3e01a50c-5f66-4eb9-91a8-ed665c061451",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "find",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query-fild "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b2202515-d4d3-4a60-a8cf-ccfc45a0b2d8",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "account",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query-account "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bdeaa39a-6027-4480-b190-c9ecb15842d9",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "feedback",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query-feedback"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c1397e6d-ba52-4cd2-b65a-04f9706e3312",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "role",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query-role "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1c047f91-19a8-4cc0-ba00-830664b1ea69",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "turn_on",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "active-noti"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "52f60168-70d8-4a64-b9fb-455a0bc707fb",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "turn_off",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "inactive-noti"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "70631c71-dc7c-4a7d-a6cd-04d37a14ca0d",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "rulebbo_point",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "term-and-policy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e0c3cf13-3a2f-48ba-9831-5879613c5e95",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "check_point",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "check point "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6c314402-f0df-42a5-9e67-f6fd56843683",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "drep",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update-role-drep"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bddf8527-8bfe-4d6b-991b-362a3afb8d37",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "user",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update-role-user"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ab56ef1-6ef7-492c-93ad-e8c5b4717b90",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "spo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update-role-spo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e40c1de7-1298-4d26-98f2-fd96d35cf199",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "committe",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update-role-cc"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f350a442-ec72-4e64-84ed-4765abf1bdc5",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "question",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Handle_question "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f2d862db-5c9a-452c-933a-39a2157b6905",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "deepchat",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Deep chat"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2334f8d6-abdf-46eb-b35a-f4e55eaa7efb",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "normalchat",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "normal chat"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1940,
        3700
      ],
      "id": "fe92da5d-54b3-4bdb-b033-0ce2bb978fc1",
      "name": "Switch Call Back"
    },
    {
      "parameters": {
        "jsCode": "const questions = [list_question];\n\n// Chọn ngẫu nhiên 3 câu hỏi không trùng lặp\nconst shuffled = questions.sort(() => 0.5 - Math.random());\nconst selectedQuestions = shuffled.slice(0, 10); // Lấy 3 câu hỏi\n\n// Tạo inline keyboard (trả về đối tượng JSON trực tiếp)\nconst inlineKeyboard = {\n  inline_keyboard: selectedQuestions.map((_, index) => [\n    {\n      text: `${index + 1}`, // Hiển thị số trên button\n      callback_data: `question_${index}` // Gán callback_data với chỉ số\n    }\n  ])\n};\n\n// Tạo định dạng đầu ra cho câu hỏi\nconst formattedQuestions = selectedQuestions\n  .map((question, index) => `${index + 1}. ${question}`)\n  .join('\\n');\n\n// Trả về đối tượng JSON\nreturn [{\n  json: {\n    random_questions: formattedQuestions,\n    reply_markup: inlineKeyboard, // Trả về đối tượng thay vì chuỗi\n    selected_questions: selectedQuestions\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5940,
        3340
      ],
      "id": "e5dfbbd1-fc11-44d1-88e0-99f5a5e9121b",
      "name": "CodeRandom2"
    },
    {
      "parameters": {
        "jsCode": "const questions = [list_question];\n// Chọn ngẫu nhiên 3 câu hỏi không trùng lặp\nconst shuffled = questions.sort(() => 0.5 - Math.random());\nconst selectedQuestions = shuffled.slice(0, 10); // Lấy 3 câu hỏi\n\n\n// Tạo inline keyboard (trả về đối tượng JSON trực tiếp)\nconst inlineKeyboard = {\n  inline_keyboard: selectedQuestions.map((_, index) => [\n    {\n      text: `${index + 1}`, // Hiển thị số trên button\n      callback_data: `question_${index}` // Gán callback_data với chỉ số\n    }\n  ])\n};\n\n// Tạo định dạng đầu ra cho câu hỏi\nconst formattedQuestions = selectedQuestions\n  .map((question, index) => `${index + 1}. ${question}`)\n  .join('\\n');\n\n// Chuyển selected_questions thành chuỗi JSON\nconst selectedQuestionsJson = JSON.stringify(selectedQuestions);\n// Trả về đối tượng JSON\nreturn [{\n  json: {\n    random_questions: formattedQuestions,\n    reply_markup: inlineKeyboard, // Trả về đối tượng thay vì chuỗi\n    selected_questions: selectedQuestionsJson // Chuỗi JSON thay vì mảng\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5660,
        3600
      ],
      "id": "d0498870-d966-41a8-8fce-f0e772ad4027",
      "name": "CodeRandom3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Switch Call Back').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6020,
        4780
      ],
      "id": "351539b3-94a5-4f96-826f-ee4a71bca15e",
      "name": "If17"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Switch Call Back').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6580,
        6080
      ],
      "id": "d890f569-cb19-4336-9a4b-9832665c7cb9",
      "name": "If18"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Switch Call Back').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6440,
        5500
      ],
      "id": "3626028b-4aa3-4779-9443-0e2f3969cbd7",
      "name": "If19"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Switch Call Back').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6780,
        6580
      ],
      "id": "8386306b-3c15-4ede-9eed-caeb5131e585",
      "name": "If20"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "48209589-e551-46e4-925a-3525424b77b6"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DREP"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "62a4b49c-98c0-471e-9d74-deca7155d523",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 4,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SPO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fe802ac8-f0c9-4750-8340-1039766562f8",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 6,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Committe"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "97a85122-7ba0-440b-acef-92377e6aada8",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "User"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -6480,
        4800
      ],
      "id": "989c595c-7ee4-4199-af74-375203167b75",
      "name": "Switch-Account"
    },
    {
      "parameters": {
        "content": "Callback query help ",
        "height": 480,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6880,
        3280
      ],
      "id": "d06e69da-8acf-44ca-a923-f84691ec9995",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "Callback query Filter ",
        "height": 480,
        "width": 1360,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6080,
        3280
      ],
      "id": "63bfc4dd-e45c-4cff-aee2-1655f2a5e6bd",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "Callback query List Role",
        "height": 480,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3860,
        3280
      ],
      "id": "62787391-47e2-4895-b0a9-3b4bf66b74e2",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "lệnh feedback",
        "height": 480,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4600,
        3280
      ],
      "id": "ba0d5a1d-4451-4551-8342-481a395364f4",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "Nội quy và chính sách nhận thưởng",
        "height": 480,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3100,
        3280
      ],
      "id": "68aae143-ba4e-46f7-b268-8695cbd1282f",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "",
        "height": 2340,
        "width": 1460,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6940,
        4500
      ],
      "id": "cf4139ac-e291-4198-8392-27bea6729074",
      "name": "Sticky Note23"
    },
    {
      "parameters": {
        "content": "",
        "height": 1580,
        "width": 920,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5400,
        4480
      ],
      "id": "9df2dadc-8430-4edf-9044-387a03e1e5c7",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT EXISTS (\n    SELECT 1 FROM bbo_user WHERE telegramid = {{ $('Telegram Trigger').item.json.message.chat.id }}\n) AS user_exists;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2480,
        1480
      ],
      "id": "a8d97b9a-5dd7-41be-874b-9d2f2882d4dc",
      "name": "check_exist",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT selected_questions FROM user_questions WHERE chat_id = {{ $('Telegram Trigger').item.json.callback_query.message.chat.id }} and message_id = {{ $('Telegram Trigger').item.json.callback_query.message.message_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4180,
        5300
      ],
      "id": "71fa4cf9-e06a-47cb-bf0a-0170e3c811d0",
      "name": "ExecuteQuestions",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "Typing...",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3740,
        5300
      ],
      "id": "0bf4822c-4e1a-4961-b6fc-ccd2a34f34dd",
      "name": "Telegram37",
      "webhookId": "d2d49648-05a6-460e-8a05-d894258139af",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Telegram37').item.json.result.chat.id }}",
        "messageId": "={{ $('Telegram37').item.json.result.message_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3120,
        5300
      ],
      "id": "662246e7-bc56-4eec-98a8-e17ec89a491e",
      "name": "Telegram38",
      "webhookId": "9e7a055c-4c4d-42e2-a077-013729118efe",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 660,
        "width": 1840,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4280,
        5160
      ],
      "id": "763f82b1-be8d-4c1b-869a-d8c9b3ff2cc4",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "const data = $('Telegram Trigger').first().json.callback_query.data;\n\nconst index = parseInt(data.split('_')[1]);\n\nconst selectedQuestions = $input.first().json.selected_questions;\n\nconst result = selectedQuestions[index];\n\nreturn [{ json: { question: result } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3960,
        5300
      ],
      "id": "9fbeb441-b357-4763-899e-1a7561295563",
      "name": "Code7"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=<b> Đây là thông báo nhắn nhở, nếu bạn đã cập nhật địa chỉ ví, vui lòng bỏ qua tin nhắn này</b>\n\n🎁 THÔNG BÁO NHẬN THƯỞNG TỪ TEAM BBO\n\nChào bạn,\n\nCảm ơn bạn đã tham gia đóng góp ý kiến và trải nghiệm trong quá trình thử nghiệm chatbot AI của team BBO – một phần của dự án được tài trợ bởi Project Catalyst.\n\nChúng tôi xin thông báo rằng:\n✅ Bạn đã đủ điều kiện nhận thưởng cho đợt test bot đợt 1.\n\n🎉 Đây là lời cảm ơn chân thành từ BBO Team vì sự hỗ trợ quý báu của bạn trong việc giúp chúng tôi hoàn thiện sản phẩm.\n\n📩 Vui lòng gửi lại địa chỉ ví ADA (Cardano) của bạn để chúng tôi tiến hành chuyển phần thưởng - Bạn có thể sử dụng các ví phổ biển trên Cardano như: Yoroi, Lace, Eternl để nhận thưởng.\n\n<b>Bạn vui lòng nhập địa chỉ ví theo cú pháp:</b> /add [your_address]\nVí dụ: /add addr1q9p57mna58c5hdhqxxxxxxxxxxxxxxxxqwhavpv\n\n📆 Hạn chót nhận thông tin ví:  05/06/2025\nSau thời gian này, các phần thưởng chưa nhận sẽ được chuyển về quỹ cộng đồng của dự án.\n\nMột lần nữa, xin cảm ơn sự đồng hành của bạn.\nChúc bạn một ngày tuyệt vời!\n\n\n<b>Trân trọng!</b>\nTeam BBO",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4000,
        2000
      ],
      "id": "b762a1e0-7e65-4b90-bc5f-c5fde21827b2",
      "name": "Telegram26",
      "webhookId": "2dc5d937-1835-4e00-a295-c4c169158ecc",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { chat_id: \"list_telegramid\" } },\n\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4240,
        2000
      ],
      "id": "80364250-47a4-4a57-a502-847933df5dc8",
      "name": "Code11"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "3c219d29-93a0-4566-8bd8-4fc301282720",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1220,
        7020
      ],
      "id": "f33b5660-02dd-4f99-956a-4f40f8f9f338",
      "name": "If"
    },
    {
      "parameters": {
        "content": "✨ /add command ✨\nUpdate wallet address",
        "height": 1100,
        "width": 1120
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        920,
        6320
      ],
      "id": "31c351b4-8d68-48aa-8c25-e48035c93f17",
      "name": "Sticky Note21"
    },
    {
      "parameters": {
        "jsCode": "// Lấy dữ liệu từ node \"Telegram Trigger\"\nlet originalString = $('Telegram Trigger').first().json.message.text;\n\n// Loại bỏ 3 ký tự đầu\nlet trimmedString = originalString.slice(4);\n\n// Trả về mảng gồm 1 object như hệ thống yêu cầu\nreturn [\n  {\n    trimmedText: trimmedString\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        980,
        6720
      ],
      "id": "e340a60a-4e67-4477-9f0d-d980d590e2ce",
      "name": "Code12"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telegramid": "={{ $('Telegram Trigger').item.json.message.from.id }}",
            "addresswallet": "={{ $('Code12').item.json.trimmedText }}"
          },
          "matchingColumns": [
            "telegramid"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "point",
              "displayName": "point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "onchainId",
              "displayName": "onchainId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "addresswallet",
              "displayName": "addresswallet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1800,
        7040
      ],
      "id": "d83584f5-adc3-4cf8-8c1a-9a28bdd6b19b",
      "name": "Postgres24",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a738cc64-0254-404f-ac9a-b551c96dfa3f",
              "leftValue": "={{ $json.trimmedText }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1200,
        6720
      ],
      "id": "ee7b27af-6c63-41c0-ad31-601439bb2b30",
      "name": "If2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "050169d4-629e-47fb-8c56-30fb1c88ed4b",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1200,
        6480
      ],
      "id": "89882719-ccea-4bf2-b460-8e82ce535670",
      "name": "If21"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 6
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -4460,
        2000
      ],
      "id": "d9e1fc88-1ea9-415b-aaec-53069fbdec89",
      "name": "Schedule Trigger1",
      "disabled": true
    },
    {
      "parameters": {
        "content": "WF Thông báo nhận điểm thưởng",
        "height": 320,
        "width": 840
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4600,
        1900
      ],
      "id": "75fc352d-543d-452a-9448-140f07ba2cfd",
      "name": "Sticky Note25"
    },
    {
      "parameters": {
        "jsCode": "// Lấy dữ liệu từ node \"Telegram Trigger\"\nlet originalString = $('Telegram Trigger').first().json.message.text;\n\n// Loại bỏ 3 ký tự đầu\nlet trimmedString = originalString.slice(3);\n\n// Trả về mảng gồm 1 object như hệ thống yêu cầu\nreturn [\n  {\n    trimmedText: trimmedString\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1020,
        5660
      ],
      "id": "af1c7af0-3039-4f24-b991-f56e0035ca48",
      "name": "Code9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "99ea6cae-17ce-475e-8055-fd4fbae63c99",
              "leftValue": "={{ $json.trimmedText }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1280,
        5660
      ],
      "id": "2c6cc213-cdb3-4722-9ed8-c9befc349635",
      "name": "If22"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "85acb3b4-2782-4ef9-bdae-dc3cbd64c461",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1160,
        5440
      ],
      "id": "64643fc7-7a04-4c90-a485-dc1917859148",
      "name": "If23"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "tableName": "=n8n_chat_histories"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -3380,
        5420
      ],
      "id": "660ed36b-539b-4f87-9d2a-34183ed13c4d",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT chat_id, message_id FROM activelog where telegram_id = {{ $('Telegram Trigger').item.json.message.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        200,
        860
      ],
      "id": "047458df-95d5-44bb-b359-e60b3e223585",
      "name": "Select_Log",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        420,
        860
      ],
      "id": "e8f8cbe6-4870-421c-9732-9c648232e390",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/bot[your_token]/deleteMessage?chat_id={{ $json.chat_id }}&message_id={{ $json.message_id }} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        700,
        880
      ],
      "id": "7f96022d-aaf2-4a1a-8adb-7d8b04aeb4fa",
      "name": "HTTP Request10"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM activelog where telegram_id = {{ $('Telegram Trigger').item.json.message.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        440,
        600
      ],
      "id": "a7de6704-104a-4d7a-9560-88a4742a90c2",
      "name": "Postgres11",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Cập nhật vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Trò chuyện chuyên sâu",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1240,
        -140
      ],
      "id": "0fd4af79-82e5-4a0a-98f3-cc1df586d32e",
      "name": "Mes_AccSPO_Vi",
      "webhookId": "6605a160-75ec-4ff9-ae7e-9b2316c1b3e2",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Update role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Deep chat",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1000,
        -340
      ],
      "id": "466762f1-4b7c-4239-83ac-dcad2ac21fdc",
      "name": "Mes_AccSPO_En",
      "webhookId": "3c4cafb1-6111-4639-a073-78fb563f1dd0",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Trò chuyện chuyên sâu",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1240,
        -840
      ],
      "id": "8c0e8e20-ea56-4263-b427-7e0f84dee843",
      "name": "Mes_AccDrep_Vi",
      "webhookId": "98cec06a-e757-4055-af29-02a558a81030",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Deep chat",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1000,
        -1080
      ],
      "id": "077b1513-e012-49b1-b52d-0f0beb1431ee",
      "name": "Mes_AccDrep_En",
      "webhookId": "7a8ab7c8-a4ff-423c-a5cb-d68e8eed9806",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Cập nhật vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Trò chuyện chuyên sâu",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        480,
        -860
      ],
      "id": "ea60e3b3-32cc-4edb-a2e5-0c4e07661ec3",
      "name": "Mes_AccCC_Vi",
      "webhookId": "137b2185-f53c-4f77-86c8-75838d811d84",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Update role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Deep chat",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        260,
        -1080
      ],
      "id": "4fab6246-f07f-44e6-ba0c-a798239c84c1",
      "name": "Mes_AccCC_En",
      "webhookId": "4bbde9a5-d29f-4a7b-a485-8d2b0a3e9f8b",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: <i>{{ $json.telegramid }}</i>\n-Username: <i>{{ $json.username }}</i>\n-Join date: <i>{{ $json.joindate }}</i>\n-Status: <i>{{ $json.isactive ? \"Active\" : \"Inactive\"}}</i>\n-Role: <i>{{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}</i>\n-Notifications: <i>{{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}</i>\n-Points: <i>{{ $json.point ?? 0}} BBO</i>\n-Onchain ID: <i>{{ $json.onchainId ?? null }}</i>\n\n🐳Notifications: <i>Sign up to receive notifications when new proposals are available</i>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        260,
        -340
      ],
      "id": "87014c14-6ef0-4887-b78b-53bab946b5ef",
      "name": "Mes_AccUser_En",
      "webhookId": "64d70f3c-ea9a-41e4-9149-6629bf0fc894",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: <i>{{ $json.telegramid }}</i>\n-Tên tài khoản: <i>{{ $json.username }}</i>\n-Ngày tham gia: <i>{{ $json.joindate }}</i>\n-Trạng thái: <i>{{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}</i>\n-Vai trò: <i>{{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}</i>\n-Nhận thông báo: <i>{{ $json.allownoti ? \"Bật\" : \"Tắt\"}}</i>\n-Điểm thưởng: <i>{{ $json.point ?? 0}} BBO</i>\n-Onchain ID: <i>{{ $json.onchainId ?? null }}</i>\n\n🐳Vai trò: <i>Cập nhật vai trò tham gia</i>\n🐳Thông báo: <i>Đăng ký nhận thông báo khi có đề xuất mới</i>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        500,
        -140
      ],
      "id": "853e816b-c597-4213-919c-a066e990baa7",
      "name": "Mes_AccUser_Vi",
      "webhookId": "162a8078-21b4-4e12-82d8-b127e7785881",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_Start_En').item?.json?.result?.chat?.id ||\n      $('Mes_Start_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Start_En').item?.json?.result?.message_id ||\n      $('Mes_Start_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3240,
        1600
      ],
      "id": "5533314a-8f08-4afb-89f9-d2ae2d203b3f",
      "name": "SaveLog",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_Help_En').item?.json?.result?.chat?.id ||\n      $('Mes_Help_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Help_En').item?.json?.result?.message_id ||\n      $('Mes_Help_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2520,
        860
      ],
      "id": "0a650a24-c41b-47a9-84be-f9c7c328b5d4",
      "name": "SaveLog1",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_Filter_EN').item?.json?.result?.chat?.id ||\n      $('Mes_Filter_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Filter_EN').item?.json?.result?.message_id ||\n      $('Mes_Filter_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2820,
        300
      ],
      "id": "d08a076e-3c87-4c19-bbfc-82510a7ceb90",
      "name": "SaveLog2",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "user_questions",
          "mode": "list",
          "cachedResultName": "user_questions"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "chat_id": "={{ $json.result.chat.id }}",
            "selected_questions": "={{ $('CodeRandom1').item.json.selected_questions }}",
            "message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "selected_questions",
              "displayName": "selected_questions",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "expires_at",
              "displayName": "expires_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2580,
        400
      ],
      "id": "704c4275-da51-4504-baa0-62aca838d5c3",
      "name": "Inser_List_Question",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_AccSPO_En').item?.json?.result?.chat?.id ||\n      $('Mes_AccSPO_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_AccSPO_En').item?.json?.result?.message_id ||\n      $('Mes_AccSPO_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1240,
        -340
      ],
      "id": "945b5364-2767-4700-8d96-9c09d5137f0f",
      "name": "SaveLog3",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_AccUser_En').item?.json?.result?.chat?.id ||\n      $('Mes_AccUser_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_AccUser_En').item?.json?.result?.message_id ||\n      $('Mes_AccUser_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        500,
        -340
      ],
      "id": "78453b36-630f-40ff-afb1-42a5ce6492e4",
      "name": "SaveLog4",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_AccCC_En').item?.json?.result?.chat?.id ||\n      $('Mes_AccCC_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_AccCC_En').item?.json?.result?.message_id ||\n      $('Mes_AccCC_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        500,
        -1080
      ],
      "id": "93d671f3-a52c-4b36-84a4-d2333ca430d7",
      "name": "SaveLog5",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_AccDrep_En').item?.json?.result?.chat?.id ||\n      $('Mes_AccDrep_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_AccDrep_En').item?.json?.result?.message_id ||\n      $('Mes_AccDrep_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1240,
        -1080
      ],
      "id": "f02be319-095d-445f-ae7c-d53f6cb037d6",
      "name": "SaveLog6",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_Feedback_En').item?.json?.result?.chat?.id ||\n      $('Mes_Feedback_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Feedback_En').item?.json?.result?.message_id ||\n      $('Mes_Feedback_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        500,
        4380
      ],
      "id": "ac2d95a0-0e9c-4849-a804-1165c653934d",
      "name": "SaveLog7",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨<b>Vui lòng gửi ý kiến đóng góp theo cú pháp</b>\n\n/f  <i>Ý kiến đóng góp xây dựng của bạn!</i>\n\n<b>ADA-Bamboo Team</b> rất mong nhận được những ý kiến đóng góp xây dựng cũng như cảm nhận về sản phẩm của bạn.\nTrên tinh thần đó BBO sẽ càng ngày tối ưu và cập nhật sản phẩm tốt hơn. <b>Trân thành cảm ơn bạn!</b>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -40,
        4380
      ],
      "id": "042a5f04-0b2e-4e9f-b162-2dd32365ed09",
      "name": "Mes_Feedback_Vi",
      "webhookId": "2a2a720c-4666-4120-b895-2677e1e907b0",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨<b>Please send your comments in the following format</b>\n\n/f  <i>Your constructive comments!</i>\n\n<b>ADA-Bamboo Team</b> looks forward to receiving your constructive comments and feelings about the product.\nIn that spirit, BBO will increasingly optimize and update better products. <b>Sincerely thank you!</b>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        500,
        4600
      ],
      "id": "5e339df4-805f-4ce0-a8f7-f318ff79f0e8",
      "name": "Mes_Feedback_En",
      "webhookId": "7e93d191-c922-4662-997a-f7e766540c5e",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_Com_En').item?.json?.result?.chat?.id ||\n      $('Mes_Com_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Com_En').item?.json?.result?.message_id ||\n      $('Mes_Com_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1760,
        4460
      ],
      "id": "919876b6-8134-4de7-ae9a-a595a8461ceb",
      "name": "SaveLog8",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_F_En').item?.json?.result?.chat?.id ||\n      $('Mes_F_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_F_En').item?.json?.result?.message_id ||\n      $('Mes_F_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2140,
        5120
      ],
      "id": "d352fba7-2342-4268-9915-611b58abe275",
      "name": "SaveLog9",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "<b>ADA-Bamboo Team</b> trân thành cảm ơn ý kiến-cảm nhận của bạn!\n✨Chúc bạn một ngày tốt lành✨",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1120,
        4860
      ],
      "id": "21213a2d-6ef6-4e4c-9ca3-a58a46dd7155",
      "name": "Mes_F_Vi",
      "webhookId": "c098cfef-21e4-4dc8-8f85-1c8de4f9cfd9",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "<b>ADA-Bamboo Team</b> sincerely thanks for your comments or feelings!\n✨Wishing you all the best✨",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1460,
        5080
      ],
      "id": "de62f376-dc56-4db0-9ddb-ea9f5ab31ec6",
      "name": "Mes_F_En",
      "webhookId": "e69488fb-1cc8-4435-bf8a-b1ce73eb9d11",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "<b>Bạn vui lòng cập nhật địa chỉ Id Onchain theo cú pháp:</b>\n/id [your_address]",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1520,
        5360
      ],
      "id": "98c522f7-3355-42e9-863d-2fb2615afb51",
      "name": "Mes_Id_Empty_Vi",
      "webhookId": "c1e0e510-8ca1-4621-ad96-34b9653fe9cd",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "<b>Please update your Onchain Id address with the syntax:</b>\n/id [your_address]",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1520,
        5520
      ],
      "id": "50a7cc3a-16b6-4ce0-858a-a0501fc4cc1d",
      "name": "Mes_Id_Empty_En",
      "webhookId": "9b352c7a-d2a8-46f9-947e-1f55c6c8f48c",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨Thông tin của bạn đã được cập nhật.✨\nVui lòng nhập /account để kiểm tra thay đổi!",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1520,
        5840
      ],
      "id": "c9dbb834-70f3-4463-9686-733b6edefe97",
      "name": "Mes_Id_Vi",
      "webhookId": "c4c9a1e7-b0d0-4e30-8431-756f5ac17d12",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨Your information has been updated.✨\nPlease enter /account to check for changes!",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1520,
        6060
      ],
      "id": "cd1d1664-f626-4cca-9296-7a4090e82235",
      "name": "Mes_Id_En",
      "webhookId": "b4d76d8f-34b5-40ee-9d3e-88004b3ecfff",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_Id_Empty_En').item?.json?.result?.chat?.id ||\n      $('Mes_Id_Empty_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Id_Empty_En').item?.json?.result?.message_id ||\n      $('Mes_Id_Empty_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1820,
        5440
      ],
      "id": "01638751-3779-4b60-9598-3ad89f5d4193",
      "name": "SaveLog10",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_Id_En').item?.json?.result?.chat?.id ||\n      $('Mes_Id_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Id_En').item?.json?.result?.message_id ||\n      $('Mes_Id_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1780,
        5760
      ],
      "id": "ef86b49f-2a23-42ea-bcc2-a4c3f2ed17a1",
      "name": "SaveLog11",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_Add_Empty_En').item?.json?.result?.chat?.id ||\n      $('Mes_Add_Empty_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Add_Empty_En').item?.json?.result?.message_id ||\n      $('Mes_Add_Empty_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1800,
        6480
      ],
      "id": "6098254f-51d5-4714-92d6-7af851c5b729",
      "name": "SaveLog12",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "<b>Bạn vui lòng cập nhật địa chỉ ví theo cú pháp:</b>\n/add [your_address]",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1500,
        6380
      ],
      "id": "9737c6b0-70b9-4772-832f-b1c30f14bdaa",
      "name": "Mes_Add_Empty_Vi",
      "webhookId": "756199bb-b7b5-4b2a-a65c-23deee980ebf",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "<b>Please update your wallet address using the syntax: </b>\n/add [your_address]",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1500,
        6600
      ],
      "id": "0fd56331-f3a5-4cfe-bf6c-b9b8d4e9b9e3",
      "name": "Mes_Add_Empty_En",
      "webhookId": "92454dbd-54e7-4b88-88a7-34a7084695c6",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Mes_Add_En').item?.json?.result?.chat?.id ||\n      $('Mes_Add_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Add_En').item?.json?.result?.message_id ||\n      $('Mes_Add_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1800,
        6820
      ],
      "id": "faaf7c91-a706-4533-bf3d-7adf82de2aad",
      "name": "SaveLog13",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨Thông tin địa chỉ ví bạn đã được cập nhật thành công✨",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1500,
        6860
      ],
      "id": "3a6368ad-4daa-468d-8f77-81207473b235",
      "name": "Mes_Add_Vi",
      "webhookId": "3798e58d-7af7-4417-acf7-54fb402b0929",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨Your wallet address information has been updated successfully.✨",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1500,
        7200
      ],
      "id": "6956c5ef-9b3d-43ba-8d6a-f93fb688df71",
      "name": "Mes_Add_En",
      "webhookId": "f1729e73-2cae-45da-b310-97fe1d3ac711",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{$('Message_Response').item?.json?.result?.chat?.id }},\n    {{$('Message_Response').item?.json?.result?.message_id }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4300,
        4420
      ],
      "id": "1ac2fa1c-99de-4209-9f24-0cdac080ff39",
      "name": "SaveLog14",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Help_En').item?.json?.result?.chat?.id ||\n      $('Help_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Help_En').item?.json?.result?.message_id ||\n      $('Help_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -6460,
        3320
      ],
      "id": "e9230cff-4c98-4502-bb6f-bc2331e25dcc",
      "name": "SaveLog15",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Filter_En').item?.json?.result?.chat?.id ||\n      $('Filter_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Filter_En').item?.json?.result?.message_id ||\n      $('Filter_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4880,
        3480
      ],
      "id": "7785243f-404d-4c61-a21d-63f7c13e731c",
      "name": "SaveLog16",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('If_Call_Filter').item.json.callback_query.from.id }}",
        "text": "=✨<b>Chọn một câu hỏi gợi ý để bắt cuộc trò chuyện!</b>\n<i>Vui lòng nhấn vào một số từ 1 đến 10 để xem câu hỏi</i>:\n\n{{ $json.random_questions }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[0][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[0][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[1][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[1][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[2][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[2][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[3][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[3][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[4][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[4][0].callback_data }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[5][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[5][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[6][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[6][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[7][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[7][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[8][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[8][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[9][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[9][0].callback_data }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5520,
        3340
      ],
      "id": "8a0f28f4-faba-41c9-b48f-0843472da608",
      "name": "Filter_Vi",
      "webhookId": "9a6053c6-ac0d-4d29-bb89-62c34a4d4f64",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('If_Call_Filter').item.json.callback_query.from.id }}",
        "text": "=✨<b>Choose a suggested question to start the conversation!</b>\n<i>Please press a number from 1 to 10 to view the question:</i>\n\n{{ $json.random_questions }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[0][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[0][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[1][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[1][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[2][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[2][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[3][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[3][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[4][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[4][0].callback_data }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[5][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[5][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[6][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[6][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[7][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[7][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[8][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[8][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[9][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[9][0].callback_data }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5380,
        3600
      ],
      "id": "4fc3aace-3042-4b45-bd92-f59980a34e2d",
      "name": "Filter_En",
      "webhookId": "5fa41b36-dd73-45a6-9414-022a571d60a2",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨Vui lòng chọn vai trò hiện tại của bạn",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🧑‍💻User",
                    "additionalFields": {
                      "callback_data": "user"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👨‍🔧SPO",
                    "additionalFields": {
                      "callback_data": "spo"
                    }
                  },
                  {
                    "text": "🧑‍🎓 Committe",
                    "additionalFields": {
                      "callback_data": "committe"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🙋Drep",
                    "additionalFields": {
                      "callback_data": "drep"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3720,
        3340
      ],
      "id": "f6a41809-5c04-4801-b668-aaa130852f2e",
      "name": "List_Role_Vi",
      "webhookId": "d2a6f603-3897-43d6-a737-1d903e408fa7",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨Please select your current role",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🧑‍💻User",
                    "additionalFields": {
                      "callback_data": "user"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👨‍🔧SPO",
                    "additionalFields": {
                      "callback_data": "spo"
                    }
                  },
                  {
                    "text": "🧑‍🎓 Committe",
                    "additionalFields": {
                      "callback_data": "committe"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🙋Drep",
                    "additionalFields": {
                      "callback_data": "drep"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3420,
        3560
      ],
      "id": "d21766bc-33b0-4a92-beaa-dcb8a5e7d11d",
      "name": "List_Role_En",
      "webhookId": "7f603680-25fa-493b-a246-23ff8813ce03",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('List_Role_En').item?.json?.result?.chat?.id ||\n      $('List_Role_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('List_Role_En').item?.json?.result?.message_id ||\n      $('List_Role_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3420,
        3340
      ],
      "id": "b0dc9bb4-5f33-45b9-a643-2b63f2cadb16",
      "name": "SaveLog17",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨<b>Vui lòng gửi ý kiến đóng góp theo cú pháp</b>\n\n/f _Ý kiến đóng góp xây dựng của bạn!_\n\n<b>ADA-Bamboo Team</b> rất mong nhận được những ý kiến đóng góp xây dựng cũng như cảm nhận về sản phẩm của bạn.\nTrên tinh thần đó BBO sẽ càng ngày tối ưu và cập nhật sản phẩm tốt hơn. <b>Trân thành cảm ơn bạn!</b>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4480,
        3340
      ],
      "id": "3084c014-99f2-44a3-b620-7f18cb691e50",
      "name": "Feedback_Vi",
      "webhookId": "06334766-99c5-4e55-a459-c37cd5db4e4b",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨<b>Please send your comments in the following format</b>\n\n/f _Your constructive comments!_\n\n<b>ADA-Bamboo Team</b> looks forward to receiving your constructive comments and feelings about the product.\nIn that spirit, BBO will increasingly optimize and update better products. <b>Sincerely thank you!</b>",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4140,
        3540
      ],
      "id": "3b017d75-c3f7-47e8-988a-c5a438b884f1",
      "name": "Feedback_En",
      "webhookId": "468d223d-995b-4a78-9fa9-a207d07bfc4f",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Feedback_En').item?.json?.result?.chat?.id ||\n      $('Feedback_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Feedback_En').item?.json?.result?.message_id ||\n      $('Feedback_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4140,
        3340
      ],
      "id": "3dbba7e5-3f02-466e-8a42-ea7a8f537924",
      "name": "SaveLog18",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Policy_En').item?.json?.result?.chat?.id ||\n      $('Policy_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Policy_En').item?.json?.result?.message_id ||\n      $('Policy_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2660,
        3340
      ],
      "id": "e1540c53-b170-408d-94af-65e5b886d603",
      "name": "SaveLog19",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "Your Policy\n\n\n",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3000,
        3340
      ],
      "id": "6dee1455-7922-4661-84fb-11a561f4d751",
      "name": "Policy_Vi",
      "webhookId": "cd4ef15f-e6ed-4956-a7cc-a5a08a79a5e3",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "Your Policy\n\n\n",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2640,
        3540
      ],
      "id": "a8e51311-211f-4166-9491-6a9e7ed153d1",
      "name": "Policy_En",
      "webhookId": "7994c7b2-ed74-42a3-9f49-19c5037b77ab",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Drep_En').item?.json?.result?.chat?.id ||\n      $('Drep_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Drep_En').item?.json?.result?.message_id ||\n      $('Drep_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5720,
        4560
      ],
      "id": "38437502-5f6e-41b6-baf4-6805ab580031",
      "name": "SaveLog20",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Deep chat",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -6020,
        4560
      ],
      "id": "86afc611-18ab-4f42-b962-972feec7b71d",
      "name": "Drep_En",
      "webhookId": "85ed6b05-6506-4751-a7a6-9e35b0f4a676",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Trò chuyện chuyên sâu",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5720,
        4800
      ],
      "id": "9713c165-0a05-4369-9fec-48a041705d45",
      "name": "Drep_Vi",
      "webhookId": "d8be4f90-dc9f-469c-8443-52b4e2c8b9b2",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('CC_En').item?.json?.result?.chat?.id ||\n      $('CC_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('CC_En').item?.json?.result?.message_id ||\n      $('CC_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -6120,
        5220
      ],
      "id": "9974c04f-c8e1-460c-95dc-b0e12071ea27",
      "name": "SaveLog21",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('User_En').item?.json?.result?.chat?.id ||\n      $('User_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('User_En').item?.json?.result?.message_id ||\n      $('User_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -6480,
        6340
      ],
      "id": "73813d95-6885-4dd0-b2d8-ff4eea309a4e",
      "name": "SaveLog22",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('SPO_En').item?.json?.result?.chat?.id ||\n      $('SPO_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('SPO_En').item?.json?.result?.message_id ||\n      $('SPO_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -6280,
        5820
      ],
      "id": "b9790714-2c6b-494f-9b42-d68c214b59a6",
      "name": "SaveLog23",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Update role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Deep chat",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -6440,
        5220
      ],
      "id": "fa9292c7-b630-417a-9ea3-81a9d7ea7475",
      "name": "CC_En",
      "webhookId": "744ca3cf-43e6-4aa6-9756-8a83cf6f43cd",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Cập nhật vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Trò chuyện chuyên sâu",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -6120,
        5520
      ],
      "id": "bcb149bd-01d5-4361-a40b-e4e139eb6223",
      "name": "CC_Vi",
      "webhookId": "6037535a-2d71-4764-9a75-4b55a2577884",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Update role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Deep chat",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -6580,
        5820
      ],
      "id": "c64040f9-b74a-4c8a-8452-0bb3b5777a7c",
      "name": "SPO_En",
      "webhookId": "e9042b7c-f4f6-4d46-b5d8-d7e409a48649",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Cập nhật vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️Trò chuyện chuyên sâu",
                    "additionalFields": {
                      "callback_data": "deepchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -6280,
        6080
      ],
      "id": "636855a3-e2b5-49b7-877f-d231a5166d1a",
      "name": "SPO_Vi",
      "webhookId": "4bca02cc-fa67-46da-b5e1-2b35c53474fe",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: <i>{{ $json.telegramid }}</i>\n-Username: <i>{{ $json.username }}</i>\n-Join date: <i>{{ $json.joindate }}</i>\n-Status: <i>{{ $json.isactive ? \"Active\" : \"Inactive\"}}</i>\n-Role: <i>{{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}</i>\n-Notifications: <i>{{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}</i>\n-Points: <i>{{ $json.point ?? 0}} BBO</i>\n-Onchain ID: <i>{{ $json.onchainId ?? null }}</i>\n\n🐳Notifications: <i>Sign up to receive notifications when new proposals are available</i>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -6780,
        6340
      ],
      "id": "88ed218b-8fa4-40a2-b22f-f74e17a4aa52",
      "name": "User_En",
      "webhookId": "9149a000-9c15-4634-bc5f-062fa62ef238",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: <i>{{ $json.telegramid }}</i>\n-Tên tài khoản: <i>{{ $json.username }}</i>\n-Ngày tham gia: <i>{{ $json.joindate }}</i>\n-Trạng thái: <i>{{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}</i>\n-Vai trò: <i>{{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}</i>\n-Nhận thông báo: <i>{{ $json.allownoti ? \"Bật\" : \"Tắt\"}}</i>\n-Điểm thưởng: <i>{{ $json.point ?? 0}} BBO</i>\n-Onchain ID: <i>{{ $json.onchainId ?? null }}</i>\n\n🐳Vai trò: <i>Cập nhật vai trò tham gia</i>\n🐳Thông báo: <i>Đăng ký nhận thông báo khi có đề xuất mới</i>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -6480,
        6600
      ],
      "id": "f45b8626-9b1b-48d0-9edf-906d88242626",
      "name": "User_Vi",
      "webhookId": "90c781f4-b9f6-464e-b047-66bafcb6e200",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Mes_Update_En').item?.json?.result?.chat?.id ||\n      $('Mes_Update_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_Update_En').item?.json?.result?.message_id ||\n      $('Mes_Update_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4680,
        5200
      ],
      "id": "103908b8-c964-4c9d-a19a-0d19cd8c5bf1",
      "name": "SaveLog24",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "✨<b>Thông tin của bạn đã được cập nhật.</b>✨\nVui lòng nhập /account để kiểm tra thay đổi!",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4980,
        4680
      ],
      "id": "660f09d2-9950-4d12-b15a-cf8dbc93e37c",
      "name": "Mes_Update_Vi",
      "webhookId": "fb9911ee-98f2-495a-8f6a-58f223ac58d4",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "✨<b>Your information has been updated.</b>✨\nPlease enter /account to check for changes!",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4980,
        5680
      ],
      "id": "269aa7b1-b849-4682-9feb-b4faea250216",
      "name": "Mes_Update_En",
      "webhookId": "027751de-16fb-49b4-a18d-72446056ea8b",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Mes_Response_Filter').item?.json?.result?.chat?.id\n    }},\n    {{\n      $('Mes_Response_Filter').item?.json?.result?.message_id\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2660,
        5300
      ],
      "id": "98d71523-2493-4552-b57d-dabb9f8d4c31",
      "name": "SaveLog25",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $('AI Agent1').item.json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2880,
        5300
      ],
      "id": "8feb1a82-0324-4eda-9bb8-4c729d30246a",
      "name": "Mes_Response_Filter",
      "webhookId": "b32f1787-c6a7-4460-a5d3-678ae6d414bc",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "user_questions",
          "mode": "list",
          "cachedResultName": "user_questions"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "chat_id": "={{ $json.result.chat.id }}",
            "selected_questions": "={{ $('CodeRandom3').item.json.selected_questions }}",
            "message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "selected_questions",
              "displayName": "selected_questions",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "expires_at",
              "displayName": "expires_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5120,
        3600
      ],
      "id": "32773cba-5dff-4f96-bf49-d06ff373c332",
      "name": "Inser_List_Question1",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "user_questions",
          "mode": "list",
          "cachedResultName": "user_questions"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "chat_id": "={{ $json.result.chat.id }}",
            "selected_questions": "={{ $('CodeRandom').item.json.selected_questions }}",
            "message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "selected_questions",
              "displayName": "selected_questions",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "expires_at",
              "displayName": "expires_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2580,
        200
      ],
      "id": "42e6e290-e9d5-495d-811c-7dfa5bf0c26f",
      "name": "Inser_List_Question_Vi",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "user_questions",
          "mode": "list",
          "cachedResultName": "user_questions"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "chat_id": "={{ $json.result.chat.id }}",
            "selected_questions": "={{ $('CodeRandom2').item.json.selected_questions }}",
            "message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "selected_questions",
              "displayName": "selected_questions",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "expires_at",
              "displayName": "expires_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5120,
        3340
      ],
      "id": "f07d5b25-0903-4e4d-ad38-3c58176c578a",
      "name": "Inser_List_Question2",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "BEGIN;\n\n-- 1. Chèn tất cả dữ liệu từ chat_histories vào chat_histories_bk\n-- Đảm bảo liệt kê tất cả các cột nếu cấu trúc có thể khác nhau về thứ tự hoặc số lượng\n-- Hoặc nếu bạn muốn sao chép tất cả các cột và chắc chắn chúng giống hệt nhau:\nINSERT INTO chat_histories_bk\nSELECT *\nFROM n8n_chat_histories where session_id = '{{ $('Telegram Trigger').item.json.message.from.id }}';\n\n  -- 2. Xóa dữ liệu từ bảng chat_histories sau khi đã chèn thành công\n-- CHỈ CHẠY DÒNG NÀY NẾU BẠN CHẮC CHẮN ĐÃ SAO CHÉP DỮ LIỆU THÀNH CÔNG VÀ KHÔNG CẦN CHÚNG Ở BẢNG GỐC NỮA\nDELETE FROM n8n_chat_histories where session_id = '{{ $('Telegram Trigger').item.json.message.from.id }}';\n\nCOMMIT;\n-- ROLLBACK; -- Sử dụng lệnh này nếu có bất kỳ lỗi nào xảy ra trong quá trình để hoàn tác tất cả các thay đổi",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        680,
        600
      ],
      "id": "d27dda6d-f1bc-4533-b420-21c2f7637606",
      "name": "BK_And_Delete",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "c129d655-938f-448a-9fe5-580259cb3753",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        600
      ],
      "id": "55814687-74c5-4fbe-857d-6e305c90091c",
      "name": "If24"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✅ Dữ liệu trò chuyện đã được dọn dẹp!",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        920,
        380
      ],
      "id": "c3a20f4c-f727-4a55-aeaa-930cf7abab11",
      "name": "Send_Mes_Vi",
      "webhookId": "3ef292da-832e-437c-b03b-bff8d92badc6",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✅ Chat data has been cleared!",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        940,
        900
      ],
      "id": "98f2060e-7460-4fb9-a228-1782b244598e",
      "name": "Send_Mes_En",
      "webhookId": "1e65fdcb-0418-43ef-b04f-aa3fe9c5772a",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{\n      $('Send_Mes_En').item?.json?.result?.chat?.id ||\n      $('Send_Mes_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Send_Mes_En').item?.json?.result?.message_id ||\n      $('Send_Mes_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1260,
        620
      ],
      "id": "9c01bd90-6f25-4285-a50d-92fa14467709",
      "name": "SaveLog26",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "✅ Dữ liệu trò chuyện đã được dọn dẹp!",
        "height": 920,
        "width": 1320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        160,
        260
      ],
      "id": "a2a95d70-4220-4019-ac59-af026f242b6b",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }};",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4160,
        6620
      ],
      "id": "adcdfc7c-1150-4347-a6a6-e220d8f3ae5e",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c207578c-c473-4b32-ba59-a71bf1a88a6e",
              "leftValue": "={{ $json.onchainId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3760,
        6620
      ],
      "id": "796e8f5c-5872-4eb6-8722-feaa951007df",
      "name": "IdHaveValue"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "01fc5b23-bfe6-4eaa-9246-065c24ea46e8",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4000,
        6180
      ],
      "id": "f1a4653d-afe4-461f-a576-222493fd6218",
      "name": "If25"
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "<b>Sorry, you can't access deep chat mode!</b> 🚫\n\nThis mode is exclusively for users with Onchain admin roles on Cardano, such as DReps, SPOs, and Committee members.\n\nTo enable it, please update your correct Onchain ID in the system. For example:\n- DRep: `drep17l6sywnxxxxxxxxswyrwvz3`\n- SPO: `pool155efqn9xxxxxxxxxxczg3asc`\n- Committee: `cc_hot1qvr7p6ms588xxxxhsq6ytv2`\n\nThank you! 😊",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3800,
        6320
      ],
      "id": "c8dbed8a-b929-4ccc-8a5a-ea8d1d682a45",
      "name": "Mes_CheckDeep_En",
      "webhookId": "b212d90c-1034-40ff-bb3d-32d1e0456be9",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "=<b>Xin lỗi, bạn không thể truy cập chế độ chat chuyên sâu!</b> 🚫\n\nChế độ này chỉ dành cho người dùng có vai trò quản trị Onchain trên Cardano như DRep, SPO và Ủy ban.\n\nĐể kích hoạt, vui lòng cập nhật đúng ID Onchain của bạn trong hệ thống. Ví dụ:\n- DRep: `drep17l6sywnxxxxxxxxswyrwvz3`\n- SPO: `pool155efqn9xxxxxxxxxxczg3asc`\n- Ủy ban: `cc_hot1qvr7p6ms588xxxxhsq6ytv2`\n\nCảm ơn bạn! 😊",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3800,
        6020
      ],
      "id": "666afeab-6629-49c7-b3a7-5221e5b9957a",
      "name": "Mes_CheckDeep_Vi",
      "webhookId": "c03af98f-830d-4eef-9b17-7a7078114a64",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Mes_CheckDeep_En').item?.json?.result?.chat?.id ||\n      $('Mes_CheckDeep_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_CheckDeep_En').item?.json?.result?.message_id ||\n      $('Mes_CheckDeep_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3580,
        6160
      ],
      "id": "51d89d3f-c92b-43c5-8fb8-80ee4fa0eb93",
      "name": "SaveLog27",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "deepchat": true,
            "telegramid": "={{ $json.telegramid }}"
          },
          "matchingColumns": [
            "telegramid"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "point",
              "displayName": "point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "onchainId",
              "displayName": "onchainId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "addresswallet",
              "displayName": "addresswallet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "deepchat",
              "displayName": "deepchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4000,
        7660
      ],
      "id": "4e688612-1640-47d0-af27-29f25c9634ca",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Mes_TranDeep_Drep_En').item?.json?.result?.chat?.id ||\n      $('Mes_TranDeep_Drep_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_TranDeep_Drep_En').item?.json?.result?.message_id ||\n      $('Mes_TranDeep_Drep_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2920,
        7080
      ],
      "id": "28a14ed2-6360-4034-a4b1-4d1ee2a2b552",
      "name": "SaveLog28",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "01fc5b23-bfe6-4eaa-9246-065c24ea46e8",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3520,
        7060
      ],
      "id": "178a4467-733b-44d1-a9c1-347abc01358a",
      "name": "If26"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "a183b5a6-b394-4594-b045-a55001c048f5"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Drep"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ce544f8b-0b39-434a-b37f-2d15c4cf29e1",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 4,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SPO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "39360285-8448-4a81-ad5e-a76e6bcea5e1",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 6,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CC"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3800,
        7660
      ],
      "id": "2462f24c-ecd9-4565-82b6-e84174b34d53",
      "name": "Switch2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "01fc5b23-bfe6-4eaa-9246-065c24ea46e8",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3520,
        7660
      ],
      "id": "814064a8-c834-4701-871d-af5bf57ba4a1",
      "name": "If27"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "01fc5b23-bfe6-4eaa-9246-065c24ea46e8",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3500,
        8240
      ],
      "id": "468d2630-559c-4369-b046-88a6c7ce9d27",
      "name": "If28"
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "=<b>Chào mừng đến với chế độ trò chuyện sâu DRep!</b> ✨\n\nBạn đã sẵn sàng khám phá thông tin cụ thể về DRep, được hỗ trợ bởi API Koios. Hãy coi tôi là trợ lý dữ liệu DRep cá nhân của bạn!\n\nSau đây là những thông tin chi tiết mà giờ đây bạn có thể nhận được:\n\n* <b>Danh sách DRep:</b> Nhận danh sách toàn diện về tất cả các DRep đang hoạt động.\n* <b>Hồ sơ DRep cá nhân của bạn:</b> Truy cập thông tin chi tiết cụ thể về ID DRep, hiệu suất và trạng thái của bạn.\n* <b>Cơ sở cử tri của bạn:</b> Hiểu rõ ai đang ủy quyền cho bạn và quyền biểu quyết của họ.\n...\n\nĐể bắt đầu, bạn có thể thử hỏi những câu như:\n\"Bạn có thể cho tôi xem danh sách DRep hiện tại không?\"\n\"Thông tin chi tiết về ID DRep của tôi là gì?\"\n\"Ai đã bỏ phiếu cho DRep của tôi?\"\n...\nTôi ở đây để giúp bạn điều hướng bối cảnh DRep. Bạn muốn biết điều gì trước tiên?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️ Trò chuyện bình thường",
                    "additionalFields": {
                      "callback_data": "normalchat "
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3220,
        6760
      ],
      "id": "9e5ff123-6f3a-47d1-8d52-b26bccb430b8",
      "name": "Mes_TranDeep_Drep_Vi",
      "webhookId": "4c9d0d31-55aa-4ec8-8b25-1e22f9d013dc",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "<b>Welcome to the DRep deep chat mode!</b> ✨\n\nYou're all set to explore DRep-specific information, powered by Koios APIs. Think of me as your personal DRep data assistant!\n\nHere's what you can now get detailed insights on:\n\n* <b>DRep listings:</b> Get a comprehensive list of all active DReps.\n* <b>Your personal DRep profile:</b>  Access specific details about your DRep ID, performance, and status.\n* <b>Your voter base:</b> Understand who is delegating to you and their voting power.\n\nTo get started, you can try asking things like:\n\"Can you show me the current DRep list?\"\n\"What are the details for my DRep ID?\"\n\"Who has voted for my DRep?\"\n\nI'm here to help you navigate the DRep landscape. What would you like to know first?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️ Normal Chat",
                    "additionalFields": {
                      "callback_data": "normalchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3220,
        7080
      ],
      "id": "0658dd82-e900-449d-8688-8d14f9e30d58",
      "name": "Mes_TranDeep_Drep_En",
      "webhookId": "1c587a97-baa1-4d6c-b4f1-15cd499e15e4",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "<b>You have entered the SPO advanced chat mode! </b>🎉\n\nNow, you can easily query for detailed information about your Stake Pool. Try these questions:\n\n* <b>My Stake Pool information:</b> \"Show me my pool details.\" or \"What are my pool stats?\"\n* <b>List of pools:</b> \"List all active pools.\" or \"Show me all registered SPOs.\"\n* <b>Your delegators:</b> \"Who are my delegators?\" or \"Show me my pool's stakers.\"\n* <b>Pool activity history:</b> \"What is my pool's performance history?\" or \"Show recent pool blocks.\"\n* <b>Pool DRep information:</b> \"Who is my pool's DRep?\"\n\nTry the above commands or let me know what pool information you are looking for!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️ Normal Chat",
                    "additionalFields": {
                      "callback_data": "normalchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3220,
        7680
      ],
      "id": "a4bb9342-abac-43e7-8e50-f552961b7609",
      "name": "Mes_TranDeep_SPO_En",
      "webhookId": "01bafcf2-236c-4586-8581-6e64310ac411",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "=<b>Bạn đã chuyển sang chế độ trò chuyện chuyên sâu dành cho SPO! </b>🎉\n\nBây giờ, bạn có thể dễ dàng truy vấn các thông tin chi tiết về Stake Pool của mình. Hãy thử những câu hỏi sau:\n\n* <b>Thông tin Stake Pool của tôi:</b> \"Show me my pool details.\" hoặc \"What are my pool stats?\"\n* <b>Danh sách các pool:</b> \"List all active pools.\" hoặc \"Show me all registered SPOs.\"\n* <b>Delegators của bạn:</b> \"Who are my delegators?\" hoặc \"Show me my pool's stakers.\"\n* <b>Lịch sử hoạt động pool:</b> \"What is my pool's performance history?\" hoặc \"Show recent pool blocks.\"\n* <b>Thông tin DRep của pool:</b> \"Who is my pool's DRep?\"\n\nHãy thử các câu lệnh trên hoặc cho tôi biết thông tin nào về pool mà bạn đang tìm kiếm nhé!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️ Trò chuyện bình thường",
                    "additionalFields": {
                      "callback_data": "normalchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3220,
        7420
      ],
      "id": "21af7a36-8c68-4ad0-9bf4-319885bf8964",
      "name": "Mes_TranDeep_SPO_Vi",
      "webhookId": "becfcbc8-b254-422e-9f08-538f7a15a22f",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Mes_TranDeep_SPO_En').item?.json?.result?.chat?.id ||\n      $('Mes_TranDeep_SPO_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_TranDeep_SPO_En').item?.json?.result?.message_id ||\n      $('Mes_TranDeep_SPO_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2920,
        7680
      ],
      "id": "11c14e3c-dee5-49ee-9af1-257586d0df65",
      "name": "SaveLog29",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Mes_TranDeep_CC_En').item?.json?.result?.chat?.id ||\n      $('Mes_TranDeep_CC_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_TranDeep_CC_En').item?.json?.result?.message_id ||\n      $('Mes_TranDeep_CC_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2920,
        8260
      ],
      "id": "15986df3-dbc4-4d0f-a045-f6d07f672f10",
      "name": "SaveLog30",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "=<b>Bạn đã chuyển sang chế độ trò chuyện chuyên sâu dành cho Ủy ban (CC)!</b> 🎉\n\nBây giờ, bạn có thể dễ dàng truy vấn các thông tin quan trọng liên quan đến vai trò Ủy ban của mình. Hãy thử những câu hỏi sau:\n\n* <b>Thông tin về Ủy ban:</b> \"Show me Committee details.\" hoặc \"What is the current CC status?\"\n* <b>Hoạt động của Ủy ban:</b> \"What are the latest CC actions?\" hoặc \"Show recent Committee votes.\"\n* <b>Các đề xuất của Ủy ban:</b> \"List CC proposals.\" hoặc \"Show active Committee proposals.\"\n* <b>Thông tin thành viên Ủy ban:</b> \"Who are the Committee members?\" hoặc \"List all CC members.\"\n\nHãy thử các câu lệnh trên hoặc cho tôi biết thông tin nào về Ủy ban mà bạn đang tìm kiếm nhé!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️ Trò chuyện bình thường",
                    "additionalFields": {
                      "callback_data": "normalchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3220,
        8000
      ],
      "id": "c4b8c712-586b-4eed-a342-618f840cf005",
      "name": "Mes_TranDeep_CC_Vi",
      "webhookId": "ee5e76dc-f71c-4b99-9c7c-1d4c98dad8c7",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "<b>Sorry, you can't access deep chat mode!</b> 🚫\n\nThis mode is exclusively for users with Onchain admin roles on Cardano, such as DReps, SPOs, and Committee members.\n\nTo enable it, please update your correct Onchain ID in the system. For example:\n- DRep: `drep17l6sywnxxxxxxxxswyrwvz3`\n- SPO: `pool155efqn9xxxxxxxxxxczg3asc`\n- Committee: `cc_hot1qvr7p6ms588xxxxhsq6ytv2`\n\nThank you! 😊",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🗣️ Normal Chat",
                    "additionalFields": {
                      "callback_data": "normalchat"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3220,
        8260
      ],
      "id": "f30a5559-0668-474c-96f7-f388fae275f7",
      "name": "Mes_TranDeep_CC_En",
      "webhookId": "868952a5-1d80-433f-9847-4a5749eaf946",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "🗣️ Activate In-depth Chat",
        "height": 2640,
        "width": 1900,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4280,
        5940
      ],
      "id": "492022fc-ce3c-4b4e-8b3e-d45042e9a8ba",
      "name": "Sticky Note27"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }};",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2400,
        4740
      ],
      "id": "433d756d-7a6e-4cf9-8ae0-754a265eab9b",
      "name": "Postgres5",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "deepchat": false,
            "telegramid": "={{ $json.telegramid }}"
          },
          "matchingColumns": [
            "telegramid"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "point",
              "displayName": "point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "onchainId",
              "displayName": "onchainId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "addresswallet",
              "displayName": "addresswallet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "deepchat",
              "displayName": "deepchat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2180,
        4740
      ],
      "id": "77a94b7f-1abc-4dec-8088-9351487c3c6e",
      "name": "Postgres12",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "01fc5b23-bfe6-4eaa-9246-065c24ea46e8",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1920,
        4740
      ],
      "id": "ca860611-a7dc-4c7c-bfe0-88a37a25e6bc",
      "name": "If29"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{\n      $('Mes_ChatNormal_En').item?.json?.result?.chat?.id ||\n      $('Mes_ChatNormal_Vi').item?.json?.result?.chat?.id ||\n      null\n    }},\n    {{\n      $('Mes_ChatNormal_En').item?.json?.result?.message_id ||\n      $('Mes_ChatNormal_Vi').item?.json?.result?.message_id ||\n      null\n    }},\n    {{ $('Telegram Trigger').item.json.callback_query.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1500,
        4720
      ],
      "id": "d31f799f-58e5-4e16-8566-34d81876310c",
      "name": "SaveLog31",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "<b>You have returned to normal chat status</b>😊",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1720,
        4880
      ],
      "id": "70ccafbf-52a9-4e56-86bd-bb05841498fe",
      "name": "Mes_ChatNormal_En",
      "webhookId": "ab6d1f0f-a894-4b90-9640-3033e6f5b02c",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "=<b>Bạn đã quay trở lại trạng thái trò chuyện bình thường</b>😊",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1720,
        4580
      ],
      "id": "8cc05cfb-46ae-41cc-9728-1ff29ff42a67",
      "name": "Mes_ChatNormal_Vi",
      "webhookId": "d4a24f80-c18a-4eee-85b1-d13a5723f67d",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8b738aed-c40d-4bed-b333-fefd58345a88",
              "leftValue": "={{ $json.deepchat }}",
              "rightValue": false,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3180,
        3020
      ],
      "id": "85c0dd6f-f20b-4d29-9b90-39b50becd06e",
      "name": "If30"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * from bbo_user where telegramid = {{ $json.message.from.id }};",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2700,
        3020
      ],
      "id": "abe59a96-0482-49d5-a413-5c0f6ffc9d3a",
      "name": "Postgres25",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "b3462fdc-be1e-465c-862b-87584183ae0b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Drep Chat"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "977faccb-f80f-4d9b-b4f4-6e09645f1406",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 4,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SPO  Chat"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "65f92aaa-9c9e-4298-b307-a0cf79dd78eb",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 6,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CC Chat"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3780,
        3000
      ],
      "id": "64d251e6-a1c1-4053-9b4f-e9625c8c80dc",
      "name": "SwitchRole"
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "Typing...",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4560,
        2480
      ],
      "id": "93409909-8786-4060-a988-39de34268dd5",
      "name": "Telegram",
      "webhookId": "39c9c02c-61c6-44bb-a5b8-1827eb98d1be",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}",
        "options": {
          "systemMessage": "=prompt self setup"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        4880,
        2480
      ],
      "id": "8d064666-addf-4278-b165-c6d9507b8f7d",
      "name": "AI Agent Drep"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Telegram').item.json.result.chat.id }}",
        "messageId": "={{ $('Telegram').item.json.result.message_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5280,
        2480
      ],
      "id": "e828cb7a-6268-421d-8179-5aa588fa5674",
      "name": "Telegram29",
      "webhookId": "416b437e-1433-4d7f-b638-4161547edc45",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{$('Mes_Rep_Drep').item?.json?.result?.chat?.id }},\n    {{$('Mes_Rep_Drep').item?.json?.result?.message_id }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        5700,
        2480
      ],
      "id": "aba0b553-bbb6-4e28-adee-80b8b64f4890",
      "name": "SaveLog32",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $('AI Agent Drep').item.json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5480,
        2480
      ],
      "id": "b0a98471-ac0f-4738-a127-e67affd5f011",
      "name": "Mes_Rep_Drep",
      "webhookId": "e035b230-2167-4d65-8bba-507bfd96efac",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "Typing...",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4560,
        3000
      ],
      "id": "b1c5476b-0851-45e7-b3af-8b1f0e0312bf",
      "name": "Telegram1",
      "webhookId": "055e7126-4ab9-4bcb-b00c-3961efd436ad",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}",
        "options": {
          "systemMessage": "=prompt self setup"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        4880,
        3000
      ],
      "id": "9fdc9492-5f53-413a-b586-cd4434b7de32",
      "name": "AI Agent Drep1"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Telegram1').item.json.result.chat.id }}",
        "messageId": "={{ $('Telegram1').item.json.result.message_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5280,
        3000
      ],
      "id": "ab1acc7e-0700-4a4b-96bf-769eb01ee34a",
      "name": "Telegram30",
      "webhookId": "93329443-5eb9-41dd-b305-4efef7f3d1e3",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{$('Mes_Rep_SPO').item?.json?.result?.chat?.id }},\n    {{$('Mes_Rep_SPO').item?.json?.result?.message_id }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        5700,
        3000
      ],
      "id": "11399a46-0794-469a-aa27-e7434d1ed832",
      "name": "SaveLog33",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "Typing...",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4560,
        3460
      ],
      "id": "3804c6d5-0ff1-4f2b-a730-9860eedca58c",
      "name": "Telegram2",
      "webhookId": "ea249742-9202-407f-9813-2a3c62148203",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}",
        "options": {
          "systemMessage": "=prompt self setup"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        4880,
        3460
      ],
      "id": "83c8477c-9c5f-4100-b06d-55b5a3d47790",
      "name": "AI Agent Drep2"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Telegram2').item.json.result.chat.id }}",
        "messageId": "={{ $('Telegram2').item.json.result.message_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5280,
        3460
      ],
      "id": "8bdfff5d-8a1d-4372-ae39-c0db988db386",
      "name": "Telegram31",
      "webhookId": "04c37c2c-8ee4-4919-9508-d069070e5b6b",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO activelog (chat_id, message_id, telegram_id)\nVALUES\n  (\n    {{ $('Telegram Trigger').item.json.message.chat.id }}, \n    {{ $('Telegram Trigger').item.json.message.message_id }}, \n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  ),\n  (\n    {{$('Mes_Rep_CC').item?.json?.result?.chat?.id }},\n    {{$('Mes_Rep_CC').item?.json?.result?.message_id }},\n    {{ $('Telegram Trigger').item.json.message.from.id }}\n  );",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        5700,
        3460
      ],
      "id": "d29eb588-7050-43a8-a4ec-9746cfa38788",
      "name": "SaveLog34",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $('AI Agent Drep1').item.json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5480,
        3000
      ],
      "id": "646ab6fc-6d2e-499a-bc50-ff8e8cac4aca",
      "name": "Mes_Rep_SPO",
      "webhookId": "d755394a-d9c2-4ee2-93f7-3de64e44bdff",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $('AI Agent Drep2').item.json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5480,
        3460
      ],
      "id": "316b3fa1-7ce2-4779-b1e4-750e145c8e25",
      "name": "Mes_Rep_CC",
      "webhookId": "8e0e8fc0-37f6-4a11-9948-e722c3827379",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "🗣️ Change chat status to normal chat",
        "height": 520,
        "width": 1240,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2480,
        4540
      ],
      "id": "0fae1914-9713-4ebf-a65f-a27dc5f68cf6",
      "name": "Sticky Note28"
    },
    {
      "parameters": {
        "content": "#Chat for Drep",
        "height": 440,
        "width": 1460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4480,
        2380
      ],
      "id": "8a83c272-893f-45c0-b80d-04e00fce17c6",
      "name": "Sticky Note29"
    },
    {
      "parameters": {
        "content": "#Chat for Drep",
        "height": 440,
        "width": 1460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4480,
        2880
      ],
      "id": "d4f4bdee-9dac-4f98-b807-ec6b19f29990",
      "name": "Sticky Note30"
    },
    {
      "parameters": {
        "content": "#Chat for Drep",
        "height": 540,
        "width": 1460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4480,
        3380
      ],
      "id": "e63b60b1-ffb6-4065-b8f1-972de2ae3420",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 6
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -5940,
        2380
      ],
      "id": "a07f72fa-e20b-42f9-8596-36833c201295",
      "name": "Schedule Trigger3"
    },
    {
      "parameters": {
        "content": "Check for new proposals on Cardano à notify users",
        "height": 780,
        "width": 2080,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6080,
        2300
      ],
      "id": "db06d47b-e1db-49f7-81f6-bdb55c8df3f0",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=prompt self setup\n",
        "options": {
          "systemMessage": "=prompt self setup"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -5140,
        2680
      ],
      "id": "23d65ea8-2dff-4f86-a59c-0975e6d3ae72",
      "name": "AI Agent Filter Noti"
    },
    {
      "parameters": {
        "url": "https://api.koios.rest/api/v1/proposal_list",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5720,
        2380
      ],
      "id": "f20fb5c1-9a94-434f-a79c-2c531f2d51b2",
      "name": "GetProposals"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f9ad04be-5293-40db-98d4-46eae5b4c616",
              "leftValue": "={{ $json.is_new }}",
              "rightValue": "={{ $json.formatNumber }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5000,
        2380
      ],
      "id": "b648bede-8406-4ce4-91fb-1fc65b12ce9f",
      "name": "If31"
    },
    {
      "parameters": {
        "jsCode": "const response = $input.first().json;\n\n// Lấy các trường từ proposal\nconst blockTime = response.block_time;\nconst proposalId = response.proposal_id;\nconst proposalType = response.proposal_type;\nconst deposit = response.deposit;\nconst title = response.meta_json.body.title; // hoặc response.proposal_title tùy theo key đúng trong JSON\nconst description = response.meta_json.body.abstract; // hoặc response.proposal_description\n\n// Chuyển block time thành dạng ISO\nconst formattedDate = blockTime ? new Date(blockTime * 1000).toISOString() : null;\n\nreturn [\n  {\n    json: {\n      blockTime,\n      formattedDate,\n      proposalId,\n      proposalType,\n      deposit,\n      title,\n      description,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5500,
        2380
      ],
      "id": "e257229f-556d-470f-a981-10f7e29dba53",
      "name": "Code5"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  CASE \n    WHEN EXISTS (\n      SELECT 1 FROM bbo_notification WHERE blocktime = '{{ $json.blockTime }}'\n    ) \n    THEN false \n    ELSE true \n  END AS is_new;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5280,
        2380
      ],
      "id": "3e5e6db6-50e9-476d-8d0b-71932ed910af",
      "name": "Postgres26",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO bbo_notification (blocktime, status)\nVALUES (\n  {{ $('Code5').item.json.blockTime }},\n  FALSE\n)\nON CONFLICT (blocktime) DO NOTHING;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5920,
        2700
      ],
      "id": "bf1fca89-9def-4873-a2b0-e7886fd125b4",
      "name": "Postgres27",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select * from bbo_notification where blocktime = {{ $('Code5').item.json.blockTime }};",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5740,
        2700
      ],
      "id": "82319f20-2a2b-4825-836f-688236f985ab",
      "name": "Postgres28",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8371eb6d-005a-4ee6-8914-3a2df24890c3",
              "leftValue": "={{ $json.status }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5520,
        2700
      ],
      "id": "92202400-d192-4b71-a8ca-ce9fffee3716",
      "name": "If32"
    },
    {
      "parameters": {
        "chatId": "7860424712",
        "text": "=Thông báo từ hệ thống! \nKhông có thông báo nào được cập nhật",
        "additionalFields": {
          "appendAttribution": true,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5600,
        2920
      ],
      "id": "b2947929-c229-487a-8114-9deb115ea02f",
      "name": "Telegram3",
      "webhookId": "f761a8df-6c1f-4e82-b26a-1b192276e2a4",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select * from bbo_user where allownoti = true",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4720,
        2680
      ],
      "id": "0d2a1199-1144-4587-87c0-053df826938a",
      "name": "Postgres29",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.telegramid }}",
        "text": "={{ $('AI Agent Filter Noti').item.json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4500,
        2680
      ],
      "id": "35f35457-537a-4fe6-8faa-25503ca951f9",
      "name": "Telegram14",
      "webhookId": "8544caa3-e58a-43ef-b16c-4e7f9088025a",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_notification",
          "mode": "list",
          "cachedResultName": "bbo_notification"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": true,
            "notification": "={{ $json.result.text }}",
            "blocktime": "={{ $('Code5').item.json.blockTime }}"
          },
          "matchingColumns": [
            "blocktime"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "notification",
              "displayName": "notification",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "createdat",
              "displayName": "createdat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "updateat",
              "displayName": "updateat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "blocktime",
              "displayName": "blocktime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4280,
        2680
      ],
      "id": "9494560a-fc94-40fc-a0aa-aafe2d1ad5bc",
      "name": "Postgres30",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "activelog",
          "mode": "list",
          "cachedResultName": "activelog"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "message_id": "={{ $json.result.message_id }}",
            "chat_id": "={{ $json.result.chat.id }}",
            "telegram_id": "={{ $json.result.chat.id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "telegram_id",
              "displayName": "telegram_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "createdonutc",
              "displayName": "createdonutc",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4280,
        2480
      ],
      "id": "6889e921-aaef-4ad9-8189-3c91c7d1b351",
      "name": "Savelog",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -3520,
        5420
      ],
      "id": "04249d6f-1e61-402a-8dea-f647642559e1",
      "name": "Ollama Chat Model"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2920,
        5640
      ],
      "id": "0c342428-53d4-4af1-a5a1-5435885ca422",
      "name": "Ollama Chat Model1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        -3360,
        5640
      ],
      "id": "912081bf-4b93-4b76-966b-0f66314c83b0",
      "name": "Embeddings Ollama"
    },
    {
      "parameters": {
        "name": "documents",
        "description": "Contains all the user's documents that you can check for context to answer user questions.",
        "topK": 5
      },
      "id": "e9792494-91ef-4c5c-82b4-14700406ab32",
      "name": "Retrieve Documents",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        3940,
        4620
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "your_table"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        3680,
        4600
      ],
      "id": "0459a977-1859-4fce-aeed-d19035e8f297",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "nldB6zRahygpLVhq",
          "name": "Supabase  Phuc's account "
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "tableName": "=n8n_chat_histories"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3500,
        4560
      ],
      "id": "27658cf5-56fb-48e7-9c71-18a336e41b24",
      "name": "Postgres Chat Memory5",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        3380,
        4560
      ],
      "id": "3fb3cd75-a3d6-47cd-a5ea-468d18e83a51",
      "name": "Ollama Chat Model2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        4240,
        4620
      ],
      "id": "e5ce5552-19e8-4a2e-b5d2-56d74ab3f3c4",
      "name": "Ollama Chat Model3"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        3620,
        4640
      ],
      "id": "bc399269-1bbf-4cd8-b458-d70891dda6f8",
      "name": "Embeddings Ollama1"
    },
    {
      "parameters": {
        "name": "documents",
        "description": "Contains all the user's documents that you can check for context to answer user questions.",
        "topK": 5
      },
      "id": "f34f873d-7652-4779-9302-ff779f0a0a83",
      "name": "Retrieve Documents2",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        5320,
        3700
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "your_table"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        5000,
        3700
      ],
      "id": "f1f5f307-4069-491a-887c-3178ae92daac",
      "name": "Supabase Vector Store2",
      "credentials": {
        "supabaseApi": {
          "id": "nldB6zRahygpLVhq",
          "name": "Supabase  Phuc's account "
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "tableName": "=n8n_chat_histories"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4860,
        3660
      ],
      "id": "08c11b2b-9cf8-44b2-a1df-0f586beab067",
      "name": "Postgres Chat Memory6",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        4760,
        3600
      ],
      "id": "ab6bbc60-ab83-4530-94f3-7a9660a8eda9",
      "name": "Ollama Chat Model4"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        5580,
        3740
      ],
      "id": "9a435740-aaea-4bde-b882-c67da5778d64",
      "name": "Ollama Chat Model5"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        4960,
        3740
      ],
      "id": "11f78b23-9f99-419e-b9c6-b6d1c5ccf476",
      "name": "Embeddings Ollama2"
    },
    {
      "parameters": {
        "name": "documents",
        "description": "Contains all the user's documents that you can check for context to answer user questions.",
        "topK": 5
      },
      "id": "7167f40b-c7a3-4497-a86a-df50154bed89",
      "name": "Retrieve Documents3",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        5400,
        3180
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "your_table"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        5120,
        3180
      ],
      "id": "c33ed23d-9dab-422d-9cc5-cc6cbf3147dc",
      "name": "Supabase Vector Store3",
      "credentials": {
        "supabaseApi": {
          "id": "nldB6zRahygpLVhq",
          "name": "Supabase  Phuc's account "
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "tableName": "=n8n_chat_histories"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4980,
        3140
      ],
      "id": "adfef36f-c038-4ac5-9f08-96bf791dcc79",
      "name": "Postgres Chat Memory7",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        4820,
        3120
      ],
      "id": "e40fe0df-76eb-4ca8-ae46-ec921e902a3b",
      "name": "Ollama Chat Model6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        5680,
        3200
      ],
      "id": "8e3d9de2-51a9-4b7c-9215-f3f253f44f76",
      "name": "Ollama Chat Model7"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        5080,
        3200
      ],
      "id": "5d576a78-6c53-45c9-9891-494cc758d884",
      "name": "Embeddings Ollama3"
    },
    {
      "parameters": {
        "name": "documents",
        "description": "Contains all the user's documents that you can check for context to answer user questions.",
        "topK": 5
      },
      "id": "f78214c5-bb0a-47c6-8b65-6f5e5d6f65e6",
      "name": "Retrieve Documents4",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        5040,
        2620
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "your_table"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        5320,
        2700
      ],
      "id": "1b309f5d-ef1f-4e52-8be8-483c76f2f2e6",
      "name": "Supabase Vector Store4",
      "credentials": {
        "supabaseApi": {
          "id": "nldB6zRahygpLVhq",
          "name": "Supabase  Phuc's account "
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "tableName": "=n8n_chat_histories"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4860,
        2600
      ],
      "id": "372a3e1e-286c-44df-b14b-434d29cc1133",
      "name": "Postgres Chat Memory8",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        4740,
        2580
      ],
      "id": "ee38ee93-9131-4544-9750-77db2d9df038",
      "name": "Ollama Chat Model8"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        5300,
        2620
      ],
      "id": "0a4d7f89-8143-422e-af2f-0c8f5898e876",
      "name": "Ollama Chat Model9"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        5580,
        2700
      ],
      "id": "7d3c8f9c-dc8d-4bba-bbdc-d152fdd7fc50",
      "name": "Embeddings Ollama4"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -5140,
        2820
      ],
      "id": "d9ce10cc-f03f-4d3b-a2a2-c82e316dbde3",
      "name": "Ollama Chat Model10"
    }
  ],
  "pinData": {},
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "Postgres25",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Lang_Start",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Lang_Help",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Find",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Select_Log",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Telegram28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Lang_Start": {
      "main": [
        [
          {
            "node": "Mes_Start_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Start_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Lang_Help": {
      "main": [
        [
          {
            "node": "Mes_Help_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Help_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Command": {
      "main": [
        [
          {
            "node": "Mes_Com_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Com_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Find": {
      "main": [
        [
          {
            "node": "CodeRandom",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CodeRandom1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Call_Help": {
      "main": [
        [
          {
            "node": "Help_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Help_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Call_Filter": {
      "main": [
        [
          {
            "node": "CodeRandom2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CodeRandom3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Telegram38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Start_Vi": {
      "main": [
        [
          {
            "node": "check_exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Start_En": {
      "main": [
        [
          {
            "node": "check_exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_exist": {
      "main": [
        [
          {
            "node": "Insert_user",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SaveLog",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Mes_AccDrep_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_AccDrep_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Switch-Account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "List_Role_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "List_Role_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Mes_Feedback_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Feedback_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Mes_F_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_F_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Feedback_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Feedback_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres6": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Mes_Update_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Update_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres7": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Mes_Update_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Update_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Postgres8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres8": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Postgres9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres9": {
      "main": [
        [
          {
            "node": "codefunction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Telegram11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "codefunction": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents1",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Telegram10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          },
          {
            "node": "SaveLog9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Telegram13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Policy_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Policy_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Mes_AccSPO_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_AccSPO_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Mes_AccCC_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_AccCC_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Mes_Id_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Id_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "Telegram23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert_user": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          },
          {
            "node": "SaveLog",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "Mes_AccUser_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_AccUser_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Call Back",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CodeRandom": {
      "main": [
        [
          {
            "node": "Mes_Filter_Vi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CodeRandom1": {
      "main": [
        [
          {
            "node": "Mes_Filter_EN",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram27": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram28": {
      "main": [
        [
          {
            "node": "Message_Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Call Back": {
      "main": [
        [
          {
            "node": "If_Call_Help",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Call_Filter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ExecuteQuestions",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CodeRandom3": {
      "main": [
        [
          {
            "node": "Filter_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CodeRandom2": {
      "main": [
        [
          {
            "node": "Filter_Vi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Drep_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Drep_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If18": {
      "main": [
        [
          {
            "node": "SPO_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SPO_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "CC_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CC_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If20": {
      "main": [
        [
          {
            "node": "User_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "User_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch-Account": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_exist": {
      "main": [
        [
          {
            "node": "If_exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Filter_Vi": {
      "main": [
        [
          {
            "node": "Inser_List_Question_Vi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Filter_EN": {
      "main": [
        [
          {
            "node": "Inser_List_Question",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ExecuteQuestions": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram37": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram38": {
      "main": [
        [
          {
            "node": "Mes_Response_Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Telegram37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "Telegram26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Mes_Add_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Add_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "If21",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If21": {
      "main": [
        [
          {
            "node": "Mes_Add_Empty_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Add_Empty_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "If22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If22": {
      "main": [
        [
          {
            "node": "If23",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If23": {
      "main": [
        [
          {
            "node": "Mes_Id_Empty_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Id_Empty_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram23": {
      "main": [
        []
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Select_Log": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Postgres11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request10": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Help_Vi": {
      "main": [
        [
          {
            "node": "SaveLog1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Help_En": {
      "main": [
        [
          {
            "node": "SaveLog1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SaveLog": {
      "main": [
        []
      ]
    },
    "Inser_List_Question": {
      "main": [
        [
          {
            "node": "SaveLog2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_AccSPO_En": {
      "main": [
        [
          {
            "node": "SaveLog3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_AccSPO_Vi": {
      "main": [
        [
          {
            "node": "SaveLog3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_AccUser_En": {
      "main": [
        [
          {
            "node": "SaveLog4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_AccUser_Vi": {
      "main": [
        [
          {
            "node": "SaveLog4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_AccCC_En": {
      "main": [
        [
          {
            "node": "SaveLog5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_AccCC_Vi": {
      "main": [
        [
          {
            "node": "SaveLog5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_AccDrep_Vi": {
      "main": [
        [
          {
            "node": "SaveLog6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_AccDrep_En": {
      "main": [
        [
          {
            "node": "SaveLog6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Feedback_Vi": {
      "main": [
        [
          {
            "node": "SaveLog7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Feedback_En": {
      "main": [
        [
          {
            "node": "SaveLog7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Com_Vi": {
      "main": [
        [
          {
            "node": "SaveLog8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Com_En": {
      "main": [
        [
          {
            "node": "SaveLog8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram13": {
      "main": [
        []
      ]
    },
    "Mes_F_Vi": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_F_En": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Id_Vi": {
      "main": [
        [
          {
            "node": "Postgres14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Id_En": {
      "main": [
        [
          {
            "node": "Postgres14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Id_Empty_Vi": {
      "main": [
        [
          {
            "node": "SaveLog10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Id_Empty_En": {
      "main": [
        [
          {
            "node": "SaveLog10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres14": {
      "main": [
        [
          {
            "node": "SaveLog11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Add_Empty_Vi": {
      "main": [
        [
          {
            "node": "SaveLog12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Add_Empty_En": {
      "main": [
        [
          {
            "node": "SaveLog12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres24": {
      "main": [
        [
          {
            "node": "SaveLog13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Add_Vi": {
      "main": [
        [
          {
            "node": "Postgres24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Add_En": {
      "main": [
        [
          {
            "node": "Postgres24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message_Response": {
      "main": [
        [
          {
            "node": "SaveLog14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Help_Vi": {
      "main": [
        [
          {
            "node": "SaveLog15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Help_En": {
      "main": [
        [
          {
            "node": "SaveLog15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter_Vi": {
      "main": [
        [
          {
            "node": "Inser_List_Question2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter_En": {
      "main": [
        [
          {
            "node": "Inser_List_Question1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List_Role_Vi": {
      "main": [
        [
          {
            "node": "SaveLog17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List_Role_En": {
      "main": [
        [
          {
            "node": "SaveLog17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Feedback_En": {
      "main": [
        [
          {
            "node": "SaveLog18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Feedback_Vi": {
      "main": [
        [
          {
            "node": "SaveLog18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Policy_Vi": {
      "main": [
        [
          {
            "node": "SaveLog19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Policy_En": {
      "main": [
        [
          {
            "node": "SaveLog19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Drep_En": {
      "main": [
        [
          {
            "node": "SaveLog20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Drep_Vi": {
      "main": [
        [
          {
            "node": "SaveLog20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CC_En": {
      "main": [
        [
          {
            "node": "SaveLog21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CC_Vi": {
      "main": [
        [
          {
            "node": "SaveLog21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SPO_En": {
      "main": [
        [
          {
            "node": "SaveLog23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SPO_Vi": {
      "main": [
        [
          {
            "node": "SaveLog23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User_En": {
      "main": [
        [
          {
            "node": "SaveLog22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User_Vi": {
      "main": [
        [
          {
            "node": "SaveLog22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Update_Vi": {
      "main": [
        [
          {
            "node": "SaveLog24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Update_En": {
      "main": [
        [
          {
            "node": "SaveLog24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Response_Filter": {
      "main": [
        [
          {
            "node": "SaveLog25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inser_List_Question1": {
      "main": [
        [
          {
            "node": "SaveLog16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inser_List_Question_Vi": {
      "main": [
        [
          {
            "node": "SaveLog2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inser_List_Question2": {
      "main": [
        [
          {
            "node": "SaveLog16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres11": {
      "main": [
        [
          {
            "node": "BK_And_Delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BK_And_Delete": {
      "main": [
        [
          {
            "node": "If24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If24": {
      "main": [
        [
          {
            "node": "Send_Mes_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send_Mes_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send_Mes_En": {
      "main": [
        [
          {
            "node": "SaveLog26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send_Mes_Vi": {
      "main": [
        [
          {
            "node": "SaveLog26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "IdHaveValue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IdHaveValue": {
      "main": [
        [
          {
            "node": "If25",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If25": {
      "main": [
        [
          {
            "node": "Mes_CheckDeep_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_CheckDeep_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_CheckDeep_En": {
      "main": [
        [
          {
            "node": "SaveLog27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_CheckDeep_Vi": {
      "main": [
        [
          {
            "node": "SaveLog27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If26": {
      "main": [
        [
          {
            "node": "Mes_TranDeep_Drep_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_TranDeep_Drep_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If27",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If27": {
      "main": [
        [
          {
            "node": "Mes_TranDeep_SPO_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_TranDeep_SPO_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If28": {
      "main": [
        [
          {
            "node": "Mes_TranDeep_CC_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_TranDeep_CC_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_TranDeep_Drep_Vi": {
      "main": [
        [
          {
            "node": "SaveLog28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_TranDeep_Drep_En": {
      "main": [
        [
          {
            "node": "SaveLog28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_TranDeep_SPO_En": {
      "main": [
        [
          {
            "node": "SaveLog29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_TranDeep_SPO_Vi": {
      "main": [
        [
          {
            "node": "SaveLog29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_TranDeep_CC_Vi": {
      "main": [
        [
          {
            "node": "SaveLog30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_TranDeep_CC_En": {
      "main": [
        [
          {
            "node": "SaveLog30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "Postgres12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "Mes_ChatNormal_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_ChatNormal_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres12": {
      "main": [
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_ChatNormal_En": {
      "main": [
        [
          {
            "node": "SaveLog31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_ChatNormal_Vi": {
      "main": [
        [
          {
            "node": "SaveLog31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If30": {
      "main": [
        [
          {
            "node": "SwitchRole",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres25": {
      "main": [
        [
          {
            "node": "If30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchRole": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "AI Agent Drep",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram29": {
      "main": [
        [
          {
            "node": "Mes_Rep_Drep",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Drep": {
      "main": [
        [
          {
            "node": "Telegram29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Rep_Drep": {
      "main": [
        [
          {
            "node": "SaveLog32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "AI Agent Drep1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Drep1": {
      "main": [
        [
          {
            "node": "Telegram30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram30": {
      "main": [
        [
          {
            "node": "Mes_Rep_SPO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "AI Agent Drep2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Drep2": {
      "main": [
        [
          {
            "node": "Telegram31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram31": {
      "main": [
        [
          {
            "node": "Mes_Rep_CC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Rep_SPO": {
      "main": [
        [
          {
            "node": "SaveLog33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Rep_CC": {
      "main": [
        [
          {
            "node": "SaveLog34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger3": {
      "main": [
        [
          {
            "node": "GetProposals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Filter Noti": {
      "main": [
        [
          {
            "node": "Postgres29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetProposals": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Postgres26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres26": {
      "main": [
        [
          {
            "node": "If31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If31": {
      "main": [
        [
          {
            "node": "Postgres27",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres27": {
      "main": [
        [
          {
            "node": "Postgres28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres28": {
      "main": [
        [
          {
            "node": "If32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If32": {
      "main": [
        [
          {
            "node": "AI Agent Filter Noti",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres29": {
      "main": [
        [
          {
            "node": "Telegram14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram14": {
      "main": [
        [
          {
            "node": "Postgres30",
            "type": "main",
            "index": 0
          },
          {
            "node": "Savelog",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store2": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents2",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama2": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store3": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents3",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model7": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama3": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store3",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store4": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents4",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model9": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama4": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store4",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model8": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Drep",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory8": {
      "ai_memory": [
        [
          {
            "node": "AI Agent Drep",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents4": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Drep",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Drep1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory7": {
      "ai_memory": [
        [
          {
            "node": "AI Agent Drep1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents3": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Drep1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Drep2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory6": {
      "ai_memory": [
        [
          {
            "node": "AI Agent Drep2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents2": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Drep2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory5": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model10": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Filter Noti",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3c1f852b-e666-4f9b-a636-f012420942c2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ddc78abf6d26c6050fafb0ba452cf56a55cb8482e5cde128d75a821055f99c24"
  },
  "id": "O8jQgOCcu6pKY4nh",
  "tags": [
    {
      "createdAt": "2025-05-28T16:33:50.281Z",
      "updatedAt": "2025-05-28T16:33:50.281Z",
      "id": "nFCOvmvILXOLrinD",
      "name": "Backup"
    },
    {
      "createdAt": "2025-05-28T16:34:00.056Z",
      "updatedAt": "2025-05-28T16:34:00.056Z",
      "id": "uqZbfO91vYEeojaD",
      "name": "Chatbot"
    }
  ]
}
