{
  "name": "BBO_GovernCardanoBot",
  "nodes": [
    {
      "parameters": {
        "content": "ADA - Bamboo: Telegram Chatbot @GovernCardanoBot Template\n\nProduct Introduction\nADA - Bamboo: Telegram Chatbot Template is a comprehensive, ready-to-use solution designed to help developers quickly build and deploy effective chatbots on the Telegram platform. This template provides a complete workflow, supporting the automation of user interactions, natural language processing (NLP), and seamless integration with modern AI tools.\n\nWith a flexible architecture and high customizability, chatbots developed from this template can intelligently receive and respond to messages, making them suitable for various purposes. These include customer service, personal virtual assistants, technical support, or creating engaging interactive experiences for marketing campaigns.\n\nDevelopment Team\nADA - Bamboo Team\n\nTemplate Structure\nThe template is organized into clear functional sections, facilitating easy management and development:\n\n- Command Functionality (Yellow): Focuses on processing commands from users such as /start, /help, /command, etc.\n- Button Functionality (Blue): Handles actions triggered by buttons (callback queries) within the application interface.\n- Koios API Integration (Purple): Processes button actions (callback queries) to connect with the Koios API, retrieving information about DReps, SPOs, and more.\n- Automated Notifications (Green): Manages the sending of automated notifications to users and administrators.\n- AI Question Answering (Red and Gray): Handles the function of answering user questions, connected to a local AI for analysis and accurate response generation.\n",
        "height": 520,
        "width": 1360,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5660,
        940
      ],
      "id": "b5d489f0-6c14-46c6-a9f0-2c1ed868ef71",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "060a8281-3bc5-4f0c-9b19-fa636d752089",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/",
                    "operator": {
                      "type": "string",
                      "operation": "notStartsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text_message"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "3acc4f3a-f5d9-4d99-a3dc-e27c6dfcf4a4"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_start"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bc442685-fce4-4397-99ef-375c7a97ff7f",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/help",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_help"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b957fdf3-c014-437a-adc5-929ee986b1a7",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/find",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_filter"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "647eb273-73e4-4a80-8f1e-da2fcf9ffa7e",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/account",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_account"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7a92ace6-f9ca-46ac-b707-2d838b157f20",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/feedback",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_feedback"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c46a3dc7-b7ea-44c6-9ee6-e13b5fd79eaa",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/f",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "feed_user"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7e2c37d4-c9fa-48de-b607-5893c8c03700",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/id",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update_onchain_user"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0fe2881d-0c34-4178-bafa-0b8dd4dcf946",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "=/",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "commands"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1740,
        3040
      ],
      "id": "79373ef6-bd04-42e7-9ab6-f314eadb1a25",
      "name": "Switch"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $('AI Agent').item.json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3160,
        3020
      ],
      "id": "5be9483a-5044-46af-b7bf-2b1b8193b14e",
      "name": "Message_Response",
      "webhookId": "c7d5d0c1-3275-41b4-b0c9-e2834e40ede6",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}",
        "options": {
          "systemMessage": "=AI Assistant Persona: Cardano Ecosystem Expert\nAI Name: GovernCardanoBot\nDeveloped by: BBO Team\nI. Role & Expertise\nYou are a professional-grade AI assistant with expert-level knowledge of the Cardano blockchain ecosystem. Your expertise encompasses all critical areas, including:\n\nCardano Governance (e.g., Project Catalyst, Cardano Improvement Proposals - CIPs, cardano governance, Cardano governance action, )\nStaking Mechanisms (e.g., ADA delegation, Stake Pool operations)\nNetwork Architecture (e.g., Ouroboros consensus algorithm, Hydra scaling solution, Mithril)\nTokenomics (e.g., ADA utility, monetary policy)\nCommunity Initiatives\nOn-chain Developments (e.g., Plutus DApps, smart contracts)\nII. Core Principles & Information Retrieval\nUpon receiving a user query, your primary directive is to:\n\nPrioritize Verifiable Information: Immediately search and leverage provided Cardano-related documents or an internal knowledge base.\nCite Sources: Generate responses using accurate and verifiable information, consistently citing the document sources where applicable (e.g., [Source: Document A, Page X]).\nFallback to Expertise: If the requested information isn't found in the provided documents, fall back on your extensive internal knowledge. Your internal knowledge reflects the perspective of someone with deep, long-term engagement and experience within the Cardano ecosystem.\nIII. Response Quality & Tone\nAll responses must adhere to the following standards:\n\nFactual Accuracy: Ensure all information is factually correct.\nClarity & Structure: Present information clearly, logically structured, and easy to follow.\nAccessibility: Be accessible to both newcomers and experienced blockchain users.\nTechnical Precision: Avoid unnecessary jargon, but maintain high technical precision when required.\nProfessional Tone: Maintain a professional, reliable, and neutral tone.\nIV. Output Content & Enhanced Comprehension\nTo ensure maximum understanding and engagement, your output should consistently incorporate elements that simplify complex topics:\n\nIllustrative Examples: Provide clear, concrete examples to demonstrate concepts.\nFor instance: When explaining the staking mechanism, describe a typical user's journey from delegating ADA to receiving rewards.\nComparative Analysis: Use comparisons or analogies to relate Cardano concepts to more familiar ideas or other blockchain ecosystems (where appropriate and unbiased).\nFor example: Compare Cardano's EUTXO model to Bitcoin's UTXO for clarity.\nConceptual Visualizations/Analogies: Help users form a mental model of abstract processes or architectures.\nThink about how to describe the Ouroboros consensus mechanism using a real-world analogy, such as a parliamentary election.\nTuyệt vời, tôi hiểu rõ hơn rồi! Bạn muốn một định dạng HTML tối giản nhất, chỉ tập trung vào việc làm nổi bật các từ khóa quan trọng bằng in đậm và in nghiêng, mà không cần bất kỳ cấu trúc thẻ HTML nào khác như tiêu đề, đoạn văn hay danh sách.\n\nTôi đã điều chỉnh lại mục \"V. Output Format\" để phản ánh chính xác yêu cầu này.\n\nAI Assistant Persona: Cardano Ecosystem Expert\nAI Name: GovernCardanoBot\nDeveloped by: BBO Team\nI. Role & Expertise\nYou are a professional-grade AI assistant with expert-level knowledge of the Cardano blockchain ecosystem. Your expertise encompasses all critical areas, including:\n\nCardano Governance (e.g., Project Catalyst, Cardano Improvement Proposals - CIPs)\nStaking Mechanisms (e.g., ADA delegation, Stake Pool operations)\nNetwork Architecture (e.g., Ouroboros consensus algorithm, Hydra scaling solution, Mithril)\nTokenomics (e.g., ADA utility, monetary policy)\nCommunity Initiatives\nOn-chain Developments (e.g., Plutus DApps, smart contracts)\nII. Core Principles & Information Retrieval\nUpon receiving a user query, your primary directive is to:\n\nPrioritize Verifiable Information: Immediately search and leverage provided Cardano-related documents or an internal knowledge base.\nCite Sources: Generate responses using accurate and verifiable information, consistently citing the document sources where applicable (e.g., [Source: Document A, Page X]).\nFallback to Expertise: If the requested information isn't found in the provided documents, fall back on your extensive internal knowledge. Your internal knowledge reflects the perspective of someone with deep, long-term engagement and experience within the Cardano ecosystem.\nIII. Response Quality & Tone\nAll responses must adhere to the following standards:\n\nFactual Accuracy: Ensure all information is factually correct.\nClarity & Structure: Present information clearly, logically structured, and easy to follow.\nAccessibility: Be accessible to both newcomers and experienced blockchain users.\nTechnical Precision: Avoid unnecessary jargon, but maintain high technical precision when required.\nProfessional Tone: Maintain a professional, reliable, and neutral tone.\nIV. Output Content & Enhanced Comprehension\nTo ensure maximum understanding and engagement, your output should consistently incorporate elements that simplify complex topics:\n\nIllustrative Examples: Provide clear, concrete examples to demonstrate concepts.\nFor instance: When explaining the staking mechanism, describe a typical user's journey from delegating ADA to receiving rewards.\nComparative Analysis: Use comparisons or analogies to relate Cardano concepts to more familiar ideas or other blockchain ecosystems (where appropriate and unbiased).\nFor example: Compare Cardano's EUTXO model to Bitcoin's UTXO for clarity.\nConceptual Visualizations/Analogies: Help users form a mental model of abstract processes or architectures.\nThink about how to describe the Ouroboros consensus mechanism using a real-world analogy, such as a parliamentary election.\nV. Output Format\nAll responses must be formatted exclusively in HTML. Only use HTML tags for inline text formatting: <strong> or <b> for bold text, and <em> or <i> for italic text. Do NOT use Markdown formatting (e.g., **bold**, # heading, * list item) in your output."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        2600,
        3020
      ],
      "id": "9e0a410e-8b03-424d-b597-9ca5668774d8",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "name": "document",
        "description": "Contains all the user's documents that you can check for context to answer user questions.",
        "topK": 5
      },
      "id": "ff5d49b3-4191-40b0-918b-de30ce62ac6d",
      "name": "Retrieve Documents",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        3100,
        3280
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "document",
          "mode": "list",
          "cachedResultName": "document"
        },
        "options": {
          "queryName": "match_document"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        2680,
        3380
      ],
      "id": "c00aef2b-83cb-4552-8497-74787c6e9a61",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "nldB6zRahygpLVhq",
          "name": "Supabase  Phuc's account "
        }
      }
    },
    {
      "parameters": {
        "content": "Ai Agent: Trả lời câu hỏi từ nguiowf dùng. ",
        "height": 660,
        "width": 1220,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2280,
        2920
      ],
      "id": "ea696fe0-da42-4045-869f-3e85ce494659",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨<b>Vui lòng gửi ý kiến đóng góp theo cú pháp</b>\n\n/f _Ý kiến đóng góp xây dựng của bạn!_\n\n<b>ADA-Bamboo Team</b> rất mong nhận được những ý kiến đóng góp xây dựng cũng như cảm nhận về sản phẩm của bạn.\nTrên tinh thần đó BBO sẽ càng ngày tối ưu và cập nhật sản phẩm tốt hơn. <b>Trân thành cảm ơn bạn!</b>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3120,
        3320
      ],
      "id": "9cba4691-97f8-48fe-898b-65315b3a6b1e",
      "name": "Feedback",
      "webhookId": "efbbb5fd-08df-4422-a045-cb169df2116c",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "✨<b>Hãy chọn một tùy chọn để bắt đầu:</b>\n\n❓Trợ giúp: <i>Gợi ý lệnh</i>\n💡Bộ lọc: <i>Câu hỏi gợi ý</i>\n📝Phản hồi: <i>Đóng góp ý kiến</i>\n👤Tài khoản: <i>Thông tin tài khoản</i>\n\n<b>Hoặc bạn có thể sử dụng các lệnh sau:</b>\n\n❓ /help - <i>Gợi ý lệnh</i>\n💡 /find - <i>Câu hỏi gợi ý</i>\n📝 /feedback - <i>Đóng góp ý kiến</i>\n👤 /account - <i>Thông tin tài khoản</i>\n\nBạn có thể tham gia nhóm cộng đồng tại: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Trợ giúp",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Tài khoản",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Đánh giá",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Câu hỏi ",
                    "additionalFields": {
                      "callback_data": "find "
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2020,
        1760
      ],
      "id": "3d795d27-04e0-41fd-9c71-0d58aefcb82f",
      "name": "Mes_Help_Vi",
      "webhookId": "5c7daab0-e193-486f-819b-98db8a000f5e",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "✨<b>Choose an option to get started:</b>\n\n❓Help: <i>Command suggestions</i>\n💡Filter: <i>Suggested questions</i>\n📝Feedback: <i>Share your feedback</i>\n👤Account: <i>Account information</i>\n\n<b>Or you can use the following commands:</b>\n\n❓ /help - <i>Command suggestions</i>\n💡 /find - <i>Suggested questions</i>\n📝 /feedback - <i>Share your feedback</i>\n👤 /account - <i>Account information</i>\n\nYou can join our community group at: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Help",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Account",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Feedback",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Filter",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2020,
        2000
      ],
      "id": "3f8a8238-5fa9-4c82-940f-9bbe814f123e",
      "name": "Mes_Help_En",
      "webhookId": "6091e817-399b-4e3b-9a00-4a62cbfa1039",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=Xin chào <b>{{ $('Telegram Trigger').item.json.message.chat.username }}</b>\nChào mừng bạn đến với <b>GovernCardanoBot</b> – trợ lý ảo thông minh của bạn!\n\n📖 <b>GovernCardanoBot</b> được phát triển bởi <b>Bamboo Team</b>, chuyên hỗ trợ giải đáp mọi thắc mắc về <b>Blockchain Cardano</b> và các hoạt động quản trị liên quan.\n\n✨<b>Hãy chọn một tùy chọn để bắt đầu:</b>\n❓ /help - <i>Gợi ý lệnh</i>\n💡 /find - <i>Câu hỏi gợi ý</i>\n📝 /feedback - <i>Đóng góp ý kiến</i>\n👤 /account - <i>Thông tin tài khoản</i>\n\nBạn có thể tham gia nhóm cộng đồng tại: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Trợ giúp",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Tài khoản",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝 Đánh giá",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Câu hỏi",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2060,
        2400
      ],
      "id": "6d342490-4cf6-4f8d-88ed-dce4cb911ea5",
      "name": "Mes_Start_Vi",
      "webhookId": "7aece3ad-9913-4c02-84fa-785ed7a719e9",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=Hello <b>{{ $('Telegram Trigger').item.json.message.chat.username }}</b>! \nWelcome to *GovernCardanoBot* – your smart virtual assistant!\n\n📖 <b>GovernCardanoBot</b> is powered by <b>Bamboo Team</b>, designed to answer all your questions about the *Cardano Blockchain* and its governance activities.\n\n✨<b>Choose an option to get started:</b>\n\n❓ /help - <i>Command suggestions</i>\n💡 /find - <i>Suggested questions</i>\n📝 /feedback - <i>Share your feedback</i>\n👤 /account - <i>Account information</i>\n\nYou can join our community group at: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Help",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Account ",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Feedback",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Filter",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2060,
        2620
      ],
      "id": "e9014a1d-7dbb-4f7e-8110-5ecae7310ad6",
      "name": "Mes_Start_En",
      "webhookId": "2337c0fc-fc1e-4884-a621-6783ae2c6291",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "9347071f-e88c-45e8-b65e-6b528f6a03ed",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1820,
        2500
      ],
      "id": "f16dd96b-cc85-479a-8fdc-51a9d705e2a5",
      "name": "If_Lang_Start"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "0ca45c62-b397-4851-9c5a-6280dd54590e",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1680,
        1860
      ],
      "id": "85af62f8-d850-4786-abfa-f302553623bb",
      "name": "If_Lang_Help"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "13eaa743-02a0-44fd-a73e-25531343fb95",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        760,
        3800
      ],
      "id": "2d3f2eea-7d78-4923-aee7-35070d743934",
      "name": "If_Command"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "✨<b>Danh sách câu lệnh:</b>\n/start - <i>Khởi động chatbot</i>\n/help - <i>Gợi ý lệnh</i>\n/find - <i>Câu hỏi gợi ý</i>\n/feedback - <i>Đóng góp ý kiến</i>\n/account - <i>Thông tin tài khoản</i>\n/id - <i>Cập nhật ID Onchain</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1060,
        3680
      ],
      "id": "3487a4c2-c092-4e50-9927-5968f10915b7",
      "name": "Mes_Com_Vi",
      "webhookId": "7f010cec-798b-4dd8-a3c5-e18ab2f84071",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "f7f438e3-7084-4502-b2cd-f681e2e79824",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1640,
        1320
      ],
      "id": "0cce5331-910d-461b-965f-bfdc81ae8c76",
      "name": "If_Find"
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch').item.json.message.from.id }}",
        "text": "=✨<b>Chọn một câu hỏi gợi ý để bắt cuộc trò chuyện!</b>\n<i>Vui lòng nhấn vào một số từ 1 đến 10 để xem câu hỏi</i>:\n\n{{ $json.random_questions }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[0][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[0][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[1][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[1][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[2][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[2][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[3][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[3][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[4][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[4][0].callback_data }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[5][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[5][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[6][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[6][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[7][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[7][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[8][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[8][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[9][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[9][0].callback_data }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2140,
        1220
      ],
      "id": "6f7b5c40-fe7c-4aab-9410-48ccd80054ef",
      "name": "Mes_Filter_Vi",
      "webhookId": "8e961d49-6e4a-48e7-ad91-5d6bcd23a893",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "✨<b>List of commands:</b>\n/start - <i>Start chatbot</i>\n/help - <i>Command suggestions</i>\n/find - <i>Suggested questions</i>\n/feedback - <i>Share your feedback</i>\n/account - <i>Account information</i>\n/id - <i>Update ID Onchain</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1060,
        3880
      ],
      "id": "a5d2df3c-ca83-4064-ac79-055852c57143",
      "name": "Mes_Com_En",
      "webhookId": "b3793b02-f9c2-4790-85e8-28948cf4bec1",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "791ff0db-6349-461a-bc25-e775add7e88f",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5600,
        3500
      ],
      "id": "ebec23a2-8d2d-461d-828c-dd76f23c1f89",
      "name": "If_Call_Help"
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨<b>Hãy chọn một tùy chọn để bắt đầu:</b>\n\n❓Trợ giúp: <i>Gợi ý lệnh</i>\n💡Bộ lọc: <i>Câu hỏi gợi ý</i>\n📝Phản hồi: <i>Đóng góp ý kiến</i>\n👤Tài khoản: <i>Thông tin tài khoản</i>\n\n<b>Hoặc bạn có thể sử dụng các lệnh sau:</b>\n\n❓ /help - <i>Gợi ý lệnh</i>\n💡 /find - <i>Câu hỏi gợi ý</i>\n📝 /feedback - <i>Đóng góp ý kiến</i>\n👤 /account - <i>Thông tin tài khoản</i>\n\nBạn có thể tham gia nhóm cộng đồng tại: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Trợ giúp",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Tài khoản",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Đánh giá",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Câu hỏi",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5640,
        3300
      ],
      "id": "9f623f8e-a395-4feb-bee6-2939203f6570",
      "name": "Help_Vi",
      "webhookId": "d5717442-eb19-4518-8755-19fa1451306d",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨<b>Choose an option to get started:</b>\n\n❓Help: <i>Command suggestions</i>\n💡Filter: <i>Suggested questions</i>\n📝Feedback: <i>Share your feedback</i>\n👤Account: <i>Account information</i>\n\n<b>Or you can use the following commands:</b>\n\n❓ /help - <i>Command suggestions</i>\n💡 /find - <i>Suggested questions</i>\n📝 /feedback - <i>Share your feedback</i>\n👤 /account - <i>Account information</i>\n\nYou can join our community group at: [Cardano_ECO_VN](https://t.me/Cardano_ECO_VN)",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "❓Help",
                    "additionalFields": {
                      "callback_data": "help"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👤Account",
                    "additionalFields": {
                      "callback_data": "account"
                    }
                  },
                  {
                    "text": "📝Feedback",
                    "additionalFields": {
                      "callback_data": "feedback"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "💡Filter ",
                    "additionalFields": {
                      "callback_data": "find"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5340,
        3520
      ],
      "id": "0ec55112-8c82-4d77-91b1-61d6f9557d28",
      "name": "Help_En",
      "webhookId": "72b88a31-1359-4794-bff3-51b5dc3f330b",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d5eaffb-93cc-4b5e-9008-86db761771fa",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4800,
        3520
      ],
      "id": "95bc989f-f5eb-4d9e-b2e3-fa2d42f51e31",
      "name": "If_Call_Filter"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $('AI Agent1').item.json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -300,
        1960
      ],
      "id": "785d8552-fbb9-452b-8446-b0c1838b188f",
      "name": "Message_Response1",
      "webhookId": "1f4b5080-c7ab-4b93-8ba4-e2f5ee97814f",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code7').item.json.question }}",
        "options": {
          "systemMessage": "AI Assistant Persona: Cardano Ecosystem Expert\nAI Name: GovernCardanoBot\nDeveloped by: BBO Team\nI. Role & Expertise\nYou are a professional-grade AI assistant with expert-level knowledge of the Cardano blockchain ecosystem. Your expertise encompasses all critical areas, including:\n\nCardano Governance (e.g., Project Catalyst, Cardano Improvement Proposals - CIPs, cardano governance, Cardano governance action, )\nStaking Mechanisms (e.g., ADA delegation, Stake Pool operations)\nNetwork Architecture (e.g., Ouroboros consensus algorithm, Hydra scaling solution, Mithril)\nTokenomics (e.g., ADA utility, monetary policy)\nCommunity Initiatives\nOn-chain Developments (e.g., Plutus DApps, smart contracts)\nII. Core Principles & Information Retrieval\nUpon receiving a user query, your primary directive is to:\n\nPrioritize Verifiable Information: Immediately search and leverage provided Cardano-related documents or an internal knowledge base.\nCite Sources: Generate responses using accurate and verifiable information, consistently citing the document sources where applicable (e.g., [Source: Document A, Page X]).\nFallback to Expertise: If the requested information isn't found in the provided documents, fall back on your extensive internal knowledge. Your internal knowledge reflects the perspective of someone with deep, long-term engagement and experience within the Cardano ecosystem.\nIII. Response Quality & Tone\nAll responses must adhere to the following standards:\n\nFactual Accuracy: Ensure all information is factually correct.\nClarity & Structure: Present information clearly, logically structured, and easy to follow.\nAccessibility: Be accessible to both newcomers and experienced blockchain users.\nTechnical Precision: Avoid unnecessary jargon, but maintain high technical precision when required.\nProfessional Tone: Maintain a professional, reliable, and neutral tone.\nIV. Output Content & Enhanced Comprehension\nTo ensure maximum understanding and engagement, your output should consistently incorporate elements that simplify complex topics:\n\nIllustrative Examples: Provide clear, concrete examples to demonstrate concepts.\nFor instance: When explaining the staking mechanism, describe a typical user's journey from delegating ADA to receiving rewards.\nComparative Analysis: Use comparisons or analogies to relate Cardano concepts to more familiar ideas or other blockchain ecosystems (where appropriate and unbiased).\nFor example: Compare Cardano's EUTXO model to Bitcoin's UTXO for clarity.\nConceptual Visualizations/Analogies: Help users form a mental model of abstract processes or architectures.\nThink about how to describe the Ouroboros consensus mechanism using a real-world analogy, such as a parliamentary election.\nTuyệt vời, tôi hiểu rõ hơn rồi! Bạn muốn một định dạng HTML tối giản nhất, chỉ tập trung vào việc làm nổi bật các từ khóa quan trọng bằng in đậm và in nghiêng, mà không cần bất kỳ cấu trúc thẻ HTML nào khác như tiêu đề, đoạn văn hay danh sách.\n\nTôi đã điều chỉnh lại mục \"V. Output Format\" để phản ánh chính xác yêu cầu này.\n\nAI Assistant Persona: Cardano Ecosystem Expert\nAI Name: GovernCardanoBot\nDeveloped by: BBO Team\nI. Role & Expertise\nYou are a professional-grade AI assistant with expert-level knowledge of the Cardano blockchain ecosystem. Your expertise encompasses all critical areas, including:\n\nCardano Governance (e.g., Project Catalyst, Cardano Improvement Proposals - CIPs)\nStaking Mechanisms (e.g., ADA delegation, Stake Pool operations)\nNetwork Architecture (e.g., Ouroboros consensus algorithm, Hydra scaling solution, Mithril)\nTokenomics (e.g., ADA utility, monetary policy)\nCommunity Initiatives\nOn-chain Developments (e.g., Plutus DApps, smart contracts)\nII. Core Principles & Information Retrieval\nUpon receiving a user query, your primary directive is to:\n\nPrioritize Verifiable Information: Immediately search and leverage provided Cardano-related documents or an internal knowledge base.\nCite Sources: Generate responses using accurate and verifiable information, consistently citing the document sources where applicable (e.g., [Source: Document A, Page X]).\nFallback to Expertise: If the requested information isn't found in the provided documents, fall back on your extensive internal knowledge. Your internal knowledge reflects the perspective of someone with deep, long-term engagement and experience within the Cardano ecosystem.\nIII. Response Quality & Tone\nAll responses must adhere to the following standards:\n\nFactual Accuracy: Ensure all information is factually correct.\nClarity & Structure: Present information clearly, logically structured, and easy to follow.\nAccessibility: Be accessible to both newcomers and experienced blockchain users.\nTechnical Precision: Avoid unnecessary jargon, but maintain high technical precision when required.\nProfessional Tone: Maintain a professional, reliable, and neutral tone.\nIV. Output Content & Enhanced Comprehension\nTo ensure maximum understanding and engagement, your output should consistently incorporate elements that simplify complex topics:\n\nIllustrative Examples: Provide clear, concrete examples to demonstrate concepts.\nFor instance: When explaining the staking mechanism, describe a typical user's journey from delegating ADA to receiving rewards.\nComparative Analysis: Use comparisons or analogies to relate Cardano concepts to more familiar ideas or other blockchain ecosystems (where appropriate and unbiased).\nFor example: Compare Cardano's EUTXO model to Bitcoin's UTXO for clarity.\nConceptual Visualizations/Analogies: Help users form a mental model of abstract processes or architectures.\nThink about how to describe the Ouroboros consensus mechanism using a real-world analogy, such as a parliamentary election.\nV. Output Format\nAll responses must be formatted exclusively in HTML. Only use HTML tags for inline text formatting: <strong> or <b> for bold text, and <em> or <i> for italic text. Do NOT use Markdown formatting (e.g., **bold**, # heading, * list item) in your output."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -960,
        1960
      ],
      "id": "c3315204-23e7-4522-b5da-d1961c371814",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "tableName": "=n8n_chat_histories"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -840,
        2080
      ],
      "id": "1b67d5fb-f015-491d-9328-67ef1006d143",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "3daaadcc-b1d9-413e-8e73-04a18b2847d3",
              "leftValue": "={{ $json.user_exists }}",
              "rightValue": "false",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2460,
        2500
      ],
      "id": "25e255a4-039a-45fe-9341-4190c4439d21",
      "name": "If_exist"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "isactive": true,
            "allownoti": true,
            "telegramid": "={{ $('Telegram Trigger').item.json.message.from.id }}",
            "username": "={{ $('Telegram Trigger').item.json.message.from.username }}",
            "roleid": 3
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2700,
        2480
      ],
      "id": "a8a8f392-aca5-42bf-9a81-74503002fc2e",
      "name": "Insert_user",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨Lệnh /start✨\n📥 Khi người dùng gửi lệnh /start để bắt đầu sử dụng chatbot:\n\n🔎 Hệ thống sẽ thực hiện kiểm tra như sau:\n\n✅ Nếu người dùng đã có tài khoản trên hệ thống BBO → Cho phép tiếp tục sử dụng ngay.\n\n🆕 Nếu là người dùng mới → Hệ thống sẽ tự động khởi tạo tài khoản mới trên nền tảng BBO, sử dụng các thông tin cơ bản được cung cấp.",
        "height": 620,
        "width": 1680
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1660,
        2200
      ],
      "id": "5b76c0e5-d53b-479e-a437-a4dac651d20c",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "/help✨ — Bạn cần trợ giúp?\nGửi lệnh này để nhận hướng dẫn sử dụng chatbot!\n🤖 Chatbot sẽ gợi ý cho bạn những lệnh phổ biến và cách dùng để bạn thao tác nhanh hơn và hiệu quả hơn!",
        "height": 500,
        "width": 700
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        1640
      ],
      "id": "11b93fb0-a684-46a2-8f76-5df8203cdc54",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "✨ Lệnh /find ✨ \nHệ thống sẽ đề xuất những câu hỏi phổ biến, phù hợp với nhu cầu của bạn nhằm giúp bạn bắt đầu cuộc trò chuyện dễ dàng hơn.",
        "height": 440,
        "width": 1060
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1520,
        1140
      ],
      "id": "742cfe01-6cec-496e-83cd-e702f093b2c9",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        980,
        320
      ],
      "id": "0401ca55-faa7-4826-9c1f-adaa9bc6aa81",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.message.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1600,
        800
      ],
      "id": "bbef0963-8a9b-429f-85f1-d9f656b28368",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Thông tin Drep",
                    "additionalFields": {
                      "callback_data": "api_drepinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách ủy quyền cho bạn",
                    "additionalFields": {
                      "callback_data": "DReps_Delegators"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách đã vote của bạn",
                    "additionalFields": {
                      "callback_data": "voter_proposal_list"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Lịch sử quyền biểu quyết của bạn",
                    "additionalFields": {
                      "callback_data": "Drep_voting_power_history"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Thông tin về  epoch",
                    "additionalFields": {
                      "callback_data": "epoch_params"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1200,
        300
      ],
      "id": "10874e9f-e47d-40a3-b7b2-b07715b81bdc",
      "name": "Telegram",
      "webhookId": "10c25900-e886-411e-9156-3445425e6fbc",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Drep infomation",
                    "additionalFields": {
                      "callback_data": "api_drepinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "List of DReps Delegators",
                    "additionalFields": {
                      "callback_data": "DReps_Delegators"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Voter's Proposal List",
                    "additionalFields": {
                      "callback_data": "voter_proposal_list"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Voting Power History",
                    "additionalFields": {
                      "callback_data": "Drep_voting_power_history"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Information About  Epoch",
                    "additionalFields": {
                      "callback_data": "epoch_params"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        940,
        140
      ],
      "id": "230627fc-f39a-484c-bdf9-7498473bb2ed",
      "name": "Telegram1",
      "webhookId": "6279e0f3-73b3-4923-bff1-a1b98f9a71b4",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨Lệnh /account✨\nHiển thị thông tin thông tin người dùng",
        "height": 1080,
        "width": 1840
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "2764d0ca-03ea-488a-99bf-2a80601624dc",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "updates": [
          "message",
          "callback_query"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -1500,
        3200
      ],
      "id": "a597e830-ed45-438a-b9f4-163efb3d6391",
      "name": "Telegram Trigger",
      "webhookId": "1ee99db3-c9bf-49a5-a734-4bb702774c7a",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨Lệnh command✨ HIển thị câu lệnh gượi ý",
        "height": 380,
        "width": 620
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        680,
        3660
      ],
      "id": "98a078a1-0a4a-47d1-a74f-72538787c2c7",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5780,
        4320
      ],
      "id": "4677b8d3-79d3-4d2c-8dcb-fa9e557f2851",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "cee73a9e-9d6c-4203-8f85-c775c3ae6241",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3820,
        3520
      ],
      "id": "a3f47c8f-09f3-42dc-874c-24c3d52e8c03",
      "name": "If3"
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨Vui lòng chọn vai trò hiện tại của bạn",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🧑‍💻User",
                    "additionalFields": {
                      "callback_data": "user"
                    }
                  },
                  {
                    "text": "🔐Holder",
                    "additionalFields": {
                      "callback_data": "holder"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👨‍🔧SPO",
                    "additionalFields": {
                      "callback_data": "spo"
                    }
                  },
                  {
                    "text": "🧑‍🎓 Committe",
                    "additionalFields": {
                      "callback_data": "committe"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🙋Drep",
                    "additionalFields": {
                      "callback_data": "drep"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3860,
        3320
      ],
      "id": "506ad83b-44a9-4386-8445-de2c8315f36d",
      "name": "Telegram2",
      "webhookId": "8994819a-5b84-4e85-a046-345d7be30182",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨Please select your current role",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🧑‍💻User",
                    "additionalFields": {
                      "callback_data": "user"
                    }
                  },
                  {
                    "text": "🔐Holder",
                    "additionalFields": {
                      "callback_data": "holder"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "👨‍🔧SPO",
                    "additionalFields": {
                      "callback_data": "spo"
                    }
                  },
                  {
                    "text": "🧑‍🎓 Committe",
                    "additionalFields": {
                      "callback_data": "committe"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🙋Drep",
                    "additionalFields": {
                      "callback_data": "drep"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3560,
        3540
      ],
      "id": "7c68f7f9-3dd7-479a-8fa5-c1e25c6eb4fd",
      "name": "Telegram3",
      "webhookId": "40759ec4-abea-4bd3-b96e-b809aab0834a",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "bcbff913-39c0-4fbe-9947-0abb959a23d9",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        80,
        3820
      ],
      "id": "c2c63b1e-5cf6-426d-a01b-996fc3c75f5d",
      "name": "If4"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨<b>Vui lòng gửi ý kiến đóng góp theo cú pháp</b>\n\n/f  <i>Ý kiến đóng góp xây dựng của bạn!</i>\n\n<b>ADA-Bamboo Team</b> rất mong nhận được những ý kiến đóng góp xây dựng cũng như cảm nhận về sản phẩm của bạn.\nTrên tinh thần đó BBO sẽ càng ngày tối ưu và cập nhật sản phẩm tốt hơn. <b>Trân thành cảm ơn bạn!</b>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -160,
        3720
      ],
      "id": "b300db97-797c-4f45-99a8-5054406d3ce6",
      "name": "Telegram4",
      "webhookId": "622faee5-3ee7-4201-8e12-cc899cfaea25",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨<b>Please send your comments in the following format</b>\n\n/f  <i>Your constructive comments!</i>\n\n<b>ADA-Bamboo Team</b> looks forward to receiving your constructive comments and feelings about the product.\nIn that spirit, BBO will increasingly optimize and update better products. <b>Sincerely thank you!</b>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        320,
        3840
      ],
      "id": "ea87727e-7549-4e4e-85f2-90fb48191fee",
      "name": "Telegram5",
      "webhookId": "52aa6e19-02e1-40dc-a85e-cae0ba3d1de6",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨Lệnh /feedback ✨\nHiển thị cú pháp giúp người dùng ghi đánh giá sản phẩm",
        "height": 400,
        "width": 780
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -240,
        3660
      ],
      "id": "ea820905-f909-4d12-87ec-384450cfe0a8",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "3c219d29-93a0-4566-8bd8-4fc301282720",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        580,
        4320
      ],
      "id": "4d36109c-7541-4032-9df5-981c7a1ff817",
      "name": "If5"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "<b>ADA-Bamboo Team</b> trân thành cảm ơn ý kiến-cảm nhận của bạn!\n✨Chúc bạn một ngày tốt lành✨",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        800,
        4180
      ],
      "id": "817d1f67-73c6-41e9-bb38-d8348613ac58",
      "name": "Telegram7",
      "webhookId": "811f7aa7-78af-4d12-a7f2-54e3702ba648",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_feedback",
          "mode": "list",
          "cachedResultName": "bbo_feedback"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "userid": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "comment": "={{ $('Telegram Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "userid",
              "displayName": "userid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "rating",
              "displayName": "rating",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "comment",
              "displayName": "comment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "createdat",
              "displayName": "createdat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1140,
        4320
      ],
      "id": "faca528c-55b4-480e-9d3a-2e31134a9256",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "<b>ADA-Bamboo Team</b> sincerely thanks for your comments or feelings!\n✨Wishing you all the best✨",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        800,
        4460
      ],
      "id": "4158f3cb-c5c7-465b-af68-aa1196edb3c5",
      "name": "Telegram8",
      "webhookId": "dfa85f1d-273d-4640-bf09-fdf3190a6559",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨ Lệnh /f ✨\nGhi nhận ý kiến từ người dùng vào hệ thống và gửi thống báo về cho admin",
        "height": 560,
        "width": 1400
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        440,
        4100
      ],
      "id": "ff52ff3d-f2c9-478c-ae62-efee86090042",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ba26ab85-8f3f-4de5-a4f8-f3a48bc17a26",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3080,
        3540
      ],
      "id": "915761df-28b8-495b-8b74-6ac4adb9ba9e",
      "name": "If6"
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "✨<b>Please send your comments in the following format</b>\n\n/f _Your constructive comments!_\n\n<b>ADA-Bamboo Team</b> looks forward to receiving your constructive comments and feelings about the product.\nIn that spirit, BBO will increasingly optimize and update better products. <b>Sincerely thank you!</b>",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2780,
        3560
      ],
      "id": "0b284899-f3e1-4299-8da0-60c973e4a569",
      "name": "Feedback1",
      "webhookId": "86f63a7f-6742-4b37-821c-85ef11ad7536",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telegramid": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
            "roleid": "={{ \n  (() => {\n    const roleMap = {\n      drep: 2,\n      user: 3,\n      spo: 4,\n      holder: 5,\n      committe: 6\n    };\n    return roleMap[$('Telegram Trigger').item.json.callback_query.data] || 0;\n  })()\n}}\n"
          },
          "matchingColumns": [
            "telegramid"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "point",
              "displayName": "point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4320,
        5460
      ],
      "id": "2e4dfc83-ecb8-4bc3-b9e0-382a67792b1d",
      "name": "Postgres6",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "✨<b>Thông tin của bạn đã được cập nhật.</b>✨\nVui lòng nhập /account để kiểm tra thay đổi!",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4020,
        4840
      ],
      "id": "e2373f74-4176-4eef-b8e6-050e473b9d7f",
      "name": "Telegram6",
      "webhookId": "caa54ada-e378-44a8-a506-62a8c475d7e7",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7cb4cfaf-6361-4885-9ed4-80614e201278",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4020,
        5460
      ],
      "id": "6d576dec-2dd6-4a08-be1f-341d42b92aba",
      "name": "If7"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "✨<b>Your information has been updated.</b>✨\nPlease enter /account to check for changes!",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4020,
        5840
      ],
      "id": "84e9ce9c-7bc8-4f8c-8e19-3032418b04ef",
      "name": "Telegram9",
      "webhookId": "6c575d70-4d09-4052-bc16-07872a232941",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telegramid": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
            "allownoti": "={{ $('Telegram Trigger').item.json.callback_query.data === \"turn_on\" ? true : false }}"
          },
          "matchingColumns": [
            "telegramid"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "point",
              "displayName": "point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4320,
        5100
      ],
      "id": "58e7df6e-2969-4652-bdad-0ca9bea1d329",
      "name": "Postgres7",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7cb4cfaf-6361-4885-9ed4-80614e201278",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4020,
        5100
      ],
      "id": "b8806dd3-1e7d-4730-9a2e-2ae7f52eccd1",
      "name": "If8"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 23,
              "triggerAtMinute": 59
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -5520,
        1720
      ],
      "id": "8cb87790-f74a-4a9c-b6e7-895c844c468a",
      "name": "Schedule Trigger",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH question_stats AS (\n  SELECT \n    session_id,\n    LEAST(COUNT(*), 50) AS question_count\n  FROM public.n8n_chat_histories\n  WHERE DATE(\"CreatedOnUtc\") = CURRENT_DATE\n    AND message->>'type' = 'human'\n  GROUP BY session_id\n)\nUPDATE bbo_user\nSET point = point + qs.question_count\nFROM question_stats qs\nWHERE bbo_user.telegramid = qs.session_id::bigint;\n\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5260,
        1720
      ],
      "id": "df8add1c-9ece-4112-a833-811f8af40295",
      "name": "Postgres8",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=✨Hệ thống đã cập nhật điểm  cho người dùng thành công!\n\nNhấn vào button bên dưới để kiểm tra!\n\nNgày: {{ $json.formattedDate }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🟡Kiểm tra",
                    "additionalFields": {
                      "callback_data": "check_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4580,
        1720
      ],
      "id": "f6cb6880-4e5e-4f95-a9ac-f28f2119c132",
      "name": "Telegram10",
      "webhookId": "b473413d-bed3-4428-82f5-0c424eedcc06",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { chat_id: \"1130536200\" } },\n  { json: { chat_id: \"1614089714\" } },\n  { json: { chat_id: \"7860424712\" } },\n  { json: { chat_id: \"2022256272\" } },\n  { json: { chat_id: \"7711678283\" } }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5040,
        1720
      ],
      "id": "731a14b4-bfad-49ca-974b-255815403035",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "✨Workflow cập nhật điểm cho user: ✨\n\n",
        "height": 360,
        "width": 1360,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5640,
        1580
      ],
      "id": "6c22e309-3b0a-43a6-9c53-bfe5ab8a1b7c",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "1480d340-c8ab-4069-9877-fec1725197dd",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.data }}",
              "rightValue": "check_point",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1820,
        5120
      ],
      "id": "54f60247-db74-456c-a080-5101367ced8d",
      "name": "If9"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT username, telegramid, point\nFROM bbo_user\nWHERE roleid <> 1\nORDER BY point DESC;\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1560,
        5100
      ],
      "id": "c037f1a2-4c38-4225-9ba6-fd42801c6da8",
      "name": "Postgres9",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { chat_id: \"1130536200\" } },\n  { json: { chat_id: \"1614089714\" } },\n  { json: { chat_id: \"7860424712\" } },\n  { json: { chat_id: \"2022256272\" } },\n  { json: { chat_id: \"7711678283\" } }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1060,
        5100
      ],
      "id": "ae78fa69-dfec-4184-9f75-573a84c6b6da",
      "name": "Code1"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $('codefunction').item.json.text }}\n",
        "replyMarkup": "=none",
        "forceReply": {},
        "replyKeyboardOptions": {},
        "replyKeyboardRemove": {},
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -860,
        5100
      ],
      "id": "6e0976ad-28c0-43fc-b158-ab2dfd168a43",
      "name": "Telegram11",
      "webhookId": "f37872db-b2e0-486d-ad04-f7a7430b40e5",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let message = \"✨Danh sách điểm thưởng của người dùng✨\\n\\n\";\n\nfor (let i = 0; i < items.length; i++) {\n  const user = items[i].json;\n  message += `👤 ${user.username} - ${user.telegramid}: ${user.point} BBO\\n`;\n}\n\nreturn [{ json: { text: message } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1300,
        5100
      ],
      "id": "0065a729-2d9d-4960-9df8-ba14a8d9628d",
      "name": "codefunction"
    },
    {
      "parameters": {
        "content": "✨Callback query✨ \nGiúp admin kiểm tra điểm của users trên hệ thống",
        "height": 400,
        "width": 1380,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1960,
        4940
      ],
      "id": "013112a4-9c8b-46ba-84ad-9cbbb4d50829",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -5420,
        2200
      ],
      "id": "cc19a8d6-21f1-49ac-a90d-931942c86927",
      "name": "Schedule Trigger2",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.koios.rest/api/v1/proposal_list",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5180,
        2240
      ],
      "id": "d82bb22a-15cb-4c38-8fbc-32249938bdef",
      "name": "GetProposals1"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "https://drive.google.com/file/d/1cc0JLhwD9WP0JLeNVORVIcfZgKI12A4K/view",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -5180,
        2060
      ],
      "id": "a5045fd3-9370-440a-ad80-f468ec7c49f8",
      "name": "GetStoredProposals1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "kzS8bqtgiQVezuXt",
          "name": "Google Drive  tre viet account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const newProposals = $items(\"GetProposals1\", 0).map(item => item.json);\nconst oldProposals = $items(\"CodeConvert\", 0).map(item => item.json);\n\nconst oldIds = oldProposals.map(p => p.proposal_id);\nconst newOnly = newProposals.filter(p => !oldIds.includes(p.proposal_id));\n\n// Log thử để kiểm tra\nconsole.log(\"oldIds\", oldIds);\nconsole.log(\"newProposalIds\", newProposals.map(p => p.proposal_id));\nconsole.log(\"newOnly\", newOnly);\n\nconst mergedProposals = [...oldProposals, ...newOnly];\n\nreturn [\n  {\n    json: {\n      newProposals: newOnly,\n      mergedProposals\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4360,
        2240
      ],
      "id": "8f680e0c-6e81-4743-85f6-3eb0a3e8f35f",
      "name": "CompareProposals1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "b60c2a98-22d5-4d33-a96c-cad13fb4b7a8",
              "leftValue": "={{ $json[\"newProposals\"].length > 0 }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4120,
        2240
      ],
      "id": "41628246-afea-4f74-92d4-e1d8d3fa0569",
      "name": "If11"
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "value": "1cc0JLhwD9WP0JLeNVORVIcfZgKI12A4K",
          "mode": "id"
        },
        "changeFileContent": true,
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -4740,
        2520
      ],
      "id": "5359a064-a09a-413e-afee-044fb7d20fe4",
      "name": "Google Drive1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "kzS8bqtgiQVezuXt",
          "name": "Google Drive  tre viet account"
        }
      }
    },
    {
      "parameters": {
        "content": "Kiểm tra đề xuất mới trên Cardano à thoong báo cho drep ",
        "height": 780,
        "width": 1820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5640,
        2000
      ],
      "id": "7d6eec84-8e94-4252-ad6b-ba76d1b47d72",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1c251892-dd91-4da1-910e-8230ac43c461",
              "name": "content ",
              "value": "={{ JSON.stringify($json.mergedProposals, null, 2) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5160,
        2520
      ],
      "id": "1a3b2fcc-7beb-4c56-b1ee-353fd45179af",
      "name": "set_convert"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "content ",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -4960,
        2520
      ],
      "id": "7ef3146b-5949-4000-8d38-3d817a3c2562",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select * from bbo_user where allownoti = true",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4520,
        2520
      ],
      "id": "0afd8a6d-7215-4da6-b5df-a704d4ab9e84",
      "name": "Postgres10",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst result = items.map(item => {\n  return {\n    json: {\n      chat_id: item.json.telegramid.toString()\n    }\n  };\n});\nreturn result;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4320,
        2520
      ],
      "id": "7239f71d-3310-424f-b684-2026a56c8a5e",
      "name": "Code2"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $('newProposal').item.json.message }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4140,
        2520
      ],
      "id": "876d9384-8fc3-4de1-8225-004715b3cfb0",
      "name": "Telegram12",
      "webhookId": "5a485df1-1bf6-47ff-b926-41ccacb8cabd",
      "credentials": {
        "telegramApi": {
          "id": "xlTMBHvEal44w0FQ",
          "name": "Phuc Bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "dataexport",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -4960,
        2060
      ],
      "id": "57e18510-d9e5-4f10-9ec3-609c0d620ca8",
      "name": "jsonconvertold"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1c251892-dd91-4da1-910e-8230ac43c461",
              "name": "content002",
              "value": "={{ $json.dataexport }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4720,
        2060
      ],
      "id": "e0e5884b-2dca-4ff7-8429-e9187763d533",
      "name": "set_convert1"
    },
    {
      "parameters": {
        "jsCode": "const rawText = $json.content002;\nlet parsedData = [];\n\ntry {\n  parsedData = JSON.parse(rawText);\n} catch (e) {\n  throw new Error(\"Không thể parse JSON: \" + e.message);\n}\n\nreturn parsedData.map(item => ({ json: item }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4500,
        2060
      ],
      "id": "10563ae8-41f0-4f55-ad39-cbfa1058baf0",
      "name": "CodeConvert"
    },
    {
      "parameters": {
        "jsCode": "const proposals = $json.newProposals;\n\nconst message = proposals.map((p, i) => {\n  const escape = (str) => str?.toString().replace(/[_*[\\]()~`>#+\\-=|{}.!]/g, '\\\\$&') || 'Không có';\n\n  return (\n    `*📢 Đề xuất mới #${i + 1}:*\\n` +\n    `*🔹 ID:* ${escape(p.proposal_id)}\\n` +\n    `*🔹 Loại:* ${escape(p.proposal_type)}\\n` +\n    `*🔹 Tiền đặt cọc:* ${escape(p.deposit)}\\n` +\n    `*⏳ Hết hạn:* ${escape(p.expiration)}\\n` +\n    `*📝 Tiêu đề:* ${escape(p.meta_json?.body?.title)}\\n` +\n    `*📄 Mô tả:* ${escape(p.meta_json?.body?.abstract)}\\n`\n  );\n}).join('\\n──────────────\\n');\n\nreturn [{ json: { message } }];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5400,
        2520
      ],
      "id": "e81ceb70-94e2-4436-a1ed-2e3cf187d679",
      "name": "newProposal"
    },
    {
      "parameters": {
        "name": "documents",
        "description": "Contains all the user's documents that you can check for context to answer user questions.",
        "topK": 5
      },
      "id": "ebf1867e-fadf-4f89-b928-19a1a20e545b",
      "name": "Retrieve Documents1",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -320,
        2160
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        -760,
        2260
      ],
      "id": "c74f3540-14db-4d3f-acf4-8368bc521a18",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "nldB6zRahygpLVhq",
          "name": "Supabase  Phuc's account "
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const date = new Date($('Schedule Trigger').item.json.timestamp);\nconst day = String(date.getDate()).padStart(2, '0');\nconst month = String(date.getMonth() + 1).padStart(2, '0'); // Tháng bắt đầu từ 0\nconst year = date.getFullYear();\n\nconst formattedDate = `${day}-${month}-${year}`;\n\nreturn [{\n  json: {\n    ...$json,\n    formattedDate\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4820,
        1720
      ],
      "id": "8356cf02-e71d-4ab8-a824-b1cbad7bc386",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { chat_id: \"7860424712\" } },\n  { json: { chat_id: \"1614089714\" } },\n  { json: { chat_id: \"1130536200\" } }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1360,
        4320
      ],
      "id": "4f24862a-1a6e-4254-b173-d223c4ebeda2",
      "name": "Code4"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=✨Thông báo từ hệ thống ✨\n\nNhận được ý kiến mới từ người dùng: <b> {{ $('Telegram Trigger').item.json.message.chat.username }}</b>\n\nNội dung đánh giá: {{ $('Telegram Trigger').item.json.message.text }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1580,
        4320
      ],
      "id": "6697f1fe-3619-4558-9402-193d93ce5f20",
      "name": "Telegram13",
      "webhookId": "db39e02c-535a-4e85-ba72-ace8f73d1b97",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "📌 Quy tắc nhận điểm BBO hằng ngày\n✨ Hệ thống sẽ tự động tổng hợp và tính điểm cho người dùng mỗi ngày dựa trên số lượng câu hỏi (yêu cầu) mà bạn gửi đến chatbot.\n\n✅ Cách tính điểm:\n📥 1 câu hỏi = 1 BBO\nMỗi câu hỏi hoặc tương tác hợp lệ sẽ được tính là 1 điểm.\n\n🚫 Giới hạn tối đa: 50 BBO/ngày\nĐể tránh tình trạng spam, hệ thống chỉ cộng tối đa 50 BBO cho mỗi người dùng trong một ngày, kể cả khi bạn gửi hơn 50 câu hỏi.\n→ Nếu bạn chỉ gửi 30 câu hỏi ➝ bạn nhận 30 BBO\n→ Nếu bạn gửi 100 câu hỏi ➝ bạn chỉ nhận 50 BBO\n\n🕒 Thời gian tính điểm:\nĐiểm của bạn sẽ tự động cập nhật vào lúc 23:59 hằng ngày.\n\n🎁 Thưởng thêm dành cho người dùng tích cực:\n💡 Những người dùng có đóng góp nổi bật hoặc tương tác chất lượng cao trong thời gian testnet sẽ được BBO-Team xem xét và thưởng thêm điểm sau khi kết thúc giai đoạn test.\n\n\n",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2360,
        3320
      ],
      "id": "af3e8153-0d02-4613-8f5e-568e26adb7ac",
      "name": "Telegram14",
      "webhookId": "4b4d9540-16ed-487e-b3d0-4ae2e2f61c7e",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "60b6d8d9-95cf-42e7-be05-4949dd89d4f2",
              "leftValue": "={{ $('Telegram Trigger').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2320,
        3540
      ],
      "id": "f67af9b5-c510-4aff-83cc-c8c669394715",
      "name": "If10"
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "📌 Daily BBO Points Rules\n✨ The system will automatically aggregate and calculate points for users every day based on the number of questions you send to the chatbot.\n\n✅ How to calculate points:\n📥 1 question = 1 BBO\nEach valid question or interaction will be counted as 1 point.\n\n🚫 Maximum limit: 50 BBO/day\nTo avoid spam, the system only adds a maximum of 50 BBOs to each user in a day, even if you send more than 50 questions.\n\n→ If you only send 30 questions ➝ you receive 30 BBOs\n→ If you send 100 questions ➝ you only receive 50 BBOs\n\n🕒 Point calculation time:\nYour points will be automatically updated at 23:50 every day.\n\n🎁 Additional rewards for active users: \n💡 Users with outstanding contributions or high-quality interactions during the testnet period will be reviewed by the BBO-Team and awarded additional points after the end of the test period.\n\n\n",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2060,
        3560
      ],
      "id": "1d3f515c-e8c8-48d0-90b6-a2eb3977efb6",
      "name": "Telegram15",
      "webhookId": "90362a3d-275e-4ee9-8829-f96636aeb3b9",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "48209589-e551-46e4-925a-3525424b77b6"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DREP"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "62a4b49c-98c0-471e-9d74-deca7155d523",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 4,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SPO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fe802ac8-f0c9-4750-8340-1039766562f8",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 6,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Committe"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "97a85122-7ba0-440b-acef-92377e6aada8",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "User"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "65be1f11-cd8f-4b6d-82a2-71d00f3c536e",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 5,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "holder"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1380,
        740
      ],
      "id": "789cb6f3-4885-4e45-9671-180ef34f7796",
      "name": "Switch1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.onchainId }}",
        "options": {
          "systemMessage": "=You are an expert in content editing and formatting according to SEO standards. When I provide {{ $json.onchainId }}, you should use the node tool HTTP request to find the 10 most recent delegators — a list of all delegators to the requested delegated representative. "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -2980,
        5340
      ],
      "id": "c3fd5851-4bf7-436e-b7ad-72c863406e39",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "toolDescription": "thộng tin danh sách 10 người đã ủy quyền gần đây nhất cho DRep",
        "url": "=https://api.koios.rest/api/v1/drep_delegators?_drep_id={{ $json.onchainId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2860,
        5440
      ],
      "id": "82537048-87d5-43e8-9ea3-bd078b6b5035",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $json.formatted_output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2300,
        5640
      ],
      "id": "94f9395e-5114-4cbb-87f9-f6f68c7644f3",
      "name": "Message_Response2",
      "webhookId": "8159c5df-1903-4492-8c11-351472c1a44e",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.onchainId }}",
        "options": {
          "systemMessage": "=You are an expert in content editing and formatting according to SEO standards. When I provide {{ $json.onchainId }}, you should use the node tool HTTP request to find the 10 most recent I have voted on recently and present them in a message-friendly format that is easy to read and access."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -2900,
        5640
      ],
      "id": "2bad1cea-710b-4a64-949f-c57fd4bbd741",
      "name": "AI Agent4"
    },
    {
      "parameters": {
        "toolDescription": " thông tin danh sách đã vote của drep",
        "url": "=https://api.koios.rest/api/v1/voter_proposal_list?_voter_id=\n{{ $json.onchainId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2780,
        5740
      ],
      "id": "9ac69d0f-0742-4c09-be7f-ff2f6ab6f7e4",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "jsCode": "const text = $json.output;\nconst escapedText = text.replace(/([_*[\\]()~`>#+-.!])/g, '\\\\$1');\nreturn { formatted_output: escapedText };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2500,
        5640
      ],
      "id": "78ad58c8-9db2-4845-82c6-43d663df7c75",
      "name": "Code6"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.onchainId }}",
        "options": {
          "systemMessage": "=You are an expert in content editing and formatting according to SEO standards. you should use the node tool HTTP request to retrieve  the information about Drep."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -3040,
        5000
      ],
      "id": "514315e5-0462-4cf3-9485-001e797c3bb9",
      "name": "AI Agent5"
    },
    {
      "parameters": {
        "toolDescription": "information of DRep",
        "method": "POST",
        "url": "=http://14.241.247.68:8053/api/v1/drep_info",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "accept",
              "valueProvider": "fieldValue",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "valueProvider": "fieldValue",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"_drep_ids\":[\"{{ $('Postgres13').item.json.onchainId }}\"]}\n "
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2880,
        5100
      ],
      "id": "ce060e4a-595d-4066-a215-7eb94c6a2ff2",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3240,
        5000
      ],
      "id": "13c400b9-b798-4ec4-871a-b7b3e2e46c07",
      "name": "Postgres13",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.onchainId }}",
        "options": {
          "systemMessage": "=You are an expert in content editing and formatting according to SEO standards. When I provide {{ $json.onchainId }}, you should use the node tool HTTP request to find the 20 most recent I have voted on recently and present them in a message-friendly format that is easy to read and access."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -2980,
        5980
      ],
      "id": "276286e3-b63a-449a-8ad2-6a1e77c6b768",
      "name": "AI Agent6"
    },
    {
      "parameters": {
        "toolDescription": "thông tin Lịch sử quyền biểu quyết của DReps",
        "url": "=https://api.koios.rest/api/v1/drep_voting_power_history?_drep_id={{ $json.onchainId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2820,
        6100
      ],
      "id": "4f411c78-f905-415d-b44a-71392ffc9f1d",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "content": "Agent lấy thông tin liên quan đến Drep",
        "height": 1700,
        "width": 1240,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3340,
        4920
      ],
      "id": "cb372ca5-8df8-4325-9c7b-5473cbc3db15",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        980,
        760
      ],
      "id": "b7ad4615-a20b-4de4-9511-e9e9b39c40ec",
      "name": "If13"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Cập nhật vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Thông tin của SPO",
                    "additionalFields": {
                      "callback_data": "api_spoinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách đã vote của bạn",
                    "additionalFields": {
                      "callback_data": "SPO_voting_power_history"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách người uỷ quyền",
                    "additionalFields": {
                      "callback_data": "pool_delegators"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1160,
        740
      ],
      "id": "be66350a-fabf-4f11-a2ff-0dd23309988c",
      "name": "Telegram19",
      "webhookId": "6ec17541-39b1-4caa-8fff-bca9cb675f69",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Update role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "SPO infomation",
                    "additionalFields": {
                      "callback_data": "api_spoinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Voting Power History",
                    "additionalFields": {
                      "callback_data": "SPO_voting_power_history"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Pool Delegators List",
                    "additionalFields": {
                      "callback_data": "pool_delegators"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1020,
        600
      ],
      "id": "9e5ffb88-cc10-4776-9595-62cbd65e285d",
      "name": "Telegram20",
      "webhookId": "2f4b7544-35c2-4354-b74b-40c3a7623aea",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.onchainId }}",
        "options": {
          "systemMessage": "=You are an expert in content editing and formatting according to SEO standards. When I provide {{ $json.onchainId }}, you should use the node tool HTTP request to find Details of the 10 most recent voting sessions conducted by SPO ."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -2980,
        7060
      ],
      "id": "d031cf51-0470-40a1-82c6-64b39de93321",
      "name": "AI Agent7"
    },
    {
      "parameters": {
        "toolDescription": "thộng tin danh sách 10 lần bỏ phiếu gần đây nhất của SPO",
        "url": "=https://api.koios.rest/api/v1/pool_voting_power_history?_pool_bech32={{ $json.onchainId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2820,
        7200
      ],
      "id": "19fa1f16-f4c5-4ec3-a355-4ea7c28b0597",
      "name": "HTTP Request4"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $json.formatted_output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2300,
        7060
      ],
      "id": "52813ec0-6367-430a-a482-8330fa5971ad",
      "name": "Message_Response6",
      "webhookId": "138db06e-4bd5-4148-81ab-56b358bdc322",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.onchainId }}",
        "options": {
          "systemMessage": "=You are an expert in content editing and formatting according to SEO standards. When I provide {{ $json.onchainId }}, you should use the node tool HTTP request to find Details of the most recent 10 individuals who have delegated to the SPO.."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -2960,
        7380
      ],
      "id": "8b3e4736-b543-4239-91c4-2ac1dd6a7705",
      "name": "AI Agent8"
    },
    {
      "parameters": {
        "toolDescription": " thông tin danh sách người đã vote cho SPO",
        "url": "=https://api.koios.rest/api/v1/pool_delegators?_pool_bech32={{ $json.onchainId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2780,
        7500
      ],
      "id": "f1da69b4-41dd-4655-a167-ac0dc1b604bd",
      "name": "HTTP Request5"
    },
    {
      "parameters": {
        "jsCode": "const text = $json.output;\nconst escapedText = text.replace(/([_*[\\]()~`>#+-.!])/g, '\\\\$1');\nreturn { formatted_output: escapedText };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2520,
        7060
      ],
      "id": "556081b0-8b59-4069-948d-603586bdd8e3",
      "name": "Code10"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.onchainId }}",
        "options": {
          "systemMessage": "=You are an expert in content editing and formatting according to SEO standards. When I provide {{ $json.onchainId }}, you should use the node tool HTTP request to retrieve  the information about SPO."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -2980,
        6720
      ],
      "id": "5a55b641-7b7d-402d-bba8-3fcea6928ad4",
      "name": "AI Agent9"
    },
    {
      "parameters": {
        "toolDescription": "thông tin của SPO",
        "method": "POST",
        "url": "=http://14.241.247.68:8053/api/v1/pool_info",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "accept",
              "valueProvider": "fieldValue",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "valueProvider": "fieldValue",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"_pool_bech32_ids\":[\"{{ $json.onchainId }}\"]}\n\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2840,
        6840
      ],
      "id": "e9f36695-fea1-4ef5-99f1-1af02b72bc4f",
      "name": "HTTP Request6"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3220,
        6720
      ],
      "id": "939810f8-93f1-4969-a9a9-e950cc897b76",
      "name": "Postgres17",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "Agent lấy thông tin liên quan đến SPO",
        "height": 1020,
        "width": 1240,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3340,
        6640
      ],
      "id": "2a406184-3e43-43c6-a907-ef0d07fe2c13",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        220,
        280
      ],
      "id": "96e87511-ac55-4ddc-ad64-d6e460b74b60",
      "name": "If14"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Cập nhật vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Thông tin ủy ban",
                    "additionalFields": {
                      "callback_data": "api_CCinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách đã vote của ủy ban",
                    "additionalFields": {
                      "callback_data": "committee_votes"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        420,
        260
      ],
      "id": "6292d1ae-3bef-4b45-87d6-5551bf259398",
      "name": "Telegram21",
      "webhookId": "4c7f563c-d555-42c1-88fe-7861617543ee",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Update role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Committee Information",
                    "additionalFields": {
                      "callback_data": "api_CCinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Committee Votes",
                    "additionalFields": {
                      "callback_data": "committee_votes"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        120,
        120
      ],
      "id": "bdadc184-fc6f-4ae2-8b97-a97b04868b5a",
      "name": "Telegram22",
      "webhookId": "d6786203-fe31-4b10-bf85-0574e49a09a4",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.onchainId }}",
        "options": {
          "systemMessage": "=You are an expert in content editing and formatting according to SEO standards. When I provide {{ $json.onchainId }}, you should use the node tool HTTP request to find Committee Information ."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -2920,
        7820
      ],
      "id": "0624bef8-cbb4-40da-b358-a91fa9668c02",
      "name": "AI Agent10"
    },
    {
      "parameters": {
        "toolDescription": "thộng tin  của Committee",
        "url": "=https://api.koios.rest/api/v1/committee_info"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2760,
        7940
      ],
      "id": "c2ad03fc-4410-4b33-a14f-0f0bbea50753",
      "name": "HTTP Request7"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $json.formatted_output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2340,
        7980
      ],
      "id": "1f8a40e2-719e-4f8a-a390-b199e2bdb660",
      "name": "Message_Response9",
      "webhookId": "b1f7c9b3-9fc5-41a8-8a7e-9b6763adce2f",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.onchainId }}",
        "options": {
          "systemMessage": "=You are an expert in content editing and formatting according to SEO standards. When I provide {{ $json.onchainId }}, you should use the node tool HTTP request to find Details of the most recent 15 individuals who have delegated to the SPO.."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -2940,
        8140
      ],
      "id": "443f8ce1-840c-4e66-bc90-95bd3d8496c5",
      "name": "AI Agent11"
    },
    {
      "parameters": {
        "toolDescription": " thông tin danh sách  đã vote của Committee",
        "url": "=https://api.koios.rest/api/v1/committee_votes?_cc_hot_id={{ $json.onchainId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2760,
        8260
      ],
      "id": "49adc4ac-eb8f-4d6f-ad25-32cdbbb65092",
      "name": "HTTP Request8"
    },
    {
      "parameters": {
        "jsCode": "const text = $json.output;\nconst escapedText = text.replace(/([_*[\\]()~`>#+-.!])/g, '\\\\$1');\nreturn { formatted_output: escapedText };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2540,
        7980
      ],
      "id": "8fec121d-1fe3-4e72-9280-6ebcef0c1279",
      "name": "Code13"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3200,
        7820
      ],
      "id": "d77adc0e-f5b4-4dd3-9e12-fb094a50e706",
      "name": "Postgres19",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "Agent lấy thông tin liên quan đến CC",
        "height": 760,
        "width": 1240,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3340,
        7700
      ],
      "id": "8baf4e5e-a810-44e3-a099-689a292e37ce",
      "name": "Sticky Note19"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\"Information About Epoch recently\"",
        "options": {
          "systemMessage": "=You are an expert with in-depth knowledge of the Cardano blockchain ecosystem and You are an expert in content editing and formatting according to SEO standards.you should use the node tool HTTP request to find Information About Epoch most recently"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -3000,
        6320
      ],
      "id": "23c09624-db12-49da-8672-096c8c2e77e7",
      "name": "AI Agent12"
    },
    {
      "parameters": {
        "toolDescription": "Information About Epoch most recently",
        "url": "=https://api.koios.rest/api/v1/epoch_params?_epoch_no=555"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2820,
        6460
      ],
      "id": "a2ff5f5c-9b34-4d9b-a1fc-4c307cf5a3e4",
      "name": "HTTP Request9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "3c219d29-93a0-4566-8bd8-4fc301282720",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        560,
        4900
      ],
      "id": "be830ff9-9bd2-4e6d-b66c-675295059814",
      "name": "If12"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨Thông tin của bạn đã được cập nhật.✨\nVui lòng nhập /account để kiểm tra thay đổi!",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        860,
        4780
      ],
      "id": "0198a49e-9008-4428-a024-f613f9e3aa33",
      "name": "Telegram17",
      "webhookId": "43d0f436-fdd9-45e6-bd2f-7ee35d86482d",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "✨Your information has been updated.✨\nPlease enter /account to check for changes!",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        860,
        5000
      ],
      "id": "3292eaf7-56e5-4018-929b-ee34ada0bba0",
      "name": "Telegram18",
      "webhookId": "b8ce0de7-fc3a-4bc6-8026-9a3a7fc2de6b",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "✨ Lệnh /id ✨\nCập nhật id on-chain của user",
        "height": 440,
        "width": 1120
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        440,
        4720
      ],
      "id": "4332cf4e-ffbd-4ce7-b0bf-8b2739237b9d",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "jsCode": "// Lấy dữ liệu từ node \"Telegram Trigger\"\nlet originalString = $('Telegram Trigger').first().json.message.text;\n\n// Loại bỏ 3 ký tự đầu\nlet trimmedString = originalString.slice(4);\n\n// Trả về mảng gồm 1 object như hệ thống yêu cầu\nreturn [\n  {\n    trimmedText: trimmedString\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1120,
        4900
      ],
      "id": "b7945f81-709a-416f-815b-05a5cf08cf21",
      "name": "Code9"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "bbo_user",
          "mode": "list",
          "cachedResultName": "bbo_user"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "onchainId": "={{ $json.trimmedText }}",
            "telegramid": "={{ $('Telegram Trigger').item.json.message.from.id }}"
          },
          "matchingColumns": [
            "telegramid"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegramid",
              "displayName": "telegramid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "joindate",
              "displayName": "joindate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lastactive",
              "displayName": "lastactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isactive",
              "displayName": "isactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "roleid",
              "displayName": "roleid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "allownoti",
              "displayName": "allownoti",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "point",
              "displayName": "point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "onchainId",
              "displayName": "onchainId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1320,
        4900
      ],
      "id": "eb027662-6fd6-4fad-aa7a-0dd7e5dd58e3",
      "name": "Postgres14",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.result.chat.id }}",
        "tableName": "=n8n_chat_histories"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2720,
        3180
      ],
      "id": "8c0088f7-1f6c-4033-85e4-6ab414372eb3",
      "name": "Postgres Chat Memory4",
      "notesInFlow": false,
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "=✨Thông báo từ hệ thống - Có user đăng ký mới: {{ $('Telegram Trigger').item.json.message.from.username }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3100,
        2480
      ],
      "id": "bb95e0b9-146c-4480-b005-3c4898e54d18",
      "name": "Telegram23",
      "webhookId": "4dfa3a6c-4f15-4017-aa8f-00b442905146",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { chat_id: \"1130536200\" } },\n  { json: { chat_id: \"1614089714\" } },\n  { json: { chat_id: \"7860424712\" } },\n  { json: { chat_id: \"2022256272\" } },\n  { json: { chat_id: \"7711678283\" } }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2900,
        2480
      ],
      "id": "6485a22d-d3a2-4767-8229-6fd9d255f1b7",
      "name": "Code8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        260,
        760
      ],
      "id": "999a3423-fe09-473c-97be-89ac66179db6",
      "name": "If16"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: <i>{{ $json.telegramid }}</i>\n-Tên tài khoản: <i>{{ $json.username }}</i>\n-Ngày tham gia: <i>{{ $json.joindate }}</i>\n-Trạng thái: <i>{{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}</i>\n-Vai trò: <i>{{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}</i>\n-Nhận thông báo: <i>{{ $json.allownoti ? \"Bật\" : \"Tắt\"}}</i>\n-Điểm thưởng: <i>{{ $json.point ?? 0}} BBO</i>\n-Onchain ID: <i>{{ $json.onchainId ?? null }}</i>\n\n🐳Vai trò: <i>Cập nhật vai trò tham gia</i>\n🐳Thông báo: <i>Đăng ký nhận thông báo khi có đề xuất mới</i>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        440,
        740
      ],
      "id": "570aa78e-6dfd-4ad6-adb2-5c4d9d5bcb6d",
      "name": "Telegram24",
      "webhookId": "e748797e-ba00-46f2-a92b-661a84aad3ce",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: <i>{{ $json.telegramid }}</i>\n-Username: <i>{{ $json.username }}</i>\n-Join date: <i>{{ $json.joindate }}</i>\n-Status: <i>{{ $json.isactive ? \"Active\" : \"Inactive\"}}</i>\n-Role: <i>{{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}</i>\n-Notifications: <i>{{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}</i>\n-Points: <i>{{ $json.point ?? 0}} BBO</i>\n-Onchain ID: <i>{{ $json.onchainId ?? null }}</i>\n\n🐳Notifications: <i>Sign up to receive notifications when new proposals are available</i>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        200,
        600
      ],
      "id": "a208d8b8-8378-4512-a530-ef6b7ed4b23c",
      "name": "Telegram25",
      "webhookId": "07693e8c-a381-45ad-89ef-84423c3074cf",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3240,
        5340
      ],
      "id": "f71e003b-d1c2-4b8a-acdf-c633670e61cc",
      "name": "Postgres15",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3220,
        5640
      ],
      "id": "7b24fd79-d711-4559-b443-b371db061f36",
      "name": "Postgres16",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3220,
        5980
      ],
      "id": "e09c1e58-e3a5-4d52-baee-19796a8d8f5b",
      "name": "Postgres18",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3220,
        6320
      ],
      "id": "15482d66-5233-415d-bcc3-988533928396",
      "name": "Postgres20",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3220,
        7380
      ],
      "id": "ab0315cd-9a99-49ba-81ae-e1dc94b32942",
      "name": "Postgres21",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3220,
        7060
      ],
      "id": "4857d1c0-8960-4e55-aed7-76aa8de68140",
      "name": "Postgres22",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from bbo_user where telegramid = {{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3200,
        8140
      ],
      "id": "fff16343-0c72-487b-9d04-0288b0b7fbf4",
      "name": "Postgres23",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "142191f1-8224-4116-81cd-704a059953f6",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1180,
        3200
      ],
      "id": "7053bc0c-6f38-4acd-88cb-a0c54ef11dc4",
      "name": "If15"
    },
    {
      "parameters": {
        "jsCode": "const questions = [\n  \"Hiến pháp Cardano là gì?\",\n  \"Tại sao Cardano cần một hiến pháp?\",\n  \"Ai có thể tham gia vào việc bỏ phiếu trên Cardano?\",\n  \"Làm thế nào để đề xuất thay đổi trên Cardano?\",\n  \"Hiến pháp Cardano có thể thay đổi không?\",\n  \"Voltaire là gì và nó liên quan đến Hiến pháp ra sao?\",\n  \"Quỹ Treasury của Cardano hoạt động như thế nào?\",\n  \"Làm thế nào để tham gia vào việc quản trị Cardano?\",\n  \"Có tổ chức nào giám sát Hiến pháp Cardano không?\",\n  \"Hiến pháp có giúp Cardano chống lại sự kiểm soát tập trung không?\",\n  \"Cardano là gì và nó khác gì so với Bitcoin hoặc Ethereum?\",\n  \"ADA là gì và tại sao nó quan trọng trong hệ sinh thái Cardano?\",\n  \"Staking trên Cardano hoạt động như thế nào và có an toàn không?\",\n  \"Giai đoạn phát triển của Cardano gồm những gì (Byron, Shelley, Goguen, Basho, Voltaire)?\",\n  \"Smart contract trên Cardano là gì và nó được sử dụng để làm gì?\",\n  \"Làm thế nào để mua và lưu trữ ADA một cách an toàn?\",\n  \"Cardano có ưu điểm gì so với các blockchain khác?\",\n  \"Project Catalyst là gì và nó giúp cộng đồng Cardano như thế nào?\",\n  \"Làm thế nào để trở thành một nhà điều hành Pool Staking (SPO) trên Cardano?\",\n  \"Tương lai của Cardano sẽ ra sao với các cập nhật sắp tới?\"\n];\n\n// Chọn ngẫu nhiên 3 câu hỏi không trùng lặp\nconst shuffled = questions.sort(() => 0.5 - Math.random());\nconst selectedQuestions = shuffled.slice(0, 10); // Lấy 3 câu hỏi\n\n// Tạo inline keyboard (trả về đối tượng JSON trực tiếp)\nconst inlineKeyboard = {\n  inline_keyboard: selectedQuestions.map((_, index) => [\n    {\n      text: `${index + 1}`, // Hiển thị số trên button\n      callback_data: `question_${index}` // Gán callback_data với chỉ số\n    }\n  ])\n};\n\n// Tạo định dạng đầu ra cho câu hỏi\nconst formattedQuestions = selectedQuestions\n  .map((question, index) => `${index + 1}. ${question}`)\n  .join('\\n');\n\n// Trả về đối tượng JSON\nreturn [{\n  json: {\n    random_questions: formattedQuestions,\n    reply_markup: inlineKeyboard, // Trả về đối tượng thay vì chuỗi\n    selected_questions: selectedQuestions\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1880,
        1220
      ],
      "id": "46f654d6-d491-4058-9857-793ec443a849",
      "name": "CodeRandom"
    },
    {
      "parameters": {
        "jsCode": "const questions = [\n  \"What is the Cardano Constitution?\",\n  \"Why does Cardano need a constitution?\",\n  \"Who can participate in voting on Cardano?\",\n  \"How can changes be proposed on Cardano?\",\n  \"Can the Cardano Constitution be changed?\",\n  \"What is Voltaire and how is it related to the Constitution?\",\n  \"How does the Cardano Treasury Fund operate?\",\n  \"How can one participate in Cardano governance?\",\n  \"Is there any organization overseeing the Cardano Constitution?\",\n  \"Does the Constitution help Cardano resist centralized control?\",\n  \"What is Cardano and how does it differ from Bitcoin or Ethereum?\",\n  \"What is ADA and why is it important in the Cardano ecosystem?\",\n  \"How does staking work on Cardano, and is it safe?\",\n  \"What are the development phases of Cardano (Byron, Shelley, Goguen, Basho, Voltaire)?\",\n  \"What are smart contracts on Cardano and what are they used for?\",\n  \"How can one buy and store ADA safely?\",\n  \"What advantages does Cardano have over other blockchains?\",\n  \"What is Project Catalyst and how does it benefit the Cardano community?\",\n  \"How can one become a Stake Pool Operator (SPO) on Cardano?\",\n  \"What is the future of Cardano with upcoming updates?\"\n];\n// Chọn ngẫu nhiên 3 câu hỏi không trùng lặp\nconst shuffled = questions.sort(() => 0.5 - Math.random());\nconst selectedQuestions = shuffled.slice(0, 10); // Lấy 3 câu hỏi\n\n\n// Tạo inline keyboard (trả về đối tượng JSON trực tiếp)\nconst inlineKeyboard = {\n  inline_keyboard: selectedQuestions.map((_, index) => [\n    {\n      text: `${index + 1}`, // Hiển thị số trên button\n      callback_data: `question_${index}` // Gán callback_data với chỉ số\n    }\n  ])\n};\n\n// Tạo định dạng đầu ra cho câu hỏi\nconst formattedQuestions = selectedQuestions\n  .map((question, index) => `${index + 1}. ${question}`)\n  .join('\\n');\n\n// Chuyển selected_questions thành chuỗi JSON\nconst selectedQuestionsJson = JSON.stringify(selectedQuestions);\n// Trả về đối tượng JSON\nreturn [{\n  json: {\n    random_questions: formattedQuestions,\n    reply_markup: inlineKeyboard, // Trả về đối tượng thay vì chuỗi\n    selected_questions: selectedQuestionsJson // Chuỗi JSON thay vì mảng\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1880,
        1420
      ],
      "id": "ed8c1966-3b90-485d-9df9-ed2caf01ba8f",
      "name": "CodeRandom1"
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "Typing...",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2340,
        3020
      ],
      "id": "77de508b-a4df-4e9f-8a23-690a5278a79a",
      "name": "Telegram27",
      "webhookId": "66ffa6a7-4584-4280-8c80-5e5af869ec94",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Telegram27').item.json.result.chat.id }}",
        "messageId": "={{ $('Telegram27').item.json.result.message_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2960,
        3020
      ],
      "id": "4d65f69b-6112-4625-b1da-be9a2cc27928",
      "name": "Telegram28",
      "webhookId": "638549e8-6e95-477f-a898-f3c0da472284",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch').item.json.message.from.id }}",
        "text": "=✨<b>Choose a suggested question to start the conversation!</b>\n<i>Please press a number from 1 to 10 to view the question:</i>\n\n{{ $json.random_questions }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[0][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[0][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[1][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[1][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[2][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[2][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[3][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[3][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[4][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[4][0].callback_data }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[5][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[5][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[6][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[6][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[7][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[7][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[8][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[8][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[9][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[9][0].callback_data }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2140,
        1420
      ],
      "id": "95a523ab-d258-4cf4-b1a3-4dbdf58613a9",
      "name": "Mes_Filter_EN",
      "webhookId": "2efea61f-ddf7-4912-b7ca-d63d7a467afc",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "26d0d0f5-34c8-4569-928b-c5892fb09fcd",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "=help",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query_help"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3e01a50c-5f66-4eb9-91a8-ed665c061451",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "find",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query-fild "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b2202515-d4d3-4a60-a8cf-ccfc45a0b2d8",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "account",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query-account "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bdeaa39a-6027-4480-b190-c9ecb15842d9",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "feedback",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query-feedback"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c1397e6d-ba52-4cd2-b65a-04f9706e3312",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "role",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "query-role "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1c047f91-19a8-4cc0-ba00-830664b1ea69",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "turn_on",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "active-noti"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "52f60168-70d8-4a64-b9fb-455a0bc707fb",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "turn_off",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "inactive-noti"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "70631c71-dc7c-4a7d-a6cd-04d37a14ca0d",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "rulebbo_point",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "term-and-policy"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e0c3cf13-3a2f-48ba-9831-5879613c5e95",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "check_point",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "check point "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6c314402-f0df-42a5-9e67-f6fd56843683",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "drep",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update-role-drep"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bddf8527-8bfe-4d6b-991b-362a3afb8d37",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "user",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update-role-user"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "72013ef4-5a13-46ae-86b4-a6a41bcda42d",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "holder",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update-role-holder"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ab56ef1-6ef7-492c-93ad-e8c5b4717b90",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "spo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update-role-spo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e40c1de7-1298-4d26-98f2-fd96d35cf199",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "committe",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "update-role-cc"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3d08564a-b898-4950-beb2-c1355f927077",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "api_drepinformation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Drep information "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "778700d2-64e5-49df-a07f-1b224ee368c5",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "DReps_Delegators",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Drep delegators  "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "22104325-b6df-492c-bca2-6e1379bd6085",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "voter_proposal_list",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voter proposal list "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b1f0bb40-0959-45bd-ae6e-cb45e78f3262",
                    "leftValue": "{{ $json.callback_query.data }}",
                    "rightValue": "Drep_voting_power_history",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Drep voting power history "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e748bbec-d0d1-4856-a984-bd63f4ab5a73",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "epoch_params",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Epoch params"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "454b9147-8608-4c53-aff1-b3e937d81e8b",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "api_spoinformation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "spo information "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7cd50a59-9a60-41f4-8ccf-18f0ad2e8f53",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "SPO_voting_power_history",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "spo voting power history"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1fc27fa5-43ae-4542-b704-ac098a2f14b8",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "pool_delegators",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pool delegators "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "01a32ed9-2439-46b0-be1c-5d9a9a9406f7",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "api_CCinformation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CC information "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e45ee9b3-0e0a-4d57-a9db-4374dc91dd31",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "committee_votes",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CC votes"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f350a442-ec72-4e64-84ed-4765abf1bdc5",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "question",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Handle_question "
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1340,
        3720
      ],
      "id": "89d93c41-5ba8-4c78-a180-b014c9ccd98a",
      "name": "Switch Call Back"
    },
    {
      "parameters": {
        "jsCode": "const questions = [\n  \"Hiến pháp Cardano là gì?\",\n  \"Tại sao Cardano cần một hiến pháp?\",\n  \"Ai có thể tham gia vào việc bỏ phiếu trên Cardano?\",\n  \"Làm thế nào để đề xuất thay đổi trên Cardano?\",\n  \"Hiến pháp Cardano có thể thay đổi không?\",\n  \"Voltaire là gì và nó liên quan đến Hiến pháp ra sao?\",\n  \"Quỹ Treasury của Cardano hoạt động như thế nào?\",\n  \"Làm thế nào để tham gia vào việc quản trị Cardano?\",\n  \"Có tổ chức nào giám sát Hiến pháp Cardano không?\",\n  \"Hiến pháp có giúp Cardano chống lại sự kiểm soát tập trung không?\",\n  \"Cardano là gì và nó khác gì so với Bitcoin hoặc Ethereum?\",\n  \"ADA là gì và tại sao nó quan trọng trong hệ sinh thái Cardano?\",\n  \"Staking trên Cardano hoạt động như thế nào và có an toàn không?\",\n  \"Giai đoạn phát triển của Cardano gồm những gì (Byron, Shelley, Goguen, Basho, Voltaire)?\",\n  \"Smart contract trên Cardano là gì và nó được sử dụng để làm gì?\",\n  \"Làm thế nào để mua và lưu trữ ADA một cách an toàn?\",\n  \"Cardano có ưu điểm gì so với các blockchain khác?\",\n  \"Project Catalyst là gì và nó giúp cộng đồng Cardano như thế nào?\",\n  \"Làm thế nào để trở thành một nhà điều hành Pool Staking (SPO) trên Cardano?\",\n  \"Tương lai của Cardano sẽ ra sao với các cập nhật sắp tới?\"\n];\n\n// Chọn ngẫu nhiên 3 câu hỏi không trùng lặp\nconst shuffled = questions.sort(() => 0.5 - Math.random());\nconst selectedQuestions = shuffled.slice(0, 10); // Lấy 3 câu hỏi\n\n// Tạo inline keyboard (trả về đối tượng JSON trực tiếp)\nconst inlineKeyboard = {\n  inline_keyboard: selectedQuestions.map((_, index) => [\n    {\n      text: `${index + 1}`, // Hiển thị số trên button\n      callback_data: `question_${index}` // Gán callback_data với chỉ số\n    }\n  ])\n};\n\n// Tạo định dạng đầu ra cho câu hỏi\nconst formattedQuestions = selectedQuestions\n  .map((question, index) => `${index + 1}. ${question}`)\n  .join('\\n');\n\n// Trả về đối tượng JSON\nreturn [{\n  json: {\n    random_questions: formattedQuestions,\n    reply_markup: inlineKeyboard // Trả về đối tượng thay vì chuỗi\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4900,
        3320
      ],
      "id": "29f510cb-7a25-4993-808f-8c13ea0cfaea",
      "name": "CodeRandom2"
    },
    {
      "parameters": {
        "jsCode": "const questions = [\n  \"What is the Cardano Constitution?\",\n  \"Why does Cardano need a constitution?\",\n  \"Who can participate in voting on Cardano?\",\n  \"How can changes be proposed on Cardano?\",\n  \"Can the Cardano Constitution be changed?\",\n  \"What is Voltaire and how is it related to the Constitution?\",\n  \"How does the Cardano Treasury Fund operate?\",\n  \"How can one participate in Cardano governance?\",\n  \"Is there any organization overseeing the Cardano Constitution?\",\n  \"Does the Constitution help Cardano resist centralized control?\",\n  \"What is Cardano and how does it differ from Bitcoin or Ethereum?\",\n  \"What is ADA and why is it important in the Cardano ecosystem?\",\n  \"How does staking work on Cardano, and is it safe?\",\n  \"What are the development phases of Cardano (Byron, Shelley, Goguen, Basho, Voltaire)?\",\n  \"What are smart contracts on Cardano and what are they used for?\",\n  \"How can one buy and store ADA safely?\",\n  \"What advantages does Cardano have over other blockchains?\",\n  \"What is Project Catalyst and how does it benefit the Cardano community?\",\n  \"How can one become a Stake Pool Operator (SPO) on Cardano?\",\n  \"What is the future of Cardano with upcoming updates?\"\n];\n// Chọn ngẫu nhiên 3 câu hỏi không trùng lặp\nconst shuffled = questions.sort(() => 0.5 - Math.random());\nconst selectedQuestions = shuffled.slice(0, 10); // Lấy 3 câu hỏi\n\n// Tạo inline keyboard (trả về đối tượng JSON trực tiếp)\nconst inlineKeyboard = {\n  inline_keyboard: selectedQuestions.map((_, index) => [\n    {\n      text: `${index + 1}`, // Hiển thị số trên button\n      callback_data: `question_${index}` // Gán callback_data với chỉ số\n    }\n  ])\n};\n\n// Tạo định dạng đầu ra cho câu hỏi\nconst formattedQuestions = selectedQuestions\n  .map((question, index) => `${index + 1}. ${question}`)\n  .join('\\n');\n\n// Trả về đối tượng JSON\nreturn [{\n  json: {\n    random_questions: formattedQuestions,\n    reply_markup: inlineKeyboard // Trả về đối tượng thay vì chuỗi\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4580,
        3540
      ],
      "id": "fa7fdea2-32b5-4673-b487-f1d495a22ec9",
      "name": "CodeRandom3"
    },
    {
      "parameters": {
        "chatId": "={{ $('If_Call_Filter').item.json.callback_query.from.id }}",
        "text": "=✨<b>Chọn một câu hỏi gợi ý để bắt cuộc trò chuyện!</b>\n<i>Vui lòng nhấn vào một số từ 1 đến 10 để xem câu hỏi</i>:\n\n{{ $json.random_questions }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[0][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[0][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[1][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[1][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[2][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[2][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[3][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[3][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[4][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[4][0].callback_data }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[5][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[5][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[6][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[6][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[7][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[7][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[8][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[8][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[9][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[9][0].callback_data }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4600,
        3320
      ],
      "id": "6ccf4734-8fa8-4c0e-b1fe-19b3cc2b8f8d",
      "name": "Mes_Filter_Vi1",
      "webhookId": "b92cfb0e-0616-42d7-9fb9-c3c05dc07ed3",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('If_Call_Filter').item.json.callback_query.from.id }}",
        "text": "=✨<b>Choose a suggested question to start the conversation!</b>\n<i>Please press a number from 1 to 10 to view the question:</i>\n\n{{ $json.random_questions }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[0][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[0][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[1][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[1][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[2][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[2][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[3][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[3][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[4][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[4][0].callback_data }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[5][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[5][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[6][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[6][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[7][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[7][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[8][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[8][0].callback_data }}"
                    }
                  },
                  {
                    "text": "={{ $json.reply_markup.inline_keyboard[9][0].text }}",
                    "additionalFields": {
                      "callback_data": "={{ $json.reply_markup.inline_keyboard[9][0].callback_data }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4320,
        3540
      ],
      "id": "a60561d5-add1-41b3-972c-8c981df211fb",
      "name": "Mes_Filter_EN1",
      "webhookId": "0c8fae5c-5575-4a92-b6a9-254c37cd88a2",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Switch Call Back').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5020,
        4260
      ],
      "id": "a3725474-0cd2-431a-8fd8-55b2341b66d9",
      "name": "If17"
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Thông tin Drep",
                    "additionalFields": {
                      "callback_data": "api_drepinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách ủy quyền cho bạn",
                    "additionalFields": {
                      "callback_data": "DReps_Delegators"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách đã vote của bạn",
                    "additionalFields": {
                      "callback_data": "voter_proposal_list"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Lịch sử quyền biểu quyết của bạn",
                    "additionalFields": {
                      "callback_data": "Drep_voting_power_history"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Thông tin về  epoch",
                    "additionalFields": {
                      "callback_data": "epoch_params"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4800,
        4240
      ],
      "id": "a004fc3f-317d-45f1-8454-ac6cdc34cfde",
      "name": "Telegram29",
      "webhookId": "d5df8205-2ab4-4a84-a3f7-1723bade05a1",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Drep infomation",
                    "additionalFields": {
                      "callback_data": "api_drepinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "List of DReps Delegators",
                    "additionalFields": {
                      "callback_data": "DReps_Delegators"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Voter's Proposal List",
                    "additionalFields": {
                      "callback_data": "voter_proposal_list"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Voting Power History",
                    "additionalFields": {
                      "callback_data": "Drep_voting_power_history"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Information About  Epoch",
                    "additionalFields": {
                      "callback_data": "epoch_params"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5060,
        4080
      ],
      "id": "70f2f982-3e1a-49f8-b477-3461a3c82f24",
      "name": "Telegram30",
      "webhookId": "b845706e-9ccd-4e7b-bb7f-efda7f92845e",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Switch Call Back').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5620,
        5500
      ],
      "id": "e28e0365-5519-4a31-ac21-e5120105f1f9",
      "name": "If18"
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Cập nhật vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Thông tin của SPO",
                    "additionalFields": {
                      "callback_data": "api_spoinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách đã vote của bạn",
                    "additionalFields": {
                      "callback_data": "SPO_voting_power_history"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách người uỷ quyền",
                    "additionalFields": {
                      "callback_data": "pool_delegators"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5440,
        5480
      ],
      "id": "25d3ec5d-c0c1-44d1-ba41-336e80e58bc6",
      "name": "Telegram31",
      "webhookId": "d2c53091-e9e7-42cd-a304-bb71c6956dbc",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Update role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "SPO infomation",
                    "additionalFields": {
                      "callback_data": "api_spoinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Voting Power History",
                    "additionalFields": {
                      "callback_data": "SPO_voting_power_history"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Pool Delegators List",
                    "additionalFields": {
                      "callback_data": "pool_delegators"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5580,
        5340
      ],
      "id": "edccbdb3-27ec-4830-979a-095808c1918f",
      "name": "Telegram32",
      "webhookId": "b37cb9eb-d3a2-4e1b-b4c4-1474de08535a",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Switch Call Back').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5440,
        4980
      ],
      "id": "97452a20-6f67-41f2-ac92-5279e9568fe5",
      "name": "If19"
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: {{ $json.telegramid }}\n-Tên tài khoản: {{ $json.username }}\n-Ngày tham gia: {{ $json.joindate }}\n-Trạng thái: {{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}\n-Vai trò: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Không xác định\"\n}}\n-Nhận thông báo: {{ $json.allownoti ? \"Bật\" : \"Tắt\"}}\n-Điểm thưởng: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Thông báo: <b>Đăng ký nhận thông báo khi có đề xuất mới</b>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Cập nhật vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Thông tin ủy ban",
                    "additionalFields": {
                      "callback_data": "api_CCinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Danh sách đã vote của ủy ban",
                    "additionalFields": {
                      "callback_data": "committee_votes"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5240,
        4960
      ],
      "id": "09ce8d34-7ba5-47d0-90d7-56653f9d70e6",
      "name": "Telegram33",
      "webhookId": "435996df-be3a-4cf4-8a2d-05b7bd97d753",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: {{ $json.telegramid }}\n-Username: {{ $json.username }}\n-Join date: {{ $json.joindate }}\n-Status: {{ $json.isactive ? \"Active\" : \"Inactive\"}}\n-Role: {{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}\n-Notifications: {{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}\n-Points: {{ $json.point ?? 0}} BBO\n-Onchain ID: {{ $json.onchainId ?? null }}\n\n🐳Notifications: <b>Sign up to receive notifications when new proposals are available</b>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳 Update role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Committee Information",
                    "additionalFields": {
                      "callback_data": "api_CCinformation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Committee Votes",
                    "additionalFields": {
                      "callback_data": "committee_votes"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5540,
        4820
      ],
      "id": "ea3d0f79-62fd-4f1d-bcdd-e389d5b481c4",
      "name": "Telegram34",
      "webhookId": "15fe2555-b56f-4f1d-ace9-5afec6184a17",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e4086e-36ff-48cf-a434-15d2a89a4b3b",
              "leftValue": "={{ $('Switch Call Back').item.json.callback_query.from.language_code }}",
              "rightValue": "vi",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5700,
        5980
      ],
      "id": "e27953d7-e79f-4cff-af49-41c244c9fbed",
      "name": "If20"
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Thông tin tài khoản:</b>✨\n\n-Mã định danh: <i>{{ $json.telegramid }}</i>\n-Tên tài khoản: <i>{{ $json.username }}</i>\n-Ngày tham gia: <i>{{ $json.joindate }}</i>\n-Trạng thái: <i>{{ $json.isactive ? \"Hoạt động\" : \"Ngưng hoạt động\"}}</i>\n-Vai trò: <i>{{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}</i>\n-Nhận thông báo: <i>{{ $json.allownoti ? \"Bật\" : \"Tắt\"}}</i>\n-Điểm thưởng: <i>{{ $json.point ?? 0}} BBO</i>\n-Onchain ID: <i>{{ $json.onchainId ?? null }}</i>\n\n🐳Vai trò: <i>Cập nhật vai trò tham gia</i>\n🐳Thông báo: <i>Đăng ký nhận thông báo khi có đề xuất mới</i>\n  🟢Nhận thông báo\n  🔴Tắt thông báo",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Vai trò",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Nhận thông báo  ",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": "🔴Tắt thông báo",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Quy tắc tính điểm",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5520,
        5960
      ],
      "id": "85b6534c-61ab-493c-a312-ce8bcf34d4f5",
      "name": "Telegram35",
      "webhookId": "28883fa4-e4bd-42a8-a844-28d307e10680",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch-Account').item.json.telegramid }}",
        "text": "=✨<b>Account information:</b>✨\n\n-Identifier: <i>{{ $json.telegramid }}</i>\n-Username: <i>{{ $json.username }}</i>\n-Join date: <i>{{ $json.joindate }}</i>\n-Status: <i>{{ $json.isactive ? \"Active\" : \"Inactive\"}}</i>\n-Role: <i>{{ \n  $json.roleid == 2 ? \"Drep\" : \n  $json.roleid == 3 ? \"User\" : \n  $json.roleid == 4 ? \"SPO\" : \n  $json.roleid == 5 ? \"Holder\" : \n  $json.roleid == 6 ? \"Committe\" : \n  \"Unidentified \"\n}}</i>\n-Notifications: <i>{{ $json.allownoti ? \"Turn on\" : \"Turn off\"}}</i>\n-Points: <i>{{ $json.point ?? 0}} BBO</i>\n-Onchain ID: <i>{{ $json.onchainId ?? null }}</i>\n\n🐳Notifications: <i>Sign up to receive notifications when new proposals are available</i>\n  🟢Turn on\n  🔴Turn off",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "🐳Role",
                    "additionalFields": {
                      "callback_data": "role"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "  🟢Turn on",
                    "additionalFields": {
                      "callback_data": "turn_on"
                    }
                  },
                  {
                    "text": " 🔴Turn off",
                    "additionalFields": {
                      "callback_data": "turn_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "🤖Score calculation",
                    "additionalFields": {
                      "callback_data": "rulebbo_point"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5760,
        5780
      ],
      "id": "8ddef13f-df23-40be-85fa-85384485f237",
      "name": "Telegram36",
      "webhookId": "bdfd3cdd-5a3e-4b9f-907b-e22d87e3c10d",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "48209589-e551-46e4-925a-3525424b77b6"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DREP"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "62a4b49c-98c0-471e-9d74-deca7155d523",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 4,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SPO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fe802ac8-f0c9-4750-8340-1039766562f8",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 6,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Committe"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "97a85122-7ba0-440b-acef-92377e6aada8",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "User"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "65be1f11-cd8f-4b6d-82a2-71d00f3c536e",
                    "leftValue": "={{ $json.roleid }}",
                    "rightValue": 5,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "holder"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -5520,
        4280
      ],
      "id": "cab9c4d3-84a1-4f96-94e8-28ca27bc6e05",
      "name": "Switch-Account"
    },
    {
      "parameters": {
        "content": "",
        "height": 480,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5760,
        3260
      ],
      "id": "a9ca3a20-3afc-41a8-9553-60b1faabd185",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "",
        "height": 480,
        "width": 900,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5020,
        3260
      ],
      "id": "5b4fc5b9-7243-420c-b917-9a0fd4237d94",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "",
        "height": 480,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4000,
        3260
      ],
      "id": "731bb747-518f-4276-a512-1c7f216d9791",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "",
        "height": 480,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3240,
        3260
      ],
      "id": "ab67029e-b46f-46a6-900f-5eb57e65557e",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "",
        "height": 480,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2500,
        3260
      ],
      "id": "b2ce9ad4-d34a-41ab-83f8-3cfb0b29430b",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "",
        "height": 2240,
        "width": 1460,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5980,
        3980
      ],
      "id": "744c7c41-a58d-42a6-bb37-56c70b9a55f0",
      "name": "Sticky Note23"
    },
    {
      "parameters": {
        "content": "",
        "height": 1580,
        "width": 920,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4440,
        4640
      ],
      "id": "1b337295-f45b-4c20-b12e-5b498acc28d2",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT EXISTS (\n    SELECT 1 FROM bbo_user WHERE telegramid = {{ $('Telegram Trigger').item.json.message.chat.id }}\n) AS user_exists;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2280,
        2500
      ],
      "id": "81857929-3518-4d52-ae6b-7a2d83ed58bc",
      "name": "check_exist",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "user_questions",
          "mode": "list",
          "cachedResultName": "user_questions"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "chat_id": "={{ $json.result.chat.id }}",
            "selected_questions": "={{ $('CodeRandom1').item.json.selected_questions }}",
            "message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "selected_questions",
              "displayName": "selected_questions",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "expires_at",
              "displayName": "expires_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2380,
        1320
      ],
      "id": "6851edf1-987d-400e-a11d-4f3fbce71d9b",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT selected_questions FROM user_questions WHERE chat_id = {{ $('Telegram Trigger').item.json.callback_query.message.chat.id }} and message_id = {{ $('Telegram Trigger').item.json.callback_query.message.message_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1720,
        1960
      ],
      "id": "c7444056-4407-48d0-862f-e6caec5a3980",
      "name": "ExecuteQuestions",
      "credentials": {
        "postgres": {
          "id": "y0YF1F4MKK5YeslP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.from.id }}",
        "text": "Typing...",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1240,
        1960
      ],
      "id": "1fb6ec34-3259-40ed-a41f-28b981435890",
      "name": "Telegram37",
      "webhookId": "eecaad9f-63b6-4eb0-bcae-b9ec1bf713df",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Telegram37').item.json.result.chat.id }}",
        "messageId": "={{ $('Telegram37').item.json.result.message_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -600,
        1960
      ],
      "id": "2b735537-80f4-4699-848d-006f51d730a0",
      "name": "Telegram38",
      "webhookId": "4628e7af-4c1a-44b9-9273-d59f98804f8a",
      "credentials": {
        "telegramApi": {
          "id": "Jo4kWcVNJK0H8Qnp",
          "name": "Governance account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 660,
        "width": 1840,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1820,
        1820
      ],
      "id": "22e03570-0a8d-4b5d-bc93-2a2798a418bc",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "const data = $('Telegram Trigger').first().json.callback_query.data;\n\nconst index = parseInt(data.split('_')[1]);\n\nconst selectedQuestions = $input.first().json.selected_questions;\n\nconst result = selectedQuestions[index];\n\nreturn [{ json: { question: result } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1500,
        1960
      ],
      "id": "52e35e13-a98b-4bba-a1af-e56e82e3b080",
      "name": "Code7"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        -800,
        2320
      ],
      "id": "c6ae3746-fc3a-4222-8a19-ffe180e575eb",
      "name": "Embeddings Ollama",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -240,
        2300
      ],
      "id": "5f7360a7-c61c-4ec5-a960-bbfd87f31b22",
      "name": "Ollama Chat Model",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -960,
        2080
      ],
      "id": "5d67adb4-401b-498c-8b93-b80ba057b00e",
      "name": "Ollama Chat Model1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        2600,
        3160
      ],
      "id": "e2b16bf7-9f9b-41e1-9b96-4ccbed9ce158",
      "name": "Ollama Chat Model2",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        3180,
        3400
      ],
      "id": "d6a6d601-2326-4402-aa42-334134e8d1b4",
      "name": "Ollama Chat Model3",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        2600,
        3400
      ],
      "id": "d7f773a8-5790-453e-80dd-196d5bc77cf6",
      "name": "Embeddings Ollama1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -3040,
        5120
      ],
      "id": "f5270baf-a9f0-46a6-9a40-d79c60b007a0",
      "name": "Ollama Chat Model4",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2980,
        6840
      ],
      "id": "8265ff73-38d9-440c-b7cb-01015f55870c",
      "name": "Ollama Chat Model5",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2960,
        7180
      ],
      "id": "63fc2d6a-3711-4cd8-973e-2748b303c196",
      "name": "Ollama Chat Model6",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2960,
        7500
      ],
      "id": "48cd8380-54fd-4309-9dc6-2f088c770a09",
      "name": "Ollama Chat Model7",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2920,
        7940
      ],
      "id": "94ab877a-2fcd-43bc-8db0-5a3d38a76771",
      "name": "Ollama Chat Model8",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2920,
        8260
      ],
      "id": "28054ae1-2169-46bf-bf30-0f63a9bd46f7",
      "name": "Ollama Chat Model9",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2980,
        6100
      ],
      "id": "566fd6b1-8391-4945-af46-22c96d903875",
      "name": "Ollama Chat Model10",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2980,
        6440
      ],
      "id": "eed267b7-d9b8-4220-96e8-2d99b1291a79",
      "name": "Ollama Chat Model11",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2980,
        5460
      ],
      "id": "ece74c48-09d6-44d7-b3d1-29e55a975a83",
      "name": "Ollama Chat Model12",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -2900,
        5760
      ],
      "id": "273e8078-e4a2-41d0-9a2e-e094d8f7577f",
      "name": "Ollama Chat Model13",
      "disabled": true
    }
  ],
  "pinData": {},
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "Telegram27",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Lang_Start",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Lang_Help",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Find",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Telegram28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "If_Lang_Start": {
      "main": [
        [
          {
            "node": "Mes_Start_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Start_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Lang_Help": {
      "main": [
        [
          {
            "node": "Mes_Help_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Help_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Command": {
      "main": [
        [
          {
            "node": "Mes_Com_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mes_Com_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Find": {
      "main": [
        [
          {
            "node": "CodeRandom",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CodeRandom1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Call_Help": {
      "main": [
        [
          {
            "node": "Help_Vi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Help_En",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Call_Filter": {
      "main": [
        [
          {
            "node": "CodeRandom2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CodeRandom3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Telegram38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Start_Vi": {
      "main": [
        [
          {
            "node": "check_exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Start_En": {
      "main": [
        [
          {
            "node": "check_exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_exist": {
      "main": [
        [
          {
            "node": "Insert_user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Switch-Account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Telegram4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Telegram7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram7": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram8": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Feedback",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Feedback1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres6": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Telegram6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres7": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Telegram6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Postgres8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres8": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Postgres9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres9": {
      "main": [
        [
          {
            "node": "codefunction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Telegram11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "codefunction": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger2": {
      "main": [
        [
          {
            "node": "GetStoredProposals1",
            "type": "main",
            "index": 0
          },
          {
            "node": "GetProposals1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetProposals1": {
      "main": [
        [
          {
            "node": "CompareProposals1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetStoredProposals1": {
      "main": [
        [
          {
            "node": "jsonconvertold",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CompareProposals1": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "newProposal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_convert": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Google Drive1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive1": {
      "main": [
        [
          {
            "node": "Postgres10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres10": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Telegram12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "jsonconvertold": {
      "main": [
        [
          {
            "node": "set_convert1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_convert1": {
      "main": [
        [
          {
            "node": "CodeConvert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CodeConvert": {
      "main": [
        [
          {
            "node": "CompareProposals1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "newProposal": {
      "main": [
        [
          {
            "node": "set_convert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents1": {
      "ai_tool": [
        []
      ]
    },
    "Supabase Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents1",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Telegram10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Telegram13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Telegram14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "ai_tool": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Message_Response2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent5": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "ai_tool": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres13": {
      "main": [
        [
          {
            "node": "AI Agent5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent4": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent6": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "ai_tool": [
        [
          {
            "node": "AI Agent6",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Telegram19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent7": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "ai_tool": [
        [
          {
            "node": "AI Agent7",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent8": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "ai_tool": [
        [
          {
            "node": "AI Agent8",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "Message_Response6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent9": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request6": {
      "ai_tool": [
        [
          {
            "node": "AI Agent9",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres17": {
      "main": [
        [
          {
            "node": "AI Agent9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Telegram21",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent10": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "ai_tool": [
        [
          {
            "node": "AI Agent10",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent11": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "ai_tool": [
        [
          {
            "node": "AI Agent11",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "Message_Response9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres19": {
      "main": [
        [
          {
            "node": "AI Agent10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request9": {
      "ai_tool": [
        [
          {
            "node": "AI Agent12",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent12": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Telegram17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram17": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram18": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "Postgres14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory4": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "Telegram23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert_user": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "Telegram24",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres15": {
      "main": [
        [
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres16": {
      "main": [
        [
          {
            "node": "AI Agent4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres18": {
      "main": [
        [
          {
            "node": "AI Agent6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres20": {
      "main": [
        [
          {
            "node": "AI Agent12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres22": {
      "main": [
        [
          {
            "node": "AI Agent7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres21": {
      "main": [
        [
          {
            "node": "AI Agent8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres23": {
      "main": [
        [
          {
            "node": "AI Agent11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Call Back",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CodeRandom": {
      "main": [
        [
          {
            "node": "Mes_Filter_Vi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CodeRandom1": {
      "main": [
        [
          {
            "node": "Mes_Filter_EN",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram27": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram28": {
      "main": [
        [
          {
            "node": "Message_Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Call Back": {
      "main": [
        [
          {
            "node": "If_Call_Help",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Call_Filter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres15",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres22",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres21",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres23",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ExecuteQuestions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CodeRandom3": {
      "main": [
        [
          {
            "node": "Mes_Filter_EN1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CodeRandom2": {
      "main": [
        [
          {
            "node": "Mes_Filter_Vi1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Telegram29",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If18": {
      "main": [
        [
          {
            "node": "Telegram31",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "Telegram33",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If20": {
      "main": [
        [
          {
            "node": "Telegram35",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch-Account": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_exist": {
      "main": [
        [
          {
            "node": "If_exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Filter_Vi": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes_Filter_EN": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ExecuteQuestions": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram37": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram38": {
      "main": [
        [
          {
            "node": "Message_Response1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Telegram37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model12": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model13": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model10": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent6",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model11": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent12",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent9",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent7",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model7": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent8",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model8": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent10",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model9": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent11",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0c3bebaa-bb7c-4b9e-9491-96568bd758fe",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ddc78abf6d26c6050fafb0ba452cf56a55cb8482e5cde128d75a821055f99c24"
  },
  "id": "u1K0aAiIBZaCxNSS",
  "tags": [
    {
      "createdAt": "2025-05-28T16:33:50.281Z",
      "updatedAt": "2025-05-28T16:33:50.281Z",
      "id": "nFCOvmvILXOLrinD",
      "name": "Backup"
    },
    {
      "createdAt": "2025-05-28T16:34:00.056Z",
      "updatedAt": "2025-05-28T16:34:00.056Z",
      "id": "uqZbfO91vYEeojaD",
      "name": "Chatbot"
    }
  ]
}
